###########################################
#                                         #
# M&M Monastic Artifacts Events           #
#                                         #
# ID MNM.9000-MNM.9999		              #
#                                         #
###########################################

#IDs:
#9000-9199 Mathilda
#9200-9399 Henrik / Milla
#9400-9599 David
#9600-9799 Drikus
#9800-9898 Axel
#9899-9999 Joel

namespace = MNM

# #Sends rumors
# character_event = {
	# id = MNM.9000
	# hide_window = yes

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# min_age = 13
	# only_playable = yes
	# only_capable = yes
	# prisoner = no

	# trigger = { 
		# any_courtier_or_vassal = {
			# NOT = { trait = incapable }
			# prisoner = no
			# opinion = { who = ROOT value = 20 }
			# is_councillor = yes
			# ai = yes
		# }
		# NOR = {
			# has_character_modifier = relic_rumor_major
			# has_character_modifier = relic_rumor_medium
			# has_character_modifier = relic_rumor_minor
		# }
		# NOR = {
			# religion = zun_pagan
			# religion = zun_pagan_reformed
			# religion = pagan
			# religion = hellenic_pagan
	# }
	# }

	# immediate = {
		# random_courtier_or_vassal = {
			# limit = {
				# NOT = { trait = incapable }
				# prisoner = no
				# opinion = { who = ROOT value = 20 }
				# is_councillor = yes
				# ai = yes
			# }
			# save_event_target_as = rumor_councillor
		# }
		# save_event_target_as = relic_ruler
		# random_list = {
			# 1 = { #Epic rumor
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = christian
						# has_artifact = spear_of_destiny
						# has_artifact = bones_of_st_peter
						# has_artifact = staff_of_moses
						# has_artifact = davids_harp
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = jewish_group
						# has_artifact = staff_of_moses
						# has_artifact = davids_harp
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = muslim
						# has_artifact = staff_of_moses
						# has_artifact = davids_harp
						# has_artifact = seal_of_mohammad
						# has_artifact = holy_banner_of_mohammad
						# has_artifact = blessed_mantle
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = zoroastrian_group
						# has_artifact = cup_of_jamshid
						# has_artifact = babr_e_bayan
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = indian_group
						# has_artifact = buddhas_tooth
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# OR = {
							# religion = norse_pagan
							# religion = norse_pagan_reformed
						# }
						# has_artifact = mjolnir
						# has_artifact = andvaranaut
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# OR = {
							# religion = west_african_pagan
							# religion = west_african_pagan_reformed
						# }
						# has_artifact = fetish_of_souls
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# OR = {
							# religion = finnish_pagan
							# religion = finnish_pagan_reformed
						# }
						# has_artifact = sampo
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# OR = {
							# religion = slavic_pagan
							# religion = slavic_pagan_reformed
						# }
						# has_artifact = axe_of_perun
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# OR = {
							# religion = baltic_pagan
							# religion = baltic_pagan_reformed
						# }
						# has_artifact = axe_of_perkunas
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# OR = {
							# religion = tengri_pagan
							# religion = tengri_pagan_reformed
						# }
						# has_artifact = yada_tashy
					# }
				# }
				# event_target:rumor_councillor = { character_event = { id = MNM.9001 } } 
			# }
			# 3 = { #Good rumor
				# modifier = { 
					# factor = 0 
					# OR = {
						# religion = finnish_pagan
						# religion = finnish_pagan_reformed
						# religion = slavic_pagan
						# religion = slavic_pagan_reformed
						# religion = baltic_pagan
						# religion = baltic_pagan_reformed
						# religion = tengri_pagan
						# religion = tengri_pagan_reformed
					# } 
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = christian
						# has_artifact = crown_of_thorns
						# has_artifact = seamless_robe_of_jesus
						# has_artifact = fragment_of_true_cross
						# has_artifact = holy_foreskin
						# has_artifact = seal_of_solomon
						# has_artifact = image_of_edessa
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = jewish_group
						# has_artifact = seal_of_solomon
						# has_artifact = tabernacle
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = muslim
						# has_artifact = seal_of_solomon
						# has_artifact = sword_of_mohammad
						# has_artifact = letter_of_mohammad
						# has_artifact = blessed_sandals
						# has_artifact = cloak_of_mohammad
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = zoroastrian_group
						# has_artifact = derafsh_kaviani
						# has_artifact = cyrus_cylinder
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = indian_group
						# has_artifact = mountain_of_light_diamond
						# has_artifact = elaborate_danda
						# has_artifact = sarira
						# has_artifact = sariraka_actual_body_part
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# OR = {
							# religion = norse_pagan
							# religion = norse_pagan_reformed
						# }
						# has_artifact = gjallarhorn
					# }
				# }
				# event_target:rumor_councillor = { character_event = { id = MNM.9002 } }
			# } 
			# 6 = { #Weak rumor
				# modifier = { 
					# factor = 0 
					# AND = {
						# religion_group = pagan_group 
						# has_artifact = famous_head
						# has_artifact = famous_tongue
						# has_artifact = infamous_tongue
						# has_artifact = famous_hand
						# has_artifact = famous_arm
						# has_artifact = famous_foot
						# has_artifact = famous_ancient_weapon
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = christian
						# has_artifact = fingerbone_of_saint
						# has_artifact = famous_head
						# has_artifact = famous_tongue
						# has_artifact = infamous_tongue
						# has_artifact = famous_hand
						# has_artifact = famous_arm
						# has_artifact = famous_foot
						# has_artifact = famous_ancient_weapon
						# has_artifact = chains_of_st_peter
						# has_artifact = right_hand_st_demetrius
						# has_artifact = veil_of_veronica
						# has_artifact = remains_of_st_cessianus
						# has_artifact = weeping_statue
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = jewish_group
						# has_artifact = famous_head
						# has_artifact = famous_tongue
						# has_artifact = infamous_tongue
						# has_artifact = famous_hand
						# has_artifact = famous_arm
						# has_artifact = famous_foot
						# has_artifact = famous_ancient_weapon
						# has_artifact = davids_sling
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = muslim
						# has_artifact = mohammads_beard
						# OR = {
							# has_artifact = blessed_mantle #safeguard so you don't end up with two waters
							# has_artifact = water_of_blessed_mantle
						# }
						# has_artifact = famous_head
						# has_artifact = famous_tongue
						# has_artifact = infamous_tongue
						# has_artifact = famous_hand
						# has_artifact = famous_arm
						# has_artifact = famous_foot
						# has_artifact = famous_ancient_weapon
						# has_artifact = mohammads_bowl
						# has_artifact = tooth_of_mohammad
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = zoroastrian_group
						# has_artifact = haoma_sapling
						# has_artifact = keshmar_cypress_branch
						# has_artifact = famous_head
						# has_artifact = famous_tongue
						# has_artifact = infamous_tongue
						# has_artifact = famous_hand
						# has_artifact = famous_arm
						# has_artifact = famous_foot
						# has_artifact = famous_ancient_weapon
					# }
				# }
				# modifier = {
					# factor = 0
					# AND = {
						# religion_group = indian_group
						# has_artifact = famous_head
						# has_artifact = famous_tongue
						# has_artifact = infamous_tongue
						# has_artifact = famous_hand
						# has_artifact = famous_arm
						# has_artifact = famous_foot
						# has_artifact = famous_ancient_weapon
					# }
				# }
				# event_target:rumor_councillor = { character_event = { id = MNM.9003 } }
			# } 
			# 90 = { #AI is less likely to find artifacts
				# modifier = { factor = 0 ai = no }
			# } 
		# }
	# }
# }

# #Ping events for rumors
# character_event = {
	# id = MNM.9001
	# hide_window = yes
	# is_triggered_only = yes
    # has_dlc = "Mystics"
	# immediate = { event_target:relic_ruler = { character_event = { id = MNM.9004 } } }
# }

# character_event = {
	# id = MNM.9002
	# hide_window = yes
	# is_triggered_only = yes
    # has_dlc = "Mystics"
	# immediate = { event_target:relic_ruler = { character_event = { id = MNM.9005 } } }
# }

# character_event = {
	# id = MNM.9003
	# hide_window = yes
	# is_triggered_only = yes
    # has_dlc = "Mystics"
	# immediate = { event_target:relic_ruler = { character_event = { id = MNM.9006 } } }
# }

# #Rumors
# character_event = {
	# id = MNM.9004
	# desc = EVTDESC_MNM_9004
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_religion

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9004
		# custom_tooltip = { text = EVTOPTA_MNM_9004_TT }
		# add_character_modifier = {
			# name = relic_rumor_major
			# years = 20
		# }
		# add_artifact_search_payment_effect = yes
		# hidden_effect = {
			# #Start searching
			# FROM = {
				# set_character_flag = relic_hunter
				# save_event_target_as = relic_hunter
				# character_event = { id = MNM.9007 days = 1 }
			# } 
		# }
		# ai_chance = { factor = 100 }
	# }

	# option = {
		# name = EVTOPTB_MNM_9004
		# custom_tooltip = { text = EVTOPTB_MNM_9004_TT }
		# add_character_modifier = {
			# name = relic_rumor_major
			# years = 20
		# }
	# }

	# after = {
		# hidden_effect = { set_variable = { which = relic_score value = 0 } }
		# opinion = {
			# who = FROM
			# modifier = opinion_grateful
			# years = 20
		# }
	# }
# }

# character_event = {
	# id = MNM.9005
	# desc = EVTDESC_MNM_9005
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_religion

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9005
		# custom_tooltip = { text = EVTOPTA_MNM_9005_TT }
		# add_character_modifier = {
			# name = relic_rumor_medium
			# years = 20
		# }
		# add_artifact_search_payment_effect = yes
		# hidden_effect = {
			# #Start searching
			# FROM = {
				# set_character_flag = relic_hunter
				# save_event_target_as = relic_hunter
				# character_event = { id = MNM.9007 days = 1 }
			# } 
		# }
		# ai_chance = { factor = 100 }
	# }

	# option = {
		# name = EVTOPTB_MNM_9005
		# custom_tooltip = { text = EVTOPTB_MNM_9005_TT }
		# add_character_modifier = {
			# name = relic_rumor_medium
			# years = 20
		# }
	# }

	# after = {
		# hidden_effect = { set_variable = { which = relic_score value = 0 } }
		# opinion = {
			# who = FROM
			# modifier = opinion_grateful
			# years = 15
		# }
	# }
# }

# character_event = {
	# id = MNM.9006
	# desc = EVTDESC_MNM_9006
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_religion

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9006
		# custom_tooltip = { text = EVTOPTA_MNM_9006_TT }
		# add_character_modifier = {
			# name = relic_rumor_minor
			# years = 10
		# }
		# add_artifact_search_payment_effect = yes
		# hidden_effect = {
			# #Start searching
			# FROM = {
				# set_character_flag = relic_hunter
				# save_event_target_as = relic_hunter
				# character_event = { id = MNM.9007 days = 1 }
			# } 
		# }
		# ai_chance = { factor = 100 }
	# }

	# option = {
		# name = EVTOPTB_MNM_9006
		# custom_tooltip = { text = EVTOPTB_MNM_9006_TT }
		# add_character_modifier = {
			# name = relic_rumor_minor
			# years = 10
		# }
	# }

	# after = {
		# hidden_effect = { set_variable = { which = relic_score value = 0 } }
		# opinion = {
			# who = FROM
			# modifier = opinion_grateful
			# years = 10
		# }
	# }
# }

# #Person you sent out starts searching
# character_event = {
	# id = MNM.9007
	# hide_window = yes

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# immediate = {
		# if = { #Stop hunting for relics
			# limit = {
				# OR = {
					# is_alive = no
					# NOT = { has_character_flag = relic_hunter }
					# is_councillor = no
					# trait = incapable
					# prisoner = yes
					# liege = { NOT = { character = event_target:relic_ruler } } 
					# liege = {
						# NOR = {
							# has_character_modifier = relic_rumor_major
							# has_character_modifier = relic_rumor_medium
							# has_character_modifier = relic_rumor_minor
						# }
					# }
				# }
			# }
			# if = {
				# limit = { has_character_flag = relic_hunter }
				# event_target:relic_ruler = { character_event = { id = MNM.9009 } }
			# }
			# if = {
				# limit = { NOT = { has_character_flag = relic_hunter } }
				# clr_artifact_searcher_effect = yes
			# }
			# break = yes
		# }

		# #If relic is found...
		# if = {
			# limit = { 
				# OR = {
					# AND = {
						# event_target:relic_ruler = { check_variable = { which = relic_score value = 15 } }
						# event_target:relic_ruler = { has_character_modifier = relic_rumor_minor } 
					# }
					# AND = {
						# event_target:relic_ruler = { check_variable = { which = relic_score value = 25 } }
						# event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } 
					# }
					# AND = {
						# event_target:relic_ruler = { check_variable = { which = relic_score value = 40 } }
						# event_target:relic_ruler = { has_character_modifier = relic_rumor_major } 
					# }
				# }
			# }
			# character_event = { id = MNM.9008 } #Relic tombola
		# }
		# #If relic isn't found...
		# if = {
			# limit = { 
				# NOR = {
					# AND = {
						# event_target:relic_ruler = { check_variable = { which = relic_score value = 15 } }
						# event_target:relic_ruler = { has_character_modifier = relic_rumor_minor } 
					# }
					# AND = {
						# event_target:relic_ruler = { check_variable = { which = relic_score value = 25 } }
						# event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } 
					# }
					# AND = {
						# event_target:relic_ruler = { check_variable = { which = relic_score value = 40 } }
						# event_target:relic_ruler = { has_character_modifier = relic_rumor_major } 
					# }
				# }
			# }

			# #Outcome of this search
			# random_list = {
				# 10 = { #Search through diplomacy
					# modifier = { factor = 5 has_job_title = job_chancellor }
					# modifier = { factor = 3 diplomacy = 10 }
					# random_list = {
						# 15 = { #Passive points gain
							# modifier = { factor = 1.5 has_job_title = job_chancellor }
							# modifier = { factor = 1.4 diplomacy = 12 }	
							# modifier = { factor = 1.4 diplomacy = 15 }	
							# modifier = { factor = 1.4 diplomacy = 18 }	
							# modifier = { factor = 1.5 has_pleasant_personality_trigger = yes }
							# event_target:relic_ruler = { change_variable = { which = relic_score value = 1 } }
						# } 
						# 2 = { #Ask for help
							# modifier = { factor = 1.5 has_job_title = job_chancellor }	
							# modifier = { factor = 1.4 diplomacy = 12 }
							# modifier = { factor = 0 event_target:relic_ruler = { has_character_modifier = treasure_hunting_diplomats } }
							# event_target:relic_ruler = { character_event = { id = MNM.9020 } }
						# } 
						# 10 = { #Setback
							# modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							# modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							# modifier = { factor = 1.5 NOT = { has_job_title = job_chancellor } }
							# modifier = { factor = 1.5 is_dumb_trigger = yes }
							# modifier = { factor = 2.5 NOT = { diplomacy = 8 } } 
							# event_target:relic_ruler = { change_variable = { which = relic_score value = -1 } }
						# }
						# 1 = { #Unfortunate accident
							# modifier = { factor = 1.5 NOT = { has_job_title = job_chancellor } }
							# modifier = { factor = 1.5 NOT = { diplomacy = 8 } } 
							# modifier = { factor = 0 ai = no }
							# event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						# } 
					# }
				# }
				# 10 = { #Search through martial
					# modifier = { factor = 5 has_job_title = job_marshal }
					# modifier = { factor = 3 martial = 10 }
					# random_list = {
						# 15 = { #Passive points gain
							# modifier = { factor = 1.5 has_job_title = job_marshal }
							# modifier = { factor = 1.4 martial = 12 }	
							# modifier = { factor = 1.4 martial = 15 }	
							# modifier = { factor = 1.4 martial = 18 }	
							# modifier = { factor = 1.4 trait = brave }
							# modifier = { factor = 1.4 combat_rating = 20 }
							# event_target:relic_ruler = { change_variable = { which = relic_score value = 1 } }
						# } 
						# 2 = { #Ask for help
							# modifier = { factor = 1.5 has_job_title = job_marshal }	
							# modifier = { factor = 1.4 martial = 12 }
							# modifier = { factor = 0 event_target:relic_ruler = { has_character_modifier = treasure_hunting_soldiers } }
							# event_target:relic_ruler = { character_event = { id = MNM.9021 } }
						# } 
						# 10 = { #Setback
							# modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							# modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							# modifier = { factor = 1.5 is_dumb_trigger = yes }
							# modifier = { factor = 1.5 NOT = { has_job_title = job_marshal } }
							# modifier = { factor = 2.5 NOT = { martial = 8 } } 
							# event_target:relic_ruler = { change_variable = { which = relic_score value = -1 } }
						# }
						# 1 = { #Unfortunate accident
							# modifier = { factor = 1.5 NOT = { has_job_title = job_marshal } }
							# modifier = { factor = 1.5 NOT = { martial = 8 } } 
							# modifier = { factor = 1.5 NOT = { combat_rating = 0 } } 
							# modifier = { factor = 0 ai = no }
							# event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						# } 
					# }
				# }
				# 10 = { #Search through stewardship
					# modifier = { factor = 5 has_job_title = job_treasurer }
					# modifier = { factor = 3 stewardship = 10 }
					# random_list = {
						# 15 = { #Passive points gain
							# modifier = { factor = 1.5 has_job_title = job_treasurer }
							# modifier = { factor = 1.4 stewardship = 12 }	
							# modifier = { factor = 1.4 stewardship = 15 }	
							# modifier = { factor = 1.4 stewardship = 18 }	
							# modifier = { factor = 1.4 monthly_income = 3 }
							# event_target:relic_ruler = { change_variable = { which = relic_score value = 1 } }
						# } 
						# 2 = { #Ask for help
							# modifier = { factor = 1.5 has_job_title = job_treasurer }	
							# modifier = { factor = 1.4 stewardship = 12 }
							# modifier = { factor = 0 event_target:relic_ruler = { has_character_modifier = treasure_hunting_stewards } }
							# event_target:relic_ruler = { character_event = { id = MNM.9022 } }
						# } 
						# 10 = { #Setback
							# modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							# modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							# modifier = { factor = 1.5 is_dumb_trigger = yes }
							# modifier = { factor = 1.5 NOT = { has_job_title = job_treasurer } }
							# modifier = { factor = 2.5 NOT = { stewardship = 8 } } 
							# event_target:relic_ruler = { change_variable = { which = relic_score value = -1 } }
						# }
						# 1 = { #Unfortunate accident
							# modifier = { factor = 1.5 NOT = { has_job_title = job_treasurer } }
							# modifier = { factor = 1.5 NOT = { stewardship = 8 } } 
							# modifier = { factor = 0 ai = no }
							# event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						# } 
					# }
				# }
				# 10 = { #Search through intrigue
					# modifier = { factor = 5 has_job_title = job_spymaster }
					# modifier = { factor = 3 intrigue = 10 }
					# random_list = {
						# 15 = { #Passive points gain
							# modifier = { factor = 1.5 has_job_title = job_spymaster }
							# modifier = { factor = 1.4 intrigue = 12 }	
							# modifier = { factor = 1.4 intrigue = 15 }	
							# modifier = { factor = 1.4 intrigue = 18 }	
							# modifier = { factor = 1.4 has_unpleasant_personality_trigger = yes }
							# event_target:relic_ruler = { change_variable = { which = relic_score value = 1 } }
						# } 
						# 2 = { #Ask for help
							# modifier = { factor = 1.5 has_job_title = job_spymaster }	
							# modifier = { factor = 1.4 intrigue = 12 }
							# modifier = { factor = 0 event_target:relic_ruler = { has_character_modifier = treasure_hunting_spies } }
							# event_target:relic_ruler = { character_event = { id = MNM.9023 } }
						# } 
						# 10 = { #Setback
							# modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							# modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							# modifier = { factor = 1.5 is_dumb_trigger = yes }
							# modifier = { factor = 1.5 NOT = { has_job_title = job_spymaster } }
							# modifier = { factor = 2.5 NOT = { intrigue = 8 } } 
							# event_target:relic_ruler = { change_variable = { which = relic_score value = -1 } }
						# }
						# 1 = { #Unfortunate accident
							# modifier = { factor = 1.5 NOT = { has_job_title = job_spymaster } }
							# modifier = { factor = 1.5 NOT = { intrigue = 8 } } 
							# modifier = { factor = 0 ai = no }
							# event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						# } 
					# }
				# }	
				# 10 = { #Search through learning
					# modifier = { factor = 5 has_job_title = job_physician }
					# modifier = { factor = 3 learning = 10 }
					# random_list = {
						# 15 = { #Passive points gain
							# modifier = { factor = 1.5 has_job_title = job_physician }
							# modifier = { factor = 1.4 learning = 12 }	
							# modifier = { factor = 1.4 learning = 15 }	
							# modifier = { factor = 1.4 learning = 18 }	
							# modifier = { factor = 1.4 is_learned_trigger = yes }
							# event_target:relic_ruler = { change_variable = { which = relic_score value = 1 } }
						# } 
						# 2 = { #Ask for help
							# modifier = { factor = 1.5 has_job_title = job_physician }	
							# modifier = { factor = 1.4 learning = 12 }
							# modifier = { factor = 0 event_target:relic_ruler = { has_character_modifier = treasure_hunting_scholars } }
							# event_target:relic_ruler = { character_event = { id = MNM.9024 } }
						# } 
						# 10 = { #Setback
							# modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							# modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							# modifier = { factor = 1.5 NOT = { has_job_title = job_physician } }
							# modifier = { factor = 1.5 is_dumb_trigger = yes }
							# modifier = { factor = 2.5 NOT = { learning = 8 } } 
							# event_target:relic_ruler = { change_variable = { which = relic_score value = -1 } }
						# }
						# 1 = { #Unfortunate accident
							# modifier = { factor = 1.5 NOT = { has_job_title = job_physician } }
							# modifier = { factor = 1.5 NOT = { learning = 8 } } 
							# modifier = { factor = 0 ai = no }
							# event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						# } 
					# }
				# }
				# 5 = { #Ask for money
					# event_target:relic_ruler = { character_event = { id = MNM.9025 } }
				# }
				# 30 = { #Mess up badly
					# modifier = { factor = 0 event_target:relic_ruler = { check_variable = { which = relic_score value = 0 } } }
					# modifier = { factor = 0 reverse_has_opinion_modifier = { who = event_target:relic_ruler modifier = opinion_useless_moron } }
					# modifier = { factor = 1.5 is_dumb_trigger = yes }
					# event_target:relic_ruler = { character_event = { id = MNM.9027 } } 
				# }
				# 1 = { #Encounter a better rumor
					# modifier = { factor = 0 NOT = { event_target:relic_ruler = { check_variable = { which = relic_score value = 5 } } } }
					# modifier = { factor = 0 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
					# modifier = { factor = 1.5 is_smart_trigger = yes }
					# event_target:relic_ruler = { character_event = { id = MNM.9028 } }
				# }
				# 10 = {
					# #Nothing happens
				# }
			# }
			# character_event = { id = MNM.9007 days = 150 random = 30 } 
		# }
	# }
# }

# #Artifact is found
# character_event = {
	# id = MNM.9008
	# hide_window = yes

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# immediate = {	
		# #Artifact tombola
		# event_target:relic_ruler = {
			# random_list = {
				# #Generic artifacts
				# 10 = { #Famous Head
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = famous_head
					# }
					# character_event = { id = MNM.9835 }
				# }
				# 10 = { #Famous Tongue
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = famous_tongue
					# }
					# character_event = { id = MNM.9836 }
				# }
				# 10 = { #Infamous Tongue
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = infamous_tongue
					# }
					# character_event = { id = MNM.9837 }
				# }
				# 10 = { #Famous Hand
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = famous_hand
					# }
					# character_event = { id = MNM.9838 }
				# }
				# 10 = { #Famous Arm
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = famous_arm
					# }
					# character_event = { id = MNM.9839 }
				# }
				# 10 = { #Famous Foot
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = { 
						# factor = 0
						# has_artifact = famous_foot
					# }
					# character_event = { id = MNM.9840 }
				# }
				# 10 = { #Famous Ancient Rusty Weapon
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = famous_ancient_weapon
					# }
					# character_event = { id = MNM.9841 }
				# }

				# #Christian artifacts
				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = christian } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = bones_of_st_peter
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9804 } #Bones of St. Peter
				# }

				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = christian } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = seamless_robe_of_jesus
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9805 } #Seamless Robe of Jesus
				# }
				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = christian } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = crown_of_thorns
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9806 } #Crown of Thorns
				# }
				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = christian } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = fragment_of_true_cross
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9807 } #Fragment of the True Cross
				# }
				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = christian } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = holy_foreskin
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9808 } #Holy Foreskin
				# }

				# 20 = {
					# modifier = { 
						# factor = 0 
						# NOT = { 
							# religion_group = christian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = fingerbone_of_saint
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9809 } #Fingerbone of Saint
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = { 
							# religion_group = christian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = chains_of_st_peter
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9842 } #Chains of St. Peter
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = { 
							# religion_group = christian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = right_hand_st_demetrius
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9843 } #Right Hand of St. Demetrius
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = { 
							# religion_group = christian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = veil_of_veronica
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9844 } #Veil of Veronica
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = { 
							# religion_group = christian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = remains_of_st_cessianus
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9845 } #Remains of St. Cessianus
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = { 
							# religion_group = christian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = weeping_statue
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9846 } #Weeping Statue
				# }

				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = christian } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = image_of_edessa
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9847 } #Image of Edessa
				# }

				# #Jewish artifacts
				# 10 = {
					# modifier = {
						# factor = 0 
						# NOR = { 
							# religion_group = jewish_group
							# religion_group = christian
							# religion_group = muslim
						# }
					# }
					# modifier = { factor = 0.5 NOT = { religion_group = jewish_group } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = staff_of_moses
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9810 } #Staff of Moses
				# }
				# 10 = {
					# modifier = {
						# factor = 0 
						# NOR = { 
							# religion_group = jewish_group
							# religion_group = christian
							# religion_group = muslim
						# }
					# }
					# modifier = { factor = 0.5 NOT = { religion_group = jewish_group } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = davids_harp
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9811 } #David's Harp
				# }
				# 10 = {
					# modifier = {
						# factor = 0 
						# NOR = { 
							# religion_group = jewish_group
							# religion_group = christian
							# religion_group = muslim
						# }
					# }
					# modifier = { factor = 0.5 NOT = { religion_group = jewish_group } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = seal_of_solomon
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9814 } #Seal of Solomon
				# }

				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = jewish_group } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = tabernacle
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9853 } #The Tabernacle
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = { 
							# religion_group = jewish_group
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = davids_sling
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9854 } #King David's Sling
				# }

				# #Muslim artifacts
				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = seal_of_mohammad
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9820 } #Seal of Mohammad
				# }
				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = holy_banner_of_mohammad
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9821 } #Holy Banner of Mohammad
				# }
				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = blessed_mantle
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9822 } #Blessed mantle
				# }

				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = sword_of_mohammad
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9823 } #Sword of Mohammad
				# }
				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = letter_of_mohammad
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9824 } #Letter of Mohammad
				# }

				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = mohammads_beard
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9825 } #Mohammad's Beard
				# }
				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = water_of_blessed_mantle
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9826 } #Water of the Blessed Mantle
				# }

				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = cloak_of_mohammad
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9848 } #Cloak of Mohammad
				# }

				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = tooth_of_mohammad
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9849 } #Tooth of Mohammad
				# }

				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = mohammads_bowl
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9850 } #Mohammad's Bowl
				# }

				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = muslim } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = blessed_sandals
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9851 } #Blessed Sandals
				# }

				# #Zoroastrian artifacts
				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = zoroastrian_group } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = cup_of_jamshid
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9830 } #Cup of Jamshid
				# }
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = { 
							# religion_group = zoroastrian_group 
							# culture_group = iranian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = babr_e_bayan
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9831 } #Babr-e-Bayan
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = { 
							# religion_group = zoroastrian_group 
							# culture_group = iranian
							# has_landed_title = e_persia
							# has_landed_title = k_persia
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = derafsh_kaviani
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9832 } #Derafsh Kaviani
				# }

				# 10 = {
					# modifier = { factor = 0 NOT = { religion_group = zoroastrian_group } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = haoma_sapling
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9833 } #Haoma Sapling
				# }
				# 20 = {
					# modifier = { factor = 0 NOT = { religion_group = zoroastrian_group } }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_minor } }
					# modifier = {
						# factor = 0
						# has_artifact = keshmar_cypress_branch
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9834 } #Branch of the Keshmar Cypress
				# }

				# 20 = {
					# modifier = { 
						# factor = 0 
						# NOR = { 
							# religion_group = zoroastrian_group 
							# culture_group = iranian
						# } 
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = cyrus_cylinder
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9852 } #Cyrus Cylinder
				# }

				# #Dharmic artifacts
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = {
							# religion_group = indian_group
						# }
					# }
					# modifier = {
						# factor = 0
						# NOT = { has_character_modifier = relic_rumor_major }
					# }
					# modifier = {
						# factor = 0
						# has_artifact = buddhas_tooth
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9200 } #Buddhas Tooth
				# }
				# 20 = {
					# modifier = { 
						# factor = 0 
						# NOT = {
							# religion_group = indian_group
						# }
					# }
					# modifier = {
						# factor = 0
						# NOT = { has_character_modifier = relic_rumor_medium }
					# }
					# modifier = {
						# factor = 0
						# has_artifact = elaborate_danda
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9201 } #Special Danda
				# }
				# 10 = {
					# modifier = {
						# factor = 0 
						# NOT = {
							# religion_group = indian_group
						# }
					# }
					# modifier = {
						# factor = 0
						# NOT = { has_character_modifier = relic_rumor_major }
					# }
					# modifier = {
						# factor = 0
						# has_artifact = mountain_of_light_diamond
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9202 } #Special Diamond (Koh - i - Noor?)
				# }
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOT = {
							# religion_group = indian_group
						# }
					# }
					# modifier = { 
						# factor = 0.5
						# NOT = {
							# religion = buddhist
						# }
					# }
					# modifier = {
						# factor = 0
						# NOT = { has_character_modifier = relic_rumor_minor }
					# }
					# modifier = {
						# factor = 0
						# has_artifact = sarira
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9203 } #Looking for a Sarira
				# }
				# 20 = {
					# modifier = { 
						# factor = 0 
						# NOT = {
							# religion_group = indian_group
						# }
					# }
					# modifier = { 
						# factor = 0.5
						# NOT = {
							# religion = buddhist
						# }
					# }
					# modifier = {
						# factor = 0
						# NOT = { has_character_modifier = relic_rumor_medium }
					# }
					# modifier = {
						# factor = 0
						# has_artifact = sariraka_actual_body_part
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9204 } #Looking for a Body part of Buddha
				# }
				

				# ##Pagan artifacts##
				# #Germanic artifacts
				# 20 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = norse_pagan
							# religion = norse_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_medium } }
					# modifier = {
						# factor = 0
						# has_artifact = gjallarhorn
					# }
					# #Insert artifact event here
					# character_event = { id = MNM.9600 } #Gjallarhorn
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = norse_pagan
							# religion = norse_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = andvaranaut
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9601 } #Andvaranaut/Andvari's Gift
				# }

				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = norse_pagan
							# religion = norse_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = mjolnir
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9602 } #Mjolnir
				# }

				# #West African artifacts
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = west_african_pagan
							# religion = west_african_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = fetish_of_souls
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9603 } #Fetish of Souls
				# }

				# #Finnish artifacts
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = finnish_pagan
							# religion = finnish_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = sampo
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9604 } #Sampo/Mill of Fortune
				# }

				# #Slavic artifacts
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = slavic_pagan
							# religion = slavic_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = axe_of_perun
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9605 } #Axe of Perun
				# }

				# #Romuvan artifacts
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = baltic_pagan
							# religion = baltic_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = axe_of_perkunas
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9606 } #Axe of Perkunas
				# }

				# #Tengri artifacts
				# 10 = {
					# modifier = { 
						# factor = 0 
						# NOR = {
							# religion = tengri_pagan
							# religion = tengri_pagan_reformed
						# }
					# }
					# modifier = { factor = 0 NOT = { has_character_modifier = relic_rumor_major } }
					# modifier = {
						# factor = 0
						# has_artifact = yada_tashy
					# }
					# #Insert artifact event here
					# narrative_event = { id = MNM.9607 } #Yada Tashy/Rain Stone
				# }

			# }
		# }
	# }
# }

# #If the searcher can no longer fulfill their duties
# character_event = {
    # id = MNM.9009
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # desc = {
    	# trigger = {
    		# NOR = {
    			# has_character_modifier = relic_rumor_minor
    			# has_character_modifier = relic_rumor_medium
    			# has_character_modifier = relic_rumor_major
    		# }
    	# }
    	# text = EVTDESC_MNM_9009_A
    # }
    # desc = {
    	# trigger = {
    		# OR = {
    			# has_character_modifier = relic_rumor_minor
    			# has_character_modifier = relic_rumor_medium
    			# has_character_modifier = relic_rumor_major
    		# }
    	# }
    	# text = EVTDESC_MNM_9009_B
    # }

    # is_triggered_only = yes
    
    # has_dlc = "Mystics"
    
    # option = { 
        # name = ALAS

        # if = {
        	# limit = {
        		# NOR = {
	    			# has_character_modifier = relic_rumor_minor
	    			# has_character_modifier = relic_rumor_medium
	    			# has_character_modifier = relic_rumor_major
	    		# }
        	# }
        	# clr_artifact_flagsmodifiers_effect = yes
        # }
        # if = {
        	# limit = {
        		# OR = {
	    			# has_character_modifier = relic_rumor_minor
	    			# has_character_modifier = relic_rumor_medium
	    			# has_character_modifier = relic_rumor_major
	    		# }
        	# }
        	# clr_artifact_searcher_effect = yes
        # }
    # }
# }		

# #Asking for help, diplomacy
# character_event = {	
	# id = MNM.9020
	# desc = EVTDESC_MNM_9020
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_diplomacy

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9020
		# custom_tooltip = { text = EVTOPTA_MNM_9020_TT }
		# add_character_modifier = {
			# name = treasure_hunting_diplomats
			# years = 5
		# }
		# hidden_effect = { change_variable = { which = relic_score value = 5 } }	
	# }

	# option = {
		# name = EVTOPTB_MNM_9020
		# custom_tooltip = { text = EVTOPTB_MNM_9020_TT }
		# hidden_effect = { change_variable = { which = relic_score value = -1 } }
	# }	
# }

# #Asking for help, martial
# character_event = {	
	# id = MNM.9021
	# desc = EVTDESC_MNM_9021
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_war

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9021
		# custom_tooltip = { text = EVTOPTA_MNM_9020_TT }
		# add_character_modifier = {
			# name = treasure_hunting_soldiers
			# years = 5
		# }
		# hidden_effect = { change_variable = { which = relic_score value = 5 } }	
	# }

	# option = {
		# name = EVTOPTB_MNM_9020
		# custom_tooltip = { text = EVTOPTB_MNM_9020_TT }
		# hidden_effect = { change_variable = { which = relic_score value = -1 } }
	# }	
# }

# #Asking for help, stewardship
# character_event = {	
	# id = MNM.9022
	# desc = EVTDESC_MNM_9022
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_economy

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9022
		# custom_tooltip = { text = EVTOPTA_MNM_9020_TT }
		# add_character_modifier = {
			# name = treasure_hunting_stewards
			# years = 5
		# }
		# hidden_effect = { change_variable = { which = relic_score value = 5 } }	
	# }

	# option = {
		# name = EVTOPTB_MNM_9022
		# custom_tooltip = { text = EVTOPTB_MNM_9020_TT }
		# hidden_effect = { change_variable = { which = relic_score value = -1 } }
	# }	
# }

# #Asking for help, intrigue
# character_event = {	
	# id = MNM.9023
	# desc = EVTDESC_MNM_9023
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_intrigue

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# immediate = { #For loc
		# random_independent_ruler = {
			# limit = { is_within_diplo_range = ROOT NOT = { character = ROOT } }
			# save_event_target_as = spy_target
			# random_vassal = {
				# limit = { higher_tier_than = BARON NOT = { character = ROOT } }
				# save_event_target_as = spy_target
			# }
			# event_target:spy_target = { primary_title = { save_event_target_as = spy_title } }
		# }
	# }

	# option = {
		# name = EVTOPTA_MNM_9023
		# custom_tooltip = { text = EVTOPTA_MNM_9020_TT }
		# add_character_modifier = {
			# name = treasure_hunting_spies
			# years = 5
		# }
		# hidden_effect = { change_variable = { which = relic_score value = 5 } }	
	# }

	# option = {
		# name = EVTOPTB_MNM_9020
		# custom_tooltip = { text = EVTOPTB_MNM_9020_TT }
		# hidden_effect = { change_variable = { which = relic_score value = -1 } }
	# }	
# }

# #Asking for help, learning
# character_event = {	
	# id = MNM.9024
	# desc = EVTDESC_MNM_9024
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_religion

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# immediate = { #for loc
		# primary_title = { save_event_target_as = primary_title }
	# }	

	# option = {
		# name = EVTOPTA_MNM_9024
		# custom_tooltip = { text = EVTOPTA_MNM_9020_TT }
		# add_character_modifier = {
			# name = treasure_hunting_scholars
			# years = 5
		# }
		# hidden_effect = { change_variable = { which = relic_score value = 5 } }	
	# }

	# option = {
		# name = EVTOPTB_MNM_9020
		# custom_tooltip = { text = EVTOPTB_MNM_9020_TT }
		# hidden_effect = { change_variable = { which = relic_score value = -1 } }
	# }	
# }


# #Ask for money
# character_event = {	
	# id = MNM.9025
	# desc = EVTDESC_MNM_9025
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_economy

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9025
		# custom_tooltip = { text = EVTOPTA_MNM_9020_TT }
		# scaled_wealth = { value = -0.5 min = -30 }
		# hidden_effect = { 
			# random_list = {
				# 60 = { change_variable = { which = relic_score value = 3 } }
				# 20 = { #Nothing happens, they pocket money
					# modifier = { factor = 0 event_target:relic_hunter = { NOR = { trait = greedy trait = deceitful } } }
				# }
				# 20 = { #You discover that they pocketed the money
					# modifier = { factor = 0 event_target:relic_hunter = { NOR = { trait = greedy trait = deceitful } } }
					# modifier = { factor = 0 event_target:relic_hunter = { ai = no } }
					# character_event = { id = MNM.9026 days = 14 random = 14 } 
				# }
			# }
		# }	
	# }

	# option = {
		# name = EVTOPTB_MNM_9024
		# custom_tooltip = { text = EVTOPTB_MNM_9025_TT }
	# }	
# }

# #Stealing discovered
# character_event = {	
	# id = MNM.9026
	# desc = EVTDESC_MNM_9026
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_economy

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9026
		# custom_tooltip = { text = EVTOPTA_MNM_9026_TT }

		# opinion = {
			# who = event_target:relic_hunter
			# modifier = opinion_thief
			# years = 10
		# }
	# }

	# option = {
		# name = EVTOPTB_MNM_9026
		# custom_tooltip = { text = EVTOPTB_MNM_9026_TT }
		# hidden_effect = { change_variable = { which = relic_score value = 3 } }
	# }
# }

# #Messed up big
# character_event = {	
	# id = MNM.9027
	# desc = EVTDESC_MNM_9027
	# picture = "GFX_event_picture_placeholder"
	# border = GFX_event_normal_frame_religion

	# is_triggered_only = yes
    # has_dlc = "Mystics"

	# option = {
		# name = EVTOPTA_MNM_9027
		# custom_tooltip = { text = EVTOPTA_MNM_9027_TT }
		# opinion = {
			# who = event_target:relic_hunter
			# modifier = opinion_useless_moron
			# years = 10
		# }
		# hidden_effect = { change_variable = { which = relic_score value = -5 } }
	# }
# }

# #Upgrade to bigger rumor
# character_event = {
    # id = MNM.9028
    # desc = EVTDESC_MNM_9028
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion
    
    # is_triggered_only = yes
    # has_dlc = "Mystics"
    
    # option = {      
        # name = EVTOPTA_MNM_9028
        # custom_tooltip = { text = EVTOPTA_MNM_9028_TT }

        # if = {
        	# limit = { has_character_modifier = relic_rumor_medium }
        	# remove_character_modifier = relic_rumor_medium
        	# add_character_modifier = {
        		# name = relic_rumor_major
        		# years = 15
        	# }
        # }
        # if = {
        	# limit = { has_character_modifier = relic_rumor_minor }
        	# remove_character_modifier = relic_rumor_minor
        	# add_character_modifier = {
        		# name = relic_rumor_medium
        		# years = 10
        	# }
        # }

        # hidden_effect = { multiply_variable = { which = relic_score value = 0.5 } }
    # }
    # option = {      
        # name = EVTOPTB_MNM_9028
    # }
# }

# #Terrible accident
# character_event = {
    # id = MNM.9029
    # desc = EVTDESC_MNM_9029
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes
    # has_dlc = "Mystics"
    
    # option = { 
        # name = EVTOPTA_MNM_9029
        
        # event_target:relic_hunter = {
        	# random_accident_death_effect = yes
        # }
    # }
# }

# ### Return Event ###

# ##Generic##

# #Famous Head
# #Quality 1
# character_event = {
    # id = MNM.9835
    # desc = EVTDESC_MNM_9835
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = famous_head
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = famous_head
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = famous_head
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = famous_head
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Famous Tongue
# #Quality 1
# character_event = {
    # id = MNM.9836
    # desc = EVTDESC_MNM_9836
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = famous_tongue
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = famous_tongue
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = famous_tongue
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = famous_tongue
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Infamous Tongue
# #Quality 1
# character_event = {
    # id = MNM.9837
    # desc = EVTDESC_MNM_9837
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = infamous_tongue
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = infamous_tongue
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = infamous_tongue
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = infamous_tongue
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Famous Hand
# #Quality 1
# character_event = {
    # id = MNM.9838
    # desc = EVTDESC_MNM_9838
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = famous_hand
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = famous_hand
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = famous_hand
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = famous_hand
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Famous Arm
# #Quality 1
# character_event = {
    # id = MNM.9839
    # desc = EVTDESC_MNM_9839
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = famous_arm
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = famous_arm
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = famous_arm
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = famous_arm
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Famous Foot
# #Quality 1
# character_event = {
    # id = MNM.9840
    # desc = EVTDESC_MNM_9840
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = famous_foot
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = famous_foot
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = famous_foot
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = famous_foot
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Famous Ancient Weapon
# #Quality 1
# character_event = {
    # id = MNM.9841
    # desc = EVTDESC_MNM_9841
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = famous_ancient_weapon
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = famous_ancient_weapon
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = famous_ancient_weapon
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = famous_ancient_weapon
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# ##Christian##

# #Bones of St. Peter
# #Quality 5
# narrative_event = {
    # id = MNM.9804
    # title = EVTNAME_MNM_9804
    # desc = EVTDESC_MNM_9804
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = bones_of_st_peter
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = bones_of_st_peter
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = bones_of_st_peter
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = bones_of_st_peter
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Seamless Robe of Jesus
# #Quality 4
# character_event = {
    # id = MNM.9805
    # desc = EVTDESC_MNM_9805
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = seamless_robe_of_jesus
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = seamless_robe_of_jesus
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = seamless_robe_of_jesus
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = seamless_robe_of_jesus
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Crown of Thorns
# #Quality 4
# character_event = {
    # id = MNM.9806
    # desc = EVTDESC_MNM_9806
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = crown_of_thorns
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = crown_of_thorns
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = crown_of_thorns
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = crown_of_thorns
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Fragment of the True Cross
# #Quality 3
# character_event = {
    # id = MNM.9807
    # desc = EVTDESC_MNM_9807
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = fragment_of_true_cross
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = fragment_of_true_cross
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = fragment_of_true_cross
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = fragment_of_true_cross
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Holy Foreskin
# #Quality 3
# character_event = {
    # id = MNM.9808
    # desc = EVTDESC_MNM_9808
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = holy_foreskin
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = holy_foreskin
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = holy_foreskin
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = holy_foreskin
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Fingerbone of Saint
# #Quality 1
# character_event = {
    # id = MNM.9809
    # desc = EVTDESC_MNM_9809
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = fingerbone_of_saint
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = fingerbone_of_saint
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = fingerbone_of_saint
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = fingerbone_of_saint
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Chains of St. Peter
# #Quality 2
# character_event = {
    # id = MNM.9842
    # desc = EVTDESC_MNM_9842
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = chains_of_st_peter
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = chains_of_st_peter
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = chains_of_st_peter
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = chains_of_st_peter
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Right Hand of St. Demetrius
# #Quality 2
# character_event = {
    # id = MNM.9843
    # desc = EVTDESC_MNM_9843
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = right_hand_st_demetrius
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = right_hand_st_demetrius
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = right_hand_st_demetrius
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = right_hand_st_demetrius
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Veil of Veronica
# #Quality 2
# character_event = {
    # id = MNM.9844
    # desc = EVTDESC_MNM_9844
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = veil_of_veronica
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = veil_of_veronica
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = veil_of_veronica
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = veil_of_veronica
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Remains of St. Cessianus
# #Quality 2
# character_event = {
    # id = MNM.9845
    # desc = EVTDESC_MNM_9845
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = remains_of_st_cessianus
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = remains_of_st_cessianus
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = remains_of_st_cessianus
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = remains_of_st_cessianus
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Weeping Statue
# #Quality 2
# character_event = {
    # id = MNM.9846
    # desc = EVTDESC_MNM_9846
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = weeping_statue
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = weeping_statue
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = weeping_statue
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = weeping_statue
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Image of Edessa
# #Quality 3
# character_event = {
    # id = MNM.9847
    # desc = EVTDESC_MNM_9847
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = image_of_edessa
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = image_of_edessa
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = image_of_edessa
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = image_of_edessa
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# ##Jewish##

# #Staff of Moses
# #Quality 5
# narrative_event = {
    # id = MNM.9810
    # title = EVTNAME_MNM_9810
    # desc = EVTDESC_MNM_9810
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = staff_of_moses
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = staff_of_moses
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = staff_of_moses
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = staff_of_moses
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #David's Harp
# #Quality 5
# narrative_event = {
    # id = MNM.9811
    # title = EVTNAME_MNM_9811
    # desc = EVTDESC_MNM_9811
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = davids_harp
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = davids_harp
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = davids_harp
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = davids_harp
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
    
# }

# #Seal of Solomon
# #Quality 4
# character_event = {
    # id = MNM.9814
    # desc = EVTDESC_MNM_9814
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = seal_of_solomon
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = seal_of_solomon
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = seal_of_solomon
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = seal_of_solomon
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #The tabernacle
# #Quality 3
# character_event = {
    # id = MNM.9853
    # desc = EVTDESC_MNM_9853
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = tabernacle
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = tabernacle
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = tabernacle
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = tabernacle
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #King David's Sling
# #Quality 2
# character_event = {
    # id = MNM.9854
    # desc = EVTDESC_MNM_9854
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = davids_sling
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = davids_sling
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = davids_sling
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = davids_sling
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# ##Muslim##

# #Seal of Mohammad
# #Quality 5
# narrative_event = {
    # id = MNM.9820
    # title = EVTNAME_MNM_9820
    # desc = EVTDESC_MNM_9820
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = seal_of_mohammad
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = seal_of_mohammad
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = seal_of_mohammad
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = seal_of_mohammad
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Holy Banner of Mohammad
# #Quality 5
# narrative_event = {
    # id = MNM.9821
    # title = EVTNAME_MNM_9821
    # desc = EVTDESC_MNM_9821
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = holy_banner_of_mohammad
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = holy_banner_of_mohammad
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = holy_banner_of_mohammad
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = holy_banner_of_mohammad
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Blessed mantle
# #Quality 5
# narrative_event = {
    # id = MNM.9822
    # title = EVTNAME_MNM_9822
    # desc = EVTDESC_MNM_9822
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = blessed_mantle
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = blessed_mantle
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = blessed_mantle
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = blessed_mantle
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Sword of Mohammad
# #Quality 4
# character_event = {
    # id = MNM.9823
    # desc = EVTDESC_MNM_9823
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = sword_of_mohammad
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = sword_of_mohammad
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = sword_of_mohammad
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = sword_of_mohammad
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Letter of Mohammad
# #Quality 3
# character_event = {
    # id = MNM.9824
    # desc = EVTDESC_MNM_9824
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = letter_of_mohammad
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = letter_of_mohammad
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = letter_of_mohammad
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = letter_of_mohammad
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Cloak of Mohammad
# #Quality 3
# character_event = {
    # id = MNM.9848
    # desc = EVTDESC_MNM_9848
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = cloak_of_mohammad
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = cloak_of_mohammad
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = cloak_of_mohammad
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = cloak_of_mohammad
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Mohammad's Beard
# #Quality 2
# character_event = {
    # id = MNM.9825
    # desc = EVTDESC_MNM_9825
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = mohammads_beard
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = mohammads_beard
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = mohammads_beard
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = mohammads_beard
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Tooth of Mohammad
# #Quality 2
# character_event = {
    # id = MNM.9849
    # desc = EVTDESC_MNM_9849
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = tooth_of_mohammad
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = tooth_of_mohammad
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = tooth_of_mohammad
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = tooth_of_mohammad
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Water of the Blessed Mantle
# #Quality 1
# character_event = {
    # id = MNM.9826
    # desc = EVTDESC_MNM_9826
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = water_of_blessed_mantle
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = water_of_blessed_mantle
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = water_of_blessed_mantle
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = water_of_blessed_mantle
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Mohammad's Bowl
# #Quality 3
# character_event = {
    # id = MNM.9850
    # desc = EVTDESC_MNM_9850
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = mohammads_bowl
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = mohammads_bowl
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = mohammads_bowl
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = mohammads_bowl
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Blessed Sandals
# #Quality 4
# character_event = {
    # id = MNM.9851
    # desc = EVTDESC_MNM_9851
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = blessed_sandals
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = blessed_sandals
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = blessed_sandals
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = blessed_sandals
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# ##Zoroastrian##

# #Cup of Jamshid
# #Quality 5
# narrative_event = {
    # id = MNM.9830
    # title = EVTNAME_MNM_9830
    # desc = EVTDESC_MNM_9830
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = cup_of_jamshid
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = cup_of_jamshid
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = cup_of_jamshid
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = cup_of_jamshid
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Babr-e-Bayan
# #Quality 5
# narrative_event = {
    # id = MNM.9831
    # title = EVTNAME_MNM_9831
    # desc = EVTDESC_MNM_9831
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = babr_e_bayan
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = babr_e_bayan
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = babr_e_bayan
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = babr_e_bayan
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Derafsh Kaviani
# #Quality 4
# character_event = {
    # id = MNM.9832
    # desc = EVTDESC_MNM_9832
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = derafsh_kaviani
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = derafsh_kaviani
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = derafsh_kaviani
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = derafsh_kaviani
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Haoma Sapling
# #Quality 2
# character_event = {
    # id = MNM.9833
    # desc = EVTDESC_MNM_9833
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = haoma_sapling
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = haoma_sapling
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = haoma_sapling
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = haoma_sapling
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Branch of the Keshmar Cypress
# #Quality 1
# character_event = {
    # id = MNM.9834
    # desc = EVTDESC_MNM_9834
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MINOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
		# modifier = opinion_disappointed
			# years = 10
		# }
        # add_artifact = keshmar_cypress_branch
    # }

    # option = { #monetary reward
        # name = EVTOPT_MINOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.25
			# min = 20
		# }

        # add_artifact = keshmar_cypress_branch
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MINOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = keshmar_cypress_branch
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 5
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_minor_artifact
			# years = 5
		# }
		# FROM = { prestige = 25 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = keshmar_cypress_branch
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Cyrus Cylinder
# #Quality 3
# character_event = {
    # id = MNM.9852
    # desc = EVTDESC_MNM_9852
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = cyrus_cylinder
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = cyrus_cylinder
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = cyrus_cylinder
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = cyrus_cylinder
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Dharmic

# narrative_event = { #Buddhas' Tooth (or atleast one of them)
    # id = MNM.9200
	# title = EVTNAME_MNM_9200
    # desc = EVTDESC_MNM_9200
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = buddhas_tooth
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

         # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = buddhas_tooth
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = buddhas_tooth
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = buddhas_tooth
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# narrative_event = { #Mountain of Light - Huge Diamond, possibly the historical Mountain of Light/ Koh-i-Nohr
    # id = MNM.9201
	# title = EVTNAME_MNM_9201
    # desc = EVTDESC_MNM_9201
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = mountain_of_light_diamond
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = mountain_of_light_diamond
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = mountain_of_light_diamond
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

       # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = mountain_of_light_diamond
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# character_event = {
    # id = MNM.9202
    # desc = EVTDESC_MNM_9202
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = elaborate_danda
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = elaborate_danda
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = elaborate_danda
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = elaborate_danda
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# character_event = {
    # id = MNM.9203
    # desc = EVTDESC_MNM_9203
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = sarira
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = sarira
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = sarira
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = sarira
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# character_event = {
    # id = MNM.9204
    # desc = EVTDESC_MNM_9204
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = sariraka_actual_body_part
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = sariraka_actual_body_part
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = sariraka_actual_body_part
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = sariraka_actual_body_part
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# ##PAGAN##
# #Germanic#

# #Gjallarhorn
# character_event = {
    # id = MNM.9600
    # desc = EVTDESC_MNM_9600
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MEDIUM_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_very_disappointed
			# years = 15
		# }
        # add_artifact = gjallarhorn
    # }

    # option = { #monetary reward
        # name = EVTOPT_MEDIUM_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 0.5
			# min = 35
		# }

        # add_artifact = gjallarhorn
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MEDIUM_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = gjallarhorn
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MEDIUM_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 10
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_medium_artifact
			# years = 5
		# }
		# FROM = { prestige = 50 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = gjallarhorn
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Andvaranaut/Andvari's Gift
# narrative_event = {
    # id = MNM.9601
    # title = EVTNAME_MNM_9601
    # desc = EVTDESC_MNM_9601
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = andvaranaut
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = andvaranaut
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = andvaranaut
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = andvaranaut
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Mjolnir
# narrative_event = {
    # id = MNM.9602
    # title = EVTNAME_MNM_9602
    # desc = EVTDESC_MNM_9602
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = mjolnir
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = mjolnir
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = mjolnir
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = mjolnir
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #West African#

# #Fetish of Souls
# narrative_event = {
    # id = MNM.9603
    # title = EVTNAME_MNM_9603
    # desc = EVTDESC_MNM_9603
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = fetish_of_souls
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = fetish_of_souls
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = fetish_of_souls
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = fetish_of_souls
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Finnish#

# #Sampo
# narrative_event = {
    # id = MNM.9604
    # title = EVTNAME_MNM_9604
    # desc = EVTDESC_MNM_9604
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = sampo
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = sampo
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = sampo
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = sampo
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Slavic#

# #Axe of Perun
# narrative_event = {
    # id = MNM.9605
    # title = EVTNAME_MNM_9605
    # desc = EVTDESC_MNM_9605
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = axe_of_perun
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = axe_of_perun
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = axe_of_perun
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = axe_of_perun
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Romuva#

# #Axe of Perkunas
# narrative_event = {
    # id = MNM.9606
    # title = EVTNAME_MNM_9606
    # desc = EVTDESC_MNM_9606
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = axe_of_perkunas
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = axe_of_perkunas
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = axe_of_perkunas
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = axe_of_perkunas
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# #Tengri#

# #Yada Tashy
# narrative_event = {
    # id = MNM.9607
    # title = EVTNAME_MNM_9607
    # desc = EVTDESC_MNM_9607
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # option = { #it's their duty
        # name = EVTOPT_MAJOR_ARTIFACT_DUTY
        # prestige = 10
        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_extremely_disappointed
			# years = 20
		# }
        # add_artifact = yada_tashy
    # }

    # option = { #monetary reward
        # name = EVTOPT_MAJOR_ARTIFACT_MONEY

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# transfer_scaled_wealth = {
			# to = FROM
			# value = 1
			# min = 50
		# }

        # add_artifact = yada_tashy
    # }
    
    # option = { #reward them with a favor
        # name = EVTOPT_MAJOR_ARTIFACT_FAVOR

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_rewarded
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
        # reverse_add_favor = FROM
        # add_artifact = yada_tashy
    # }

    # option = { #praise them (prestige reward)
    	# trigger = {
			# diplomacy = 15
		# }
        # name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

        # reverse_opinion = {
			# who = FROM
			# modifier = opinion_was_praised
			# years = 15
		# }
		# opinion = {
			# who = FROM
			# modifier = opinion_found_major_artifact
			# years = 5
		# }
		# FROM = { prestige = 100 }
		# random = {
			# chance = 20
			# add_friend = FROM
		# }
        # add_artifact = yada_tashy
    # }
    # after = { clr_artifact_flagsmodifiers_effect = yes }
# }

# ###Seal of Solomon removes possession###
# character_event = {
    # id = MNM.9815
    # desc = EVTDESC_MNM_9815
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # trigger = {
    	# trait = possessed
    	# has_artifact = seal_of_solomon
    # }

    # option = { #remove possession
        # name = EVTOPTA_MNM_9815
        # remove_trait = possessed
    # }
    # option = { #nah I'm good
    	# name = EVTOPTB_MNM_9815
	# }
# }

# ###Blessed Mantle allows you to make Water of the Blessed Mantle###
# character_event = {
    # id = MNM.9816
    # desc = EVTDESC_MNM_9816
    # picture = "GFX_event_picture_placeholder"
    # border = GFX_event_normal_frame_religion

    # is_triggered_only = yes

    # has_dlc = "Mystics"

    # trigger = {
    	# AND = {
    		# has_artifact = blessed_mantle
    		# NOT = { has_artifact = water_of_blessed_mantle }
    	# }
    # }

    # option = { #Make Water of the Blessed Mantle!
        # name = EVTOPTA_MNM_9816
        # wealth = -250
        # decadence = 10
        # add_artifact = water_of_blessed_mantle
    # }
    # option = { #nah
        # name = EVTOPTB_MNM_9816
    # }
# }

###Crown jewels events###
character_event = {
    id = MNM.9100
    desc = EVTDESC_MNM_9100
    picture = GFX_evt_treasure_chamber
    border = GFX_event_normal_frame_economy

    hide_from = yes
    is_triggered_only = yes
	
    trigger = {
		OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = { #Selecting gender of the goldsmith
    	hidden_effect = {
			capital_scope = {
				ROOT = {
					random_list = {
						5 = { #Woman
							modifier = { 
								factor = 6
								OR = {
									gender_equality_trigger = yes
									primary_title = { 
										has_law = true_cognatic_succession
									}
								}	
							}
							create_random_steward = {
								random_traits = yes
								female = yes
								dynasty = none 
								religion = PREV
								culture = PREV
								attributes = {
									stewardship = 3
								}
								historical = yes
							}
							new_character = { 
								save_event_target_as = smith
								set_character_flag = ai_flag_refuse_marriage
								set_character_flag = ai_flag_refuse_concubinage
								set_character_flag = cannot_marry
								set_character_flag = no_court_invites
								add_trait = cannot_marry
							}
						} 
						95 = { #Man
							create_random_steward = {
								random_traits = yes
								female = no
								dynasty = none
								religion = PREV
								culture = PREV
								attributes = {
									stewardship = 3
								}
								historical = yes
							}
							new_character = { 
								save_event_target_as = smith
								set_character_flag = ai_flag_refuse_marriage
								set_character_flag = ai_flag_refuse_concubinage
								set_character_flag = cannot_marry
								set_character_flag = no_court_invites
								add_trait = cannot_marry
							}
						}
					}
					event_target:smith = {
						health = 3
						give_nickname = nick_the_goldsmith
						random = {
							chance = 15
							add_trait = metallurgist
						}
						random_list = { #Stewardship
							15 = { change_stewardship = 1 }
							25 = { change_stewardship = 3 }
							20 = {
								artisan_craftsmen_bloodline_increase_score = yes
								change_stewardship = 5
							}
							10 = {
								artisan_craftsmen_bloodline_increase_score = yes
								change_stewardship = 7
							}
						}
						random_list = { #Personality
							1 = { add_trait = greedy }
							1 = { add_trait = envious }
							1 = {
								artisan_craftsmen_bloodline_increase_score = yes
								add_trait = charitable
							}
							1 = {
								artisan_craftsmen_bloodline_increase_score = yes
								add_trait = diligent
							}
							1 = { add_trait = deceitful }
						}
						random = {
							chance = 30
							modifier = {
								factor = 2
								trait = indulgent_wastrel
							}
							artisan_craftsmen_bloodline_increase_score = yes
							upgrade_education_effect = yes
						}
					}
				}
			}	
    	}
    }

    #Yes, invite them!
	option = { 
        name = EVTOPTA_MNM_9100
        custom_tooltip = { text = EVTOPTA_MNM_9100_TT }
        #custom_tooltip = { text = employ_a_smith_stewardship_tt }
        hidden_effect = {
        	save_event_target_as = smith_employer
        	event_target:smith = {
        		character_event = { id = MNM.9101 } 
        	}
        }
    }

    #Don't invite them
    option = {
        name = EVTOPTB_MNM_9100
        custom_tooltip = { text = EVTOPTB_MNM_9100_TT }
        hidden_effect = {
        	event_target:smith = {
        		leave_court_and_die_effect = yes
        	}
        }
    }
}

#Ping event for goldsmith
character_event = {
    id = MNM.9101
    hide_window = yes
    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = { event_target:smith_employer = { character_event = { id = MNM.9103 } } }
}

#How much will I spend on the crown jewels?
character_event = {
    id = MNM.9103
    desc = EVTDESC_MNM_9103
    picture = GFX_evt_emissary
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
	
	trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    #The best money can buy
    option = { 
        name = EVTOPTA_MNM_9103
		trigger = { 
        	tier = EMPEROR
        }
		custom_tooltip = { text = EVTOPTA_MNM_9103_TT }

		wealth = -500
		
        hidden_effect = {
        	event_target:smith = { set_character_flag = expensive_jewels }
        	set_character_flag = expensive_jewels
			random_list = {
				40 = { #Success
        			modifier = { factor = 0.7 FROM = { stewardship <= 2 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 4 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 6 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 8 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 12 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 14 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 16 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 18 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 20 } }
        			modifier = { factor = 1.3 FROM = { trait = greedy } }
        			modifier = { factor = 1.3 FROM = { trait = diligent } }
        			modifier = { factor = 1.3 FROM = { trait = patient } }
        			modifier = { factor = 1.3 FROM = { is_smart_trigger = yes } }
        			set_character_flag = goldsmith_success
				}
				60 = { #Fail
        			set_character_flag = goldsmith_fail
				}
				10 = { #Steal	
					trigger = {
        				NOT = {
	        				any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
							}
        				}
        			}
        			modifier = { factor = 1.3 FROM = { trait = envious } }
        			modifier = { factor = 0.2 FROM = { trait = charitable } }
        			modifier = { factor = 0.2 FROM = { trait = content } }
					modifier = { factor = 0 FROM = { trait = honorable } }
        			modifier = { factor = 1.5 FROM = { trait = ambitious } }
        			modifier = { factor = 1.3 FROM = { trait = deceitful } }
					modifier = { factor = 1.5 FROM = { trait = ruthless } }
        			set_character_flag = goldsmith_steal
				}
	    	}
        	character_event = { id = MNM.9111 days = 50 random = 100 }
        	character_event = { id = MNM.9133 days = 20 random = 5 } #tombola for random events
        
			character_event = { id = MNM.9995 days = 10 random = 5 } #metallurgist upgrade
		}
    	ai_chance = {
    		factor = 33
    		modifier = {
    			tier = EMPEROR
    			factor = 10
    		}
    		modifier = {
    			OR = {
    				tier = KING	
    				tier = DUKE
    			}
    			factor = 3
    		}
    		modifier = {
    			factor = 0
				NOR = { 
					wealth = 400 
					AND = {
						monthly_income = 10
						NOT = { has_character_flag = offended_moneylenders }
						NOT = { has_character_flag = loan_taken }
						NOT = { has_character_modifier = loan_timer }
					}
				}
    		}
    	}
    }

    #Something nice
    option = {
        name = EVTOPTB_MNM_9103
        custom_tooltip = { text = EVTOPTB_MNM_9103_TT }

		wealth = -250
		
        hidden_effect = {
        	event_target:smith = { set_character_flag = good_jewels }
        	set_character_flag = good_jewels
        	random_list = {
				60 = { #Success
        			modifier = { factor = 0.7 FROM = { stewardship <= 2 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 4 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 6 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 8 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 12 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 14 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 16 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 18 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 20 } }
        			modifier = { factor = 1.3 FROM = { trait = greedy } }
        			modifier = { factor = 1.3 FROM = { trait = diligent } }
        			modifier = { factor = 1.3 FROM = { trait = patient } }
        			modifier = { factor = 1.3 FROM = { is_smart_trigger = yes } }
        			set_character_flag = goldsmith_success
				}
				40 = { #Fail
        			set_character_flag = goldsmith_fail
				}
				10 = { #Steal        			
					trigger = {
        				NOT = {
	        				any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
							}
        				}
        			}
				  	modifier = { factor = 1.3 FROM = { trait = envious } }
        			modifier = { factor = 0.2 FROM = { trait = charitable } }
        			modifier = { factor = 0.2 FROM = { trait = content } }
					modifier = { factor = 0 FROM = { trait = honorable } }
        			modifier = { factor = 1.5 FROM = { trait = ambitious } }
        			modifier = { factor = 1.3 FROM = { trait = deceitful } }
					modifier = { factor = 1.5 FROM = { trait = ruthless } }
        			set_character_flag = goldsmith_steal
				}
			}
        	character_event = { id = MNM.9111 days = 50 random = 100 }
        	character_event = { id = MNM.9133 days = 20 random = 5 } #tombola for random events
			character_event = { id = MNM.9995 days = 10 random = 5 } #metallurgist upgrade
		}
		ai_chance = {
    		factor = 33
    		modifier = {
    			OR = {
    				tier = KING	
    				tier = DUKE
    			}
    			factor = 10
    		}
    		modifier = {
    			lower_tier_than = DUKE
    			factor = 3
    		}
    		modifier = {
    			tier = EMPEROR
    			factor = 3
    		}
    		modifier = {
    			factor = 0
				NOR = { 
					wealth = 200 
					AND = {
						monthly_income = 5
						NOT = { has_character_flag = offended_moneylenders }
						NOT = { has_character_flag = loan_taken }
						NOT = { has_character_modifier = loan_timer }
					}
				}
    		}
    	}
    }
   
   	#I can't afford that much 
    option = {
        name = EVTOPTC_MNM_9103
        custom_tooltip = { text = EVTOPTC_MNM_9103_TT }

		wealth = -125
		
        hidden_effect = {
        	event_target:smith = { set_character_flag = cheap_jewels }
        	set_character_flag = cheap_jewels
        	random_list = {
				100 = { #Success
        			set_character_flag = goldsmith_success
				}
				10 = { #Steal
				   	trigger = {
        				NOT = {
	        				any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
							}
        				}
        			}
        			modifier = { factor = 1.3 FROM = { trait = envious } }
        			modifier = { factor = 0.2 FROM = { trait = charitable } }
        			modifier = { factor = 0.2 FROM = { trait = content } }
					modifier = { factor = 0 FROM = { trait = honorable } }
        			modifier = { factor = 1.5 FROM = { trait = ambitious } }
        			modifier = { factor = 1.3 FROM = { trait = deceitful } }
					modifier = { factor = 1.5 FROM = { trait = ruthless } }
        			set_character_flag = goldsmith_steal
				}
			}
        	character_event = { id = MNM.9111 days = 50 random = 100 }
        	character_event = { id = MNM.9133 days = 20 random = 5 } #tombola for random events
			character_event = { id = MNM.9995 days = 10 random = 5 } #metallurgist upgrade
		}

        ai_chance = {
    		factor = 33
    		modifier = {
    			tier = COUNT
    			factor = 10
    		}
    		modifier = {
    			OR = {
    				tier = KING	
    				tier = DUKE
    			}
    			factor = 3
    		}
    	}
    }

    #Actually, no
    option = {
        name = EVTOPTD_MNM_9103
        custom_tooltip = { text = EVTOPTD_MNM_9103_TT }

        hidden_effect = { FROM = { character_event = { id = MNM.9110 days = 5 } } }

       	ai_chance = { factor = 15 }
    }
}	

#Ping event for success 
character_event = {
	id = MNM.9104
    hide_window = yes

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = {
    	if = {
    		limit = { NOT = { event_target:smith_employer = { is_alive = yes } } }
    		liege = { save_event_target_as = smith_employer }
    	}
    
    	trigger_switch = {
    		on_trigger = has_character_flag
    		expensive_jewels	= { event_target:smith_employer = { character_event = { id = MNM.9105 } } }
    		good_jewels			= { event_target:smith_employer = { character_event = { id = MNM.9106 } } }
    		cheap_jewels		= { event_target:smith_employer = { character_event = { id = MNM.9107 } } }
		}
    }
}

#Amazing crown jewels
character_event = {
    id = MNM.9105
    desc = EVTDESC_MNM_9105
    picture = GFX_evt_treasure_chamber
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    option = {
        name = EVTOPTA_MNM_9105
		primary_title = { 
			save_event_target_as = ROOT_primary_title 
			set_title_flag = has_artifact_claims
		}
        if = {
        	limit = { 
        		OR = {
        			culture_group = andal
					culture = high_valyrian
					culture = western_valyrian
					culture_group = sarnor_group
					culture_group = hyrkoon_group
        		}
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}										
				}
				add_artifact = crown_of_majesty
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
				add_artifact = emerald_scepter
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
			}	      	
        	add_artifact = sword_of_heroes
			new_artifact = { 
				set_artifact_flag = heirloom_@PREV 
				set_artifact_flag = title_heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:ROOT_primary_title
			}
        }
		else_if = {
        	limit = { 
				culture_group = first_men
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}										
				}
				add_artifact = crown_of_winter
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
				add_artifact = emerald_scepter
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
			}	      	
        	add_artifact = sword_of_heroes
			new_artifact = { 
				set_artifact_flag = heirloom_@PREV 
				set_artifact_flag = title_heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:ROOT_primary_title
			}
        }
		else_if = {
        	limit = { 
				OR = {
					culture_group = dornish
					culture_group = valyrian
					culture_group = free_cities
					culture_group = ghiscari_group		
					culture = lhazareen
					culture_group = moraqi_group
					culture_group = asshai_group
					culture_group = qarth_group
					culture_group = jogos_nhai_group
					culture_group = nghai_group
					culture_group = summer_islands
				}	
				NOT = { culture = high_valyrian }
				NOT = { culture = western_valyrian }
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}								
				}
				add_artifact = crown_of_majesty
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
			}   	
        	add_artifact = dagger_of_glory
			new_artifact = { 
				set_artifact_flag = heirloom_@PREV 
				set_artifact_flag = title_heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:ROOT_primary_title
			}
        	add_artifact = ruby_bracelets
			new_artifact = { 
				set_artifact_flag = heirloom_@PREV 
				set_artifact_flag = title_heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:ROOT_primary_title
			}
        }
		
		else_if = {
        	limit = { 
        		OR = {
					culture_group = yi_ti_group
					culture_group = jade_islands_group
					culture_group = naath_group
				}
        	}
			if = {
				limit = {
					tier = EMPEROR
					is_feudal = yes								
				}
				add_artifact = circlet_of_the_heavens
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
			}      	
        	add_artifact = staff_of_majesty
			new_artifact = { 
				set_artifact_flag = heirloom_@PREV 
				set_artifact_flag = title_heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:ROOT_primary_title
			}
        }

        else_if = {
        	limit = { 
        		culture_group = iron_isles_culture
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}								
				}
				add_artifact = driftwood_crown
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
			}	
        	add_artifact = sword_of_heroes
			new_artifact = { 
				set_artifact_flag = heirloom_@PREV 
				set_artifact_flag = title_heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:ROOT_primary_title
			}
        }

        else_if = {
        	limit = {
        		OR = {
        			culture_group = free_folk
					culture_group = further_east
					culture_group = ibbenese_group
					culture_group = sothoryos_islands
        		}
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}								
				}
				add_artifact = heros_crown
				new_artifact = { 
					set_artifact_flag = heirloom_@PREV 
					set_artifact_flag = title_heirloom_@PREV
					set_artifact_flag = heirloom_@event_target:ROOT_primary_title
				}
			}	
        	add_artifact = axe_of_the_ancestors
			new_artifact = { 
				set_artifact_flag = heirloom_@PREV 
				set_artifact_flag = title_heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:ROOT_primary_title
			}
        }

        hidden_effect = { 
        	event_target:smith = { character_event = { id = MNM.9110 days = 5 } } 
        	clr_character_flag = expensive_jewels
			clr_character_flag = good_jewels
			clr_character_flag = cheap_jewels
        }
    }    
}


#Good crown jewels
character_event = {
    id = MNM.9106
    desc = EVTDESC_MNM_9106
    picture = GFX_evt_treasure_chamber
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    option = {
        name = EVTOPTA_MNM_9106
		if = {
        	limit = { 
        		OR = {
        			culture_group = andal
					culture = high_valyrian
					culture = western_valyrian
					culture_group = sarnor_group
					culture_group = hyrkoon_group
        		}
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}										
				}
				add_artifact = crown_of_pearls
				add_artifact = ruby_scepter
			}	      	     	
        	add_artifact = golden_sword
        }
		else_if = {
        	limit = { 
				culture_group = first_men
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}										
				}
				add_artifact = crown_of_winter_mid
				add_artifact = ruby_scepter
			}	      	     	
        	add_artifact = golden_sword
        }
		else_if = {
        	limit = { 
				OR = {
					culture_group = valyrian
					culture_group = free_cities
					culture_group = ghiscari_group		
					culture = lhazareen									
				}	
				NOT = { culture = high_valyrian }
				NOT = { culture = western_valyrian }
        	}  	
        	add_artifact = bejeweled_dagger
        	add_artifact = golden_bracelets
        }
		else_if = {
        	limit = { 
				culture_group = dornish
        	}  	
        	add_artifact = dornish_dagger
        	add_artifact = golden_bracelets
        }
		else_if = {
        	limit = { 
				OR = {
					culture_group = moraqi_group	
					culture_group = asshai_group
					culture_group = qarth_group
					culture_group = jogos_nhai_group
					culture_group = nghai_group
					culture_group = summer_islands
				}
			}
        	add_artifact = bejeweled_dagger
        	add_artifact = necklace_of_radiance
        }
        else_if = {
        	limit = { 
        		OR = {
					culture_group = yi_ti_group
					culture_group = jade_islands_group
					culture_group = naath_group
				}
        	}
			if = {
				limit = {
					tier = EMPEROR
					is_feudal = yes								
				}
				add_artifact = circlet_of_the_heavens
			}      	
        	add_artifact = golden_staff
        }

        else_if = {
        	limit = { 
        		culture_group = iron_isles_culture
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}								
				}
				add_artifact = driftwood_crown_mid
			}	     	
        	add_artifact = golden_sword
        }

        else_if = {
        	limit = {
        		OR = {
        			culture_group = free_folk
					culture_group = further_east
					culture_group = ibbenese_group
					culture_group = sothoryos_islands
        		}
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}							
				}
				add_artifact = amber_crown
			}	    	
        	add_artifact = obsidian_axe
        }
        hidden_effect = { 
        	event_target:smith = { character_event = { id = MNM.9110 days = 5 } } 
        	clr_character_flag = expensive_jewels
			clr_character_flag = good_jewels
			clr_character_flag = cheap_jewels
        }
    }    
}

#Okay crown jewels
character_event = {
    id = MNM.9107
    desc = EVTDESC_MNM_9107
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    option = {
        name = EVTOPTA_MNM_9107
		if = {
        	limit = { 
        		OR = {
        			culture_group = andal
					culture_group = first_men
					culture = high_valyrian
					culture = western_valyrian
					culture_group = sarnor_group
					culture_group = hyrkoon_group
        		}
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}										
				}
				add_artifact = the_lily_crown
				add_artifact = noble_scepter
			}	      	     	     	
        	add_artifact = engraved_sword
        }
		else_if = {
        	limit = { 
				OR = {
					culture_group = dornish
					culture_group = valyrian
					culture_group = free_cities
					culture_group = ghiscari_group		
					culture = lhazareen									
				}	
				NOT = { culture = high_valyrian }
				NOT = { culture = western_valyrian }
        	}  	
        	add_artifact = engraved_dagger
        	add_artifact = silver_bracelets
        }
		else_if = {
        	limit = { 
				OR = {
					culture_group = moraqi_group	
					culture_group = asshai_group
					culture_group = qarth_group
					culture_group = jogos_nhai_group
					culture_group = nghai_group
					culture_group = summer_islands
				}
			}
        	add_artifact = engraved_dagger
        	add_artifact = collar_of_pearls
        }
        else_if = {
        	limit = { 
        		OR = {
					culture_group = yi_ti_group
					culture_group = jade_islands_group
					culture_group = naath_group
				}
        	}
			if = {
				limit = {
					tier = EMPEROR
					is_feudal = yes								
				}
				add_artifact = circlet_of_twilight
			}      	   	
        	add_artifact = silver_staff
        }

        else_if = {
        	limit = { 
        		culture_group = iron_isles_culture
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}								
				}
				add_artifact = iron_crown
			}	     	   	
        	add_artifact = engraved_sword
        }

        else_if = {
        	limit = {
        		OR = {
        			culture_group = free_folk
					culture_group = further_east
					culture_group = ibbenese_group
					culture_group = sothoryos_islands
        		}
        	}
			if = {
				limit = {
					is_feudal_monarch_trigger = yes
					OR = {
						government = feudal_government
						independent = yes
					}								
				}
				add_artifact = engraved_crown
			}	    	     	
        	add_artifact = ceremonial_axe
        }
		
        hidden_effect = { 
        	event_target:smith = { character_event = { id = MNM.9110 days = 5 } } 
        	clr_character_flag = expensive_jewels
			clr_character_flag = good_jewels
			clr_character_flag = cheap_jewels
        }
    }    
}

#Ping event for problems 
character_event = {
	id = MNM.9108
    hide_window = yes

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = {
    	if = {
    		limit = { NOT = { event_target:smith_employer = { is_alive = yes } } }
    		liege = { save_event_target_as = smith_employer }
    	}

    	event_target:smith_employer = { character_event = { id = MNM.9109 } }
    }
}

#Problems
character_event = {
    id = MNM.9109
    desc = EVTDESC_MNM_9109_NEW
    picture = GFX_evt_merchant_caravan
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }
    
    #I want my expensive stuff
    option = {
    	trigger = { FROM  = { has_character_flag = expensive_jewels } }
        name = EVTOPTA_MNM_9109
        custom_tooltip = { text = EVTOPTA_MNM_9109_TT }

        wealth = -150
    }

    #Settle for less expensive stuff
    option = {
    	trigger = { FROM  = { has_character_flag = expensive_jewels } }
        name = EVTOPTB_MNM_9109
        custom_tooltip = { text = EVTOPTB_MNM_9109_TT }

        hidden_effect = {
        	FROM = {
	        	clr_character_flag = expensive_jewels
	        	set_character_flag = good_jewels
        	}
        	clr_character_flag = expensive_jewels
        	set_character_flag = good_jewels
    	}
    }

    #I want my good stuff
    option = {
    	trigger = { FROM  = { has_character_flag = good_jewels } }
        name = EVTOPTC_MNM_9109
        custom_tooltip = { text = EVTOPTC_MNM_9109_TT }

        wealth = -75
    }

    #Settle for less good stuff
    option = {
    	trigger = { FROM  = { has_character_flag = good_jewels } }
        name = EVTOPTD_MNM_9109
        custom_tooltip = { text = EVTOPTD_MNM_9109_TT }

        hidden_effect = {
        	FROM = {
	        	clr_character_flag = good_jewels
	        	set_character_flag = cheap_jewels
			}
        	clr_character_flag = good_jewels
        	set_character_flag = cheap_jewels
        }
    }

    after = { 
    	hidden_effect = { 
    		clr_character_flag = goldsmith_fail
    		set_character_flag = goldsmith_success 
    		character_event = { id = MNM.9111 days = 50 random = 100 }
    	}
    }
}

character_event = {
	id = MNM.9110
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		is_landed = no
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }
	
	immediate = {
		any_spouse = {
			limit = {
				dynasty = none
			}
			leave_court_and_die_effect = yes
		}
		leave_court_and_die_effect = yes
	}
}

#Ping event for checking if Goldsmith died
character_event = {
	id = MNM.9111
    hide_window = yes

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    	event_target:smith = { is_alive = yes }
    }

    fail_trigger_effect = { character_event = { id = MNM.9112 } }

    immediate = {
    	trigger_switch = {
    		on_trigger = has_character_flag
    		goldsmith_success = { event_target:smith = { character_event = { id = MNM.9104 } } }
    		goldsmith_fail = { event_target:smith = { character_event = { id = MNM.9108 } } }
    		goldsmith_steal = { event_target:smith = { character_event = { id = MNM.9131 } } }
		}
		clr_character_flag = goldsmith_success
		clr_character_flag = goldsmith_fail
		clr_character_flag = goldsmith_steal
    }
}

#Goldsmith died
character_event = {
    id = MNM.9112
    desc = EVTDESC_MNM_9112
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    hide_from = yes
    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }
    
    #Returned leftover money
    option = {
    	trigger = { has_character_flag = expensive_jewels }
        name = EVTOPTA_MNM_9112

        wealth = 400
    }

    #Returned leftover money
    option = {
    	trigger = { has_character_flag = good_jewels }
        name = EVTOPTB_MNM_9112

        wealth = 200
    }

    #Returned leftover money
    option = {
    	trigger = { has_character_flag = cheap_jewels }
        name = EVTOPTC_MNM_9112

        wealth = 100
    }
    after = {
    	clr_character_flag = expensive_jewels
		clr_character_flag = good_jewels
		clr_character_flag = cheap_jewels
		clr_character_flag = goldsmith_success
		clr_character_flag = goldsmith_fail
		clr_character_flag = goldsmith_steal
    }
}


###WEAPON EVENTS###
character_event = {
    id = MNM.9115
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy
    hide_from = yes
    is_triggered_only = yes
	
	
	desc = {
		text = EVTDESC_MNM_9115
		trigger = {
			any_courtier_or_vassal = {
				has_job_title = job_marshal
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_9115_b
		trigger = {
			NOT = { any_courtier_or_vassal = {
				has_job_title = job_marshal 
			} }
		}
	}
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = { #Selecting gender of the weapon smith
    	hidden_effect = {
			job_marshal = {
    			save_event_target_as = my_helpful_marshal
    		}
			capital_scope = {
				ROOT = {
					random_list = {
						5 = { #Woman
							modifier = { 
								factor = 6
								OR = {
									gender_equality_trigger = yes
									primary_title = { 
										has_law = true_cognatic_succession
									}
								}	
							}
							create_random_steward = {
								random_traits = yes
								dynasty = none
								religion = PREV
								culture = PREV
								female = yes
								attributes = {
									stewardship = 3
								}
								historical = yes
							}  
							new_character = { 
								save_event_target_as = smith
								set_character_flag = ai_flag_refuse_marriage
								set_character_flag = ai_flag_refuse_concubinage
								set_character_flag = cannot_marry
								set_character_flag = no_court_invites
								add_trait = cannot_marry
							}							
						} 
						95 = { #Man
							create_random_steward = {
								random_traits = yes
								female = no
								dynasty = none
								religion = PREV
								culture = PREV
								attributes = {
									stewardship = 3
								}
								historical = yes
							}
							new_character = { 
								save_event_target_as = smith
								set_character_flag = ai_flag_refuse_marriage
								set_character_flag = ai_flag_refuse_concubinage
								set_character_flag = cannot_marry
								set_character_flag = no_court_invites
								add_trait = cannot_marry
							}
						}
					}
					event_target:smith = {
						health = 3
						ROOT = {
							trigger_switch = {
								on_trigger = has_character_flag 
								weaponsmith = { PREV = { give_nickname = nick_the_weaponsmith } }
								armorsmith = { PREV = { give_nickname = nick_the_armorsmith } }
							}
						}
						random = {
							chance = 15
							add_trait = metallurgist
						}
						random_list = { #Stewardship
							15 = { change_stewardship = 1 }
							25 = { change_stewardship = 3 }
							20 = {
								change_stewardship = 5
								artisan_craftsmen_bloodline_increase_score = yes
							}
							10 = {
								change_stewardship = 7
								artisan_craftsmen_bloodline_increase_score = yes
							}
						}
						random_list = { #Personality
							1 = { add_trait = greedy }
							1 = { add_trait = envious }
							1 = {
								add_trait = charitable
								artisan_craftsmen_bloodline_increase_score = yes
							}
							1 = {
								add_trait = diligent
								artisan_craftsmen_bloodline_increase_score = yes
							}
							1 = { add_trait = deceitful }
						}
						random = {
							chance = 30
							modifier = {
								factor = 2
								trait = indulgent_wastrel
							}
							artisan_craftsmen_bloodline_increase_score = yes
							upgrade_education_effect = yes
						}
					}
				}
			}	
    	}

    	#Province for loc
    	random_province = { 
    		limit = { owner = { is_within_diplo_range = ROOT } }
    		save_event_target_as = neighbor_province
    	}
    	random_demesne_province = {
    		limit = { any_neighbor_province = { NOT = { owner = { character = ROOT } } } }
    		random_neighbor_province = {
    			limit = { NOT = { owner = { character = ROOT } } }
    			save_event_target_as = neighbor_province
    		}
    	}
    }

    #Yes, invite them!
    option = { 
        name = EVTOPTA_MNM_9115
        custom_tooltip = { text = EVTOPTA_MNM_9115_TT }
        event_target:my_helpful_marshal = {
        	show_portrait = yes
        }
        reverse_opinion = {
        	who = event_target:my_helpful_marshal
        	modifier = opinion_was_praised
        }
        hidden_effect = {
        	save_event_target_as = smith_employer
        	event_target:smith = { 
        		character_event = { id = MNM.9116 days = 7 } 
        	}
        }
		trigger = {
			any_courtier_or_vassal = {
				has_job_title = job_marshal
			}
		}
    }
	
	option = {
		name = EVTOPTA_MNM_9115_b
		 custom_tooltip = { text = EVTOPTA_MNM_9115_TT }
		  hidden_effect = {
        	save_event_target_as = smith_employer
        	event_target:smith = { 
        		character_event = { id = MNM.9116 days = 7 } 
        	}
        }
		trigger = {
			NOT = { 
				any_courtier_or_vassal = {
					has_job_title = job_marshal 
				} 
			}
		}
	}

    #Don't invite them
    option = {
        name = EVTOPTB_MNM_9115
        custom_tooltip = { text = EVTOPTB_MNM_9115_TT }
        hidden_effect = {
        	event_target:smith = { 
        		leave_court_and_die_effect = yes
        	}
        }
        clr_character_flag = weaponsmith
        clr_character_flag = armorsmith
    }
}

#Ping event for weaponsmith
character_event = {
    id = MNM.9116
    hide_window = yes
    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = { event_target:smith_employer = { character_event = { id = MNM.9118 } } }
}

#What kind of weapon would you like?
character_event = {
    id = MNM.9118
    desc = EVTDESC_MNM_9118
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    #Sword
    option = { 
        trigger = { NOT = { culture = dothraki } has_character_flag = weaponsmith }
        name = EVTOPTA_MNM_9118
        custom_tooltip = { text = EVTOPTA_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = weapon_sword } }
        ai_chance = { factor = 2 }
    }

    #Scimitar
    option = {
        trigger = { 
			has_character_flag = weaponsmith
			OR = {
				culture_group = ghiscari_group
				culture_group = jogos_nhai_group
				culture_group = nghai_group
				culture_group = moraqi_group
				culture_group = yi_ti_group
				culture_group = jade_islands_group
				culture_group = asshai_group
				culture_group = qarth_group
			}	
		}
        name = EVTOPTB_MNM_9118
        custom_tooltip = { text = EVTOPTB_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = weapon_scimitar } }
        ai_chance = { factor = 5 }
    }
    
    #Lance
    option = {
        name = EVTOPTC_MNM_9118
		trigger = { NOT = { culture = dothraki } has_character_flag = weaponsmith }
        custom_tooltip = { text = EVTOPTC_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = weapon_lance } }
        ai_chance = { 
        	factor = 1 
        }
    }
	
	#Sword of Fire!
    option = { 
        trigger = { 
			has_character_flag = weaponsmith
			OR = {
				trait = fire_obsessed
				trait = lunatic
				trait = red_priest
				trait = favored_by_rhllor
				trait = chosen_by_rhllor
			}
		}
        name = EVTOPTH_MNM_9118
		tooltip_info = yes
        custom_tooltip = { text = EVTOPTH_MNM_9118_TT }	
		scaled_wealth = { value = -1 min = -100 max = -200 }
        hidden_tooltip = { 
			FROM = { set_character_flag = weapon_fire_sword } 
			event_target:smith = { set_character_flag = good_weapons }
        	set_character_flag = good_weapons

			set_character_flag = special_weapon			
		}
        ai_chance = { factor = 4 }
    }
	
	#Dornish Spear
    option = { 
        trigger = { 
			has_character_flag = weaponsmith
			OR = {
				culture_group = dornish
				capital_scope = { culture_group = dornish }
			}	
		}
        name = EVTOPTI_MNM_9118
		custom_tooltip = { text = EVTOPTI_MNM_9118_TT }	
		scaled_wealth = { value = -1 min = -100 max = -200 }
        hidden_tooltip = { 
			FROM = { set_character_flag = weapon_dornish_spear } 
			event_target:smith = { set_character_flag = good_weapons }
        	set_character_flag = good_weapons	
			
			set_character_flag = special_weapon
		}
        ai_chance = { factor = 4 }
    }
	
	#Myrish Stiletto
    option = { 
        trigger = { 
			has_character_flag = weaponsmith
			OR = {
				culture = myrman
				capital_scope = { culture = myrman }
			}	
		}
        name = EVTOPTJ_MNM_9118
		custom_tooltip = { text = EVTOPTJ_MNM_9118_TT }	
		scaled_wealth = { value = -1 min = -100 max = -200 }
        hidden_tooltip = { 
			FROM = { set_character_flag = weapon_myrish_stiletto } 
			event_target:smith = { set_character_flag = good_weapons }
        	set_character_flag = good_weapons		

			set_character_flag = special_weapon
		}
        ai_chance = { factor = 4 }
    }
    
    #Axe
    option = {
        name = EVTOPTD_MNM_9118
		trigger = { NOT = { culture = dothraki } has_character_flag = weaponsmith }
        custom_tooltip = { text = EVTOPTD_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = weapon_axe } }
        ai_chance = { 
        	factor = 1
        	modifier = { is_tribal = yes factor = 3 }
			modifier = { culture = norvoshi factor = 4 }
			modifier = { culture_group = iron_isles_culture factor = 2 }
        }
    }

    #Mace
    option = {
        trigger = { is_nomadic = no has_character_flag = weaponsmith }
        name = EVTOPTE_MNM_9118
        custom_tooltip = { text = EVTOPTE_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = weapon_mace } }
        ai_chance = { 
        	factor = 1
        }
    }
	
	 #Arakh
    option = {
        trigger = { culture = dothraki has_character_flag = weaponsmith }
        name = EVTOPTU_MNM_9118
        custom_tooltip = { text = EVTOPTU_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = weapon_arakh } }
        ai_chance = { factor = 5 }
    }

    #Bow
    option = {
        trigger = { 
			has_character_flag = weaponsmith
			
		}
        name = EVTOPTF_MNM_9118
        custom_tooltip = { text = EVTOPTF_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = weapon_bow } }
        ai_chance = { factor = 5 }
    }
	
	#Armor
    option = {
    	trigger = { has_character_flag = armorsmith }
        name = EVTOPTG_MNM_9118
        custom_tooltip = { text = EVTOPTG_MNM_9118_TT }
        hidden_tooltip = { FROM = { set_character_flag = armor_set } }
    }

    after = {
		if = {
			limit = { 
				NOT = { has_character_flag = special_weapon }
			}
			hidden_effect = { FROM = { character_event = { id = MNM.9119 } } }
		}
		else = {
			hidden_tooltip = {
				random_list = {
					60 = { #Success
						modifier = { factor = 0.7 FROM = { stewardship <= 2 } }
						modifier = { factor = 0.7 FROM = { stewardship <= 4 } }
						modifier = { factor = 0.7 FROM = { stewardship <= 6 } }
						modifier = { factor = 0.7 FROM = { stewardship <= 8 } }
						modifier = { factor = 0.7 FROM = { stewardship <= 10 } }
						modifier = { factor = 1.1 FROM = { stewardship >= 10 } }
						modifier = { factor = 1.1 FROM = { stewardship >= 12 } }
						modifier = { factor = 1.1 FROM = { stewardship >= 14 } }
						modifier = { factor = 1.1 FROM = { stewardship >= 16 } }
						modifier = { factor = 1.1 FROM = { stewardship >= 18 } }
						modifier = { factor = 1.1 FROM = { stewardship >= 20 } }
						modifier = { factor = 1.3 FROM = { trait = greedy } }
						modifier = { factor = 1.3 FROM = { trait = diligent } }
						modifier = { factor = 1.3 FROM = { trait = patient } }
						modifier = { factor = 1.3 FROM = { is_smart_trigger = yes } }
						set_character_flag = smith_success
					}
					40 = { #Fail
						set_character_flag = smith_fail
					}
					10 = { #Steal
					    trigger = {
							NOT = {
								any_owned_bloodline = {
									has_bloodline_flag = bloodline_artisan_craftsmen
								}
							}
						}
						modifier = { factor = 1.3 FROM = { trait = envious } }
						modifier = { factor = 0.2 FROM = { trait = charitable } }
						modifier = { factor = 0.2 FROM = { trait = content } }
						modifier = { factor = 0 FROM = { trait = honorable } }
						modifier = { factor = 1.5 FROM = { trait = ambitious } }
						modifier = { factor = 1.3 FROM = { trait = deceitful } }
						modifier = { factor = 1.5 FROM = { trait = ruthless } }
						set_character_flag = smith_steal
					}
				}
				character_event = { id = MNM.9125 days = 50 random = 100 }
				character_event = { id = MNM.9133 days = 20 random = 5 } #tombola for random events
				character_event = { id = MNM.9995 days = 10 random = 5 } #metallurgist upgrade
			}	
		}
    }
}


#Ping event for weaponsmith
character_event = {
    id = MNM.9119
    hide_window = yes
    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = { event_target:smith_employer = { character_event = { id = MNM.9120 } } }
}


#And how much are you willing to pay?
character_event = {
    id = MNM.9120
    desc = EVTDESC_MNM_9120
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    #THe best money can buy
    option = { 
        name = EVTOPTA_MNM_9120
        trigger = { prestige = 2000 }
        tooltip_info = yes
		custom_tooltip = { text = available_due_to_prestige_tt }
       	if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            custom_tooltip = { text = EVTOPTA_MNM_9120_TT_SWORDSCIMITAR }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            custom_tooltip = { text = EVTOPTA_MNM_9120_TT_SWORDSCIMITAR }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_lance } }
           	custom_tooltip = { text = EVTOPTA_MNM_9120_TT_LANCE }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_axe } }
            custom_tooltip = { text = EVTOPTA_MNM_9120_TT_AXE }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_mace } }
            custom_tooltip = { text = EVTOPTA_MNM_9120_TT_MACE }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_bow } }
            custom_tooltip = { text = EVTOPTA_MNM_9120_TT_BOW }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_arakh } }
            custom_tooltip = { text = EVTOPTA_MNM_9120_TT_SWORDSCIMITAR }
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            custom_tooltip = { text = EVTOPTA_MNM_9120_TT_ARMOR }
        }
		
		scaled_wealth = { value = -2 min = -200 max = -400 }
		
        hidden_effect = {
        	event_target:smith = { set_character_flag = expensive_weapons }
        	set_character_flag = expensive_weapons
			random_list = {
				40 = { #Success
        			modifier = { factor = 0.7 FROM = { stewardship <= 2 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 4 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 6 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 8 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 12 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 14 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 16 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 18 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 20 } }
        			modifier = { factor = 1.3 FROM = { trait = greedy } }
        			modifier = { factor = 1.3 FROM = { trait = diligent } }
        			modifier = { factor = 1.3 FROM = { trait = patient } }
        			modifier = { factor = 1.3 FROM = { is_smart_trigger = yes } }
        			set_character_flag = smith_success
				}
				60 = { #Fail
					set_character_flag = smith_fail
				}
				10 = { #Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
							}
						}
					}
        			modifier = { factor = 1.3 FROM = { trait = envious } }
        			modifier = { factor = 0.2 FROM = { trait = charitable } }
        			modifier = { factor = 0.2 FROM = { trait = content } }
					modifier = { factor = 0 FROM = { trait = honorable } }
        			modifier = { factor = 1.5 FROM = { trait = ambitious } }
        			modifier = { factor = 1.3 FROM = { trait = deceitful } }
					modifier = { factor = 1.5 FROM = { trait = ruthless } }
        			set_character_flag = smith_steal
				}
			}
        	character_event = { id = MNM.9125 days = 50 random = 100 }
        	character_event = { id = MNM.9133 days = 20 random = 5 } #tombola for random events
			character_event = { id = MNM.9995 days = 10 random = 5 } #metallurgist upgrade
		}
    	ai_chance = {
    		factor = 33
    		modifier = {
    			tier = EMPEROR
    			factor = 10
    		}
    		modifier = {
    			OR = {
    				tier = KING	
    				tier = DUKE
    			}
    			factor = 3
    		}
    		modifier = {   			
    			factor = 0
				NOR = {
    				AND = {
						yearly_income = 200
						wealth = 300
					}
					AND = {
						yearly_income = 100 
						NOT = { yearly_income = 200 }
						scaled_wealth = 1.5
					}
					AND = {
						NOT = { yearly_income = 100 }
						wealth = 150
					}
    			}
    		}
    	}
    }

    #Something nice
    option = {
        name = EVTOPTB_MNM_9120
        if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            custom_tooltip = { text = EVTOPTB_MNM_9120_TT_SWORDSCIMITAR }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            custom_tooltip = { text = EVTOPTB_MNM_9120_TT_SWORDSCIMITAR }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_lance } }
           	custom_tooltip = { text = EVTOPTB_MNM_9120_TT_LANCE }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_axe } }
            custom_tooltip = { text = EVTOPTB_MNM_9120_TT_AXE }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_mace } }
            custom_tooltip = { text = EVTOPTB_MNM_9120_TT_MACE }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_bow } }
            custom_tooltip = { text = EVTOPTB_MNM_9120_TT_BOW }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_arakh } }
            custom_tooltip = { text = EVTOPTB_MNM_9120_TT_SWORDSCIMITAR }
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            custom_tooltip = { text = EVTOPTB_MNM_9120_TT_ARMOR }
        }
		
        scaled_wealth = { value = -1 min = -100 max = -200 }

        hidden_effect = {
        	event_target:smith = { set_character_flag = good_weapons }
        	set_character_flag = good_weapons
			random_list = {
				60 = { #Success
        			modifier = { factor = 0.7 FROM = { stewardship <= 2 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 4 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 6 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 8 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 12 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 14 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 16 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 18 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 20 } }
        			modifier = { factor = 1.3 FROM = { trait = greedy } }
        			modifier = { factor = 1.3 FROM = { trait = diligent } }
        			modifier = { factor = 1.3 FROM = { trait = patient } }
        			modifier = { factor = 1.3 FROM = { is_smart_trigger = yes } }
        			set_character_flag = smith_success
				}
				40 = { #Fail
					set_character_flag = smith_fail
				}
				10 = { #Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
							}
						}
					}
        			modifier = { factor = 1.3 FROM = { trait = envious } }
        			modifier = { factor = 0.2 FROM = { trait = charitable } }
        			modifier = { factor = 0.2 FROM = { trait = content } }
					modifier = { factor = 0 FROM = { trait = honorable } }
        			modifier = { factor = 1.5 FROM = { trait = ambitious } }
        			modifier = { factor = 1.3 FROM = { trait = deceitful } }
					modifier = { factor = 1.5 FROM = { trait = ruthless } }
        			set_character_flag = smith_steal
				}
			}
        	character_event = { id = MNM.9125 days = 50 random = 100 }
        	character_event = { id = MNM.9133 days = 20 random = 5 } #tombola for random events
			character_event = { id = MNM.9995 days = 10 random = 5 } #metallurgist upgrade
		}
		ai_chance = {
    		factor = 33
    		modifier = {
    			OR = {
    				tier = KING	
    				tier = DUKE
    			}
    			factor = 10
    		}
    		modifier = {
    			lower_tier_than = DUKE
    			factor = 3
    		}
    		modifier = {
    			tier = EMPEROR
    			factor = 3
    		}
    		modifier = {   			
    			factor = 0
				NOR = {
    				AND = {
						yearly_income = 200
						wealth = 150
					}
					AND = {
						yearly_income = 100 
						NOT = { yearly_income = 200 }
						scaled_wealth = 0.75
					}
					AND = {
						NOT = { yearly_income = 100 }
						wealth = 75
					}
    			}
    		}
    	}
    }
   
   	#I can't afford that much 
    option = {
        name = EVTOPTC_MNM_9120
		if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            custom_tooltip = { text = EVTOPTC_MNM_9120_TT_SWORDSCIMITAR }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            custom_tooltip = { text = EVTOPTC_MNM_9120_TT_SWORDSCIMITAR }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_arakh } }
            custom_tooltip = { text = EVTOPTC_MNM_9120_TT_SWORDSCIMITAR }
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            custom_tooltip = { text = EVTOPTC_MNM_9120_TT_ARMOR }
        }
        if = {
            limit = { 
				NOT = { FROM = { has_character_flag = weapon_scimitar } }
				NOT = { FROM = { has_character_flag = weapon_sword } }
				NOT = { FROM = { has_character_flag = weapon_arakh } }
				NOT = { FROM = { has_character_flag = armor_set } }
			}
            custom_tooltip = { text = EVTOPTC_MNM_9120_TT_BOW }
        }

        scaled_wealth = { value = -0.5 min = -50 max = -100 }

         hidden_effect = {
        	event_target:smith = { set_character_flag = cheap_weapons }
        	set_character_flag = cheap_weapons
			random_list = {
				100 = { #Success
        			modifier = { factor = 0.7 FROM = { stewardship <= 2 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 4 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 6 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 8 } }
        			modifier = { factor = 0.7 FROM = { stewardship <= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 10 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 12 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 14 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 16 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 18 } }
        			modifier = { factor = 1.1 FROM = { stewardship >= 20 } }
        			modifier = { factor = 1.3 FROM = { trait = greedy } }
        			modifier = { factor = 1.3 FROM = { trait = diligent } }
        			modifier = { factor = 1.3 FROM = { trait = patient } }
        			modifier = { factor = 1.3 FROM = { is_smart_trigger = yes } }
        			set_character_flag = smith_success
				}
				10 = { #Steal
        			modifier = { factor = 1.3 FROM = { trait = envious } }
        			modifier = { factor = 0.2 FROM = { trait = charitable } }
        			modifier = { factor = 0.2 FROM = { trait = content } }
					modifier = { factor = 0 FROM = { trait = honorable } }
        			modifier = { factor = 1.5 FROM = { trait = ambitious } }
        			modifier = { factor = 1.3 FROM = { trait = deceitful } }
					modifier = { factor = 1.5 FROM = { trait = ruthless } }
        			set_character_flag = smith_steal
				}
			}
        	character_event = { id = MNM.9125 days = 50 random = 100 }
        	character_event = { id = MNM.9133 days = 20 random = 5 } #tombola for random events
			character_event = { id = MNM.9995 days = 10 random = 5 } #metallurgist upgrade
		}

        ai_chance = {
    		factor = 33
    		modifier = {
    			tier = COUNT
    			factor = 10
    		}
    		modifier = {
    			OR = {
    				tier = KING	
    				tier = DUKE
    			}
    			factor = 3
    		}
    	}
    }

    #Actually, no
    option = {
        name = EVTOPTD_MNM_9120
        custom_tooltip = { text = EVTOPTD_MNM_9120_TT }

       	ai_chance = { 
            factor = 15 
            modifier = {
                NOR = {
                    has_education_martial_trigger = yes
                    has_lifestyle_martial_trigger = yes
                }
                factor = 20
            }
        }

		clr_character_flag = weaponsmith
        clr_character_flag = armorsmith
        hidden_effect = { FROM = { character_event = { id = MNM.9110 days = 5 } } }
    }
}	

#Ping event for success 
character_event = {
	id = MNM.9121
    hide_window = yes

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = {
    	if = {
    		limit = { NOT = { event_target:smith_employer = { is_alive = yes } } }
    		liege = { save_event_target_as = smith_employer }
    	}

    	trigger_switch = {
    		on_trigger = has_character_flag
    		expensive_weapons		= { event_target:smith_employer = { character_event = { id = MNM.9122 } } }
    		good_weapons			= { event_target:smith_employer = { character_event = { id = MNM.9123 } } }
    		cheap_weapons			= { event_target:smith_employer = { character_event = { id = MNM.9124 } } }
    	}
    }
}

#Expensive weapon done
character_event = {
    id = MNM.9122
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
 	
	desc = {
    	trigger = { FROM = { NOT = { has_character_flag = armor_set } } }
    	text = EVTDESC_MNM_9122
    }
	desc = {
    	trigger = { FROM = { has_character_flag = armor_set } }
    	text = EVTDESC_MNM_9122_B
    }
	
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    option = { 
        name = {
            text = EVTOPTA_MNM_9122_SWORD
            trigger = { FROM = { has_character_flag = weapon_sword } }
        } 
        name = {
            text = EVTOPTA_MNM_9122_SCIMITAR
            trigger = { FROM = { has_character_flag = weapon_scimitar } }
        } 
        name = {
            text = EVTOPTA_MNM_9122_LANCE
            trigger = { FROM = { has_character_flag = weapon_lance } }
        } 
        name = {
            text = EVTOPTA_MNM_9122_AXE
            trigger = { FROM = { has_character_flag = weapon_axe } }
        } 
        name = {
            text = EVTOPTA_MNM_9122_MACE
            trigger = { FROM = { has_character_flag = weapon_mace } }
        } 
        name = {
            text = EVTOPTA_MNM_9122_BOW
            trigger = { FROM = { has_character_flag = weapon_bow } }
        } 
		name = {
            text = EVTOPTA_MNM_9122_ARAKH
            trigger = { FROM = { has_character_flag = weapon_arakh } }
        }
		name = {
            text = EVTOPTA_MNM_9122_ARMOR
            trigger = { FROM = { has_character_flag = armor_set } }
        } 
		
        if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            add_artifact = sword_tier_3_heartseeker
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            add_artifact = scimitar_tier_3_golden
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_lance } }
            add_artifact = lance_tier_3_impaler
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_axe } }
            add_artifact = axe_tier_3_cleaver
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_mace } }
            add_artifact = mace_tier_3_foe_hammer
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_bow } }
            add_artifact = bow_tier_3_silent_wind
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_arakh } }
            add_artifact = arakh_tier_3
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            add_artifact = armor_tier_3_guardian
        }
		new_artifact = { 
			set_artifact_flag = heirloom_@PREV 
			if = { #name sword
				limit = { has_artifact_flag = combat_weapon }
				get_random_sword_name_effect = yes
			}
		}
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
    }

    option = {
		trigger = { NOT = { FROM = { has_character_flag = weapon_arakh } } }
        name = {
            text = EVTOPTB_MNM_9122_SWORD
            trigger = { FROM = { has_character_flag = weapon_sword } }
        } 
        name = {
            text = EVTOPTB_MNM_9122_SCIMITAR
            trigger = { FROM = { has_character_flag = weapon_scimitar } }
        } 
        name = {
            text = EVTOPTB_MNM_9122_LANCE
            trigger = { FROM = { has_character_flag = weapon_lance } }
        } 
        name = {
            text = EVTOPTB_MNM_9122_AXE
            trigger = { FROM = { has_character_flag = weapon_axe } }
        } 
        name = {
            text = EVTOPTB_MNM_9122_MACE
            trigger = { FROM = { has_character_flag = weapon_mace } }
        } 
        name = {
            text = EVTOPTB_MNM_9122_BOW
            trigger = { FROM = { has_character_flag = weapon_bow } }
        }
		name = {
            text = EVTOPTB_MNM_9122_ARMOR
            trigger = { FROM = { has_character_flag = armor_set } }
        }
		
        if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            add_artifact = sword_tier_3_vengeance
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            add_artifact = scimitar_tier_3_fortune
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_lance } }
            add_artifact = lance_tier_3_trident
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_axe } }
            add_artifact = axe_tier_3_ravager
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_mace } }
            add_artifact = mace_tier_3_bone_breaker
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_bow } }
            add_artifact = bow_tier_3_lightning
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            add_artifact = armor_tier_3_champion
        }
		new_artifact = { 
			set_artifact_flag = heirloom_@PREV 
			if = { #name sword
				limit = { has_artifact_flag = combat_weapon }
				get_random_sword_name_effect = yes
			}
		}
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
    }
    
    option = {
		trigger = { NOT = { FROM = { has_character_flag = weapon_arakh } } }
        name = {
            text = EVTOPTC_MNM_9122_SWORD
            trigger = { FROM = { has_character_flag = weapon_sword } }
        } 
        name = {
            text = EVTOPTC_MNM_9122_SCIMITAR
            trigger = { FROM = { has_character_flag = weapon_scimitar } }
        } 
        name = {
            text = EVTOPTC_MNM_9122_LANCE
            trigger = { FROM = { has_character_flag = weapon_lance } }
        } 
        name = {
            text = EVTOPTC_MNM_9122_AXE
            trigger = { FROM = { has_character_flag = weapon_axe } }
        } 
        name = {
            text = EVTOPTC_MNM_9122_MACE
            trigger = { FROM = { has_character_flag = weapon_mace } }
        } 
        name = {
            text = EVTOPTC_MNM_9122_BOW
            trigger = { FROM = { has_character_flag = weapon_bow } }
        }
		name = {
            text = EVTOPTC_MNM_9122_ARMOR
            trigger = { FROM = { has_character_flag = armor_set } }
        }
		
        if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            add_artifact = sword_tier_3_fury
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            add_artifact = scimitar_tier_3_conquest
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_lance } }
            add_artifact = lance_tier_3_piercer
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_axe } }
            add_artifact = axe_tier_3_marauder
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_mace } }
            add_artifact = mace_tier_3_shatterer
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_bow } }
            add_artifact = bow_tier_3_eagle
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            add_artifact = armor_tier_3_warden
        }
		new_artifact = { 
			set_artifact_flag = heirloom_@PREV 
			if = { #name sword
				limit = { has_artifact_flag = combat_weapon }
				get_random_sword_name_effect = yes
			}
		}
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
    }
    after = {
    	hidden_effect = { FROM = { character_event = { id = MNM.9127 days = 5 } } }
    	clr_character_flag = expensive_weapons
		clr_character_flag = good_weapons
		clr_character_flag = cheap_weapons
		clr_character_flag = weaponsmith
        clr_character_flag = armorsmith
		clr_character_flag = special_weapon
    }
}

#Good weapon done
character_event = {
    id = MNM.9123 #Fixed
    desc = EVTDESC_MNM_9123
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
 
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    option = { 
        name = EVTOPTA_MNM_9123

        if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            add_artifact = sword_tier_2
			set_character_flag = sword_tier_2
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_2
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            add_artifact = scimitar_tier_2
			set_character_flag = scimitar_tier_2
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_2
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_lance } }
            add_artifact = lance_tier_2
			set_character_flag = lance_tier_2
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_2
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_axe } }
			if = {
				limit = {
					OR = {
						culture = norvosi
						capital_scope = { culture = norvosi }
					}
				}
				add_artifact = norvoshi_longaxe
				set_character_flag = weapon_axe
				new_artifact = {
					set_name = artifact_name
					set_description = norvoshi_longaxe_desc
				}
			}
			else = {			
				add_artifact = axe_tier_2
				set_character_flag = axe_tier_2
				new_artifact = {
					set_name = artifact_name
					set_description = artifact_description_smith_tier_2
				}
			}	
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_mace } }
            add_artifact = mace_tier_2
			set_character_flag = mace_tier_2
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_2
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_bow } }
            add_artifact = bow_tier_2
			set_character_flag = bow_tier_2
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_2
            }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_arakh } }
            add_artifact = arakh_tier_2
			set_character_flag = arakh_tier_2
			new_artifact = {
            	set_name = artifact_name
            	set_description = arakh_tier_2_desc
            }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_fire_sword } }
            add_artifact = fire_sword
			set_character_flag = weapon_fire_sword
			new_artifact = {
            	set_name = artifact_name
            	set_description = fire_sword_desc
            }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_dornish_spear } }
            add_artifact = dornish_spear
			set_character_flag = weapon_dornish_spear
			new_artifact = {
            	set_name = artifact_name
            	set_description = dornish_spear_desc
            }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_myrish_stiletto } }
            add_artifact = myrish_stiletto
			set_character_flag = weapon_myrish_stiletto
			new_artifact = {
            	set_name = artifact_name
            	set_description = myrish_stiletto_desc
            }
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            add_artifact = armor_tier_2
        }
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
    }
	after = {
    	hidden_effect = { FROM = { character_event = { id = MNM.9127 days = 5 } } }
    	clr_character_flag = expensive_weapons
		clr_character_flag = good_weapons
		clr_character_flag = cheap_weapons
		clr_character_flag = weaponsmith
        clr_character_flag = armorsmith
		clr_character_flag = special_weapon

		clr_character_flag = sword_tier_2
		clr_character_flag = scimitar_tier_2
		clr_character_flag = lance_tier_2
		clr_character_flag = weapon_axe
		clr_character_flag = axe_tier_2
		clr_character_flag = mace_tier_2
		clr_character_flag = bow_tier_2
		clr_character_flag = arakh_tier_2
		clr_character_flag = weapon_fire_sword
		clr_character_flag = weapon_dornish_spear
		clr_character_flag = weapon_myrish_stiletto
    }
}

#Cheap weapon done
character_event = {
    id = MNM.9124 #Fixed
    desc = {
    	trigger = {
    		tier = EMPEROR
    	}
    	text = EVTDESC_MNM_9124
    }
    desc = {
    	trigger = {
    		tier = KING
    	}
    	text = EVTDESC_MNM_9124_KING
    }
    desc = {
    	trigger = {
    		NOT = { tier = KING }
    	}
    	text = EVTDESC_MNM_9124_GENERIC
    }


    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    option = { 
        name = EVTOPTA_MNM_9124

        if = {
            limit = { FROM = { has_character_flag = weapon_sword } }
            add_artifact = sword_tier_1
			set_character_flag = sword_tier_1
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_1
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_scimitar } }
            add_artifact = scimitar_tier_1
			set_character_flag = scimitar_tier_1
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_1
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_lance } }
            add_artifact = lance_tier_1
			set_character_flag = lance_tier_1
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_1
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_axe } }
            add_artifact = axe_tier_1
			set_character_flag = axe_tier_1
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_1
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_mace } }
            add_artifact = mace_tier_1
			set_character_flag = mace_tier_1
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_1
            }
        }
        if = {
            limit = { FROM = { has_character_flag = weapon_bow } }
            add_artifact = bow_tier_1
			set_character_flag = bow_tier_1
			new_artifact = {
            	set_name = artifact_name
            	set_description = artifact_description_smith_tier_1
            }
        }
		if = {
            limit = { FROM = { has_character_flag = weapon_arakh } }
            add_artifact = arakh_tier_1
			set_character_flag = arakh_tier_1
			new_artifact = {
            	set_name = artifact_name
            	set_description = arakh_tier_1_desc
            }
        }
		if = {
            limit = { FROM = { has_character_flag = armor_set } }
            add_artifact = armor_tier_1
        }
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
    }
    after = {
    	hidden_effect = { FROM = { character_event = { id = MNM.9127 days = 5 } } }
    	clr_character_flag = expensive_weapons
		clr_character_flag = good_weapons
		clr_character_flag = cheap_weapons
		clr_character_flag = weaponsmith
        clr_character_flag = armorsmith
		clr_character_flag = special_weapon

		clr_character_flag = sword_tier_1
		clr_character_flag = scimitar_tier_1
		clr_character_flag = lance_tier_1
		clr_character_flag = axe_tier_1
		clr_character_flag = mace_tier_1
		clr_character_flag = bow_tier_1
		clr_character_flag = arakh_tier_1
    }
}

#Ping event for problems 
character_event = {
	id = MNM.9128
    hide_window = yes

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    immediate = {
    	if = {
    		limit = { NOT = { event_target:smith_employer = { is_alive = yes } } }
    		liege = { save_event_target_as = smith_employer }
    	}

    	event_target:smith_employer = { character_event = { id = MNM.9129 } }
    }
}

#Problems
character_event = {
    id = MNM.9129
    desc = EVTDESC_MNM_9129
    picture = GFX_evt_merchant_caravan
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }
    
    #I want my expensive stuff
    option = {
    	trigger = { FROM  = { has_character_flag = expensive_weapons } }
        name = EVTOPTA_MNM_9109
        custom_tooltip = { text = EVTOPTA_MNM_9129_TT }

      scaled_wealth = { value = -1 min = -100 max = -200 }
    }

    #Settle for less expensive stuff
    option = {
    	trigger = { FROM  = { has_character_flag = expensive_weapons } }
        name = EVTOPTB_MNM_9109
        custom_tooltip = { text = EVTOPTB_MNM_9129_TT }

        hidden_effect = {
        	FROM = {
	        	clr_character_flag = expensive_weapons
	        	set_character_flag = good_weapons
        	}
        	clr_character_flag = expensive_weapons
        	set_character_flag = good_weapons
    	}
    }

    #I want my good stuff
    option = {
    	trigger = { FROM  = { has_character_flag = good_weapons } }
        name = EVTOPTC_MNM_9109
        custom_tooltip = { text = EVTOPTA_MNM_9129_TT }

		scaled_wealth = { value = -0.5 min = -50 max = -100 }
    }

    #Settle for less good stuff
    option = {
    	trigger = { FROM  = { has_character_flag = good_weapons } }
        name = EVTOPTD_MNM_9109
        custom_tooltip = { text = EVTOPTB_MNM_9129_TT }

        hidden_effect = {
        	FROM = {
	        	clr_character_flag = good_weapons
	        	set_character_flag = cheap_weapons
			}
        	clr_character_flag = good_weapons
        	set_character_flag = cheap_weapons
        }
    }

    after = { 
    	hidden_effect = { 
    		clr_character_flag = smith_fail
    		set_character_flag = smith_success 
    		character_event = { id = MNM.9125 days = 50 random = 100 }
    	}
    }
}

#Ping event for checking if Weaponsmith died
character_event = {
	id = MNM.9125
    hide_window = yes

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    	event_target:smith = { is_alive = yes }
    }

    fail_trigger_effect = { character_event = { id = MNM.9126 } }

    immediate = {
    	trigger_switch = {
    		on_trigger = has_character_flag
    		smith_success = { event_target:smith = { character_event = { id = MNM.9121 } } }
    		smith_fail = { 
				trigger = { NOT = { has_character_flag = special_weapon } }
				event_target:smith = { character_event = { id = MNM.9128 } } 
			}
    		smith_steal = { event_target:smith = { character_event = { id = MNM.9131 } } }
		}
		clr_character_flag = smith_success
		clr_character_flag = smith_fail
		clr_character_flag = smith_steal
    }
}

#Weaponsmith died
character_event = {
    id = MNM.9126
    desc = EVTDESC_MNM_9112
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    hide_from = yes

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }
    
    #Returned leftover money
    option = {
    	trigger = { has_character_flag = expensive_weapons }
        name = EVTOPTA_MNM_9112
		scaled_wealth = { value = 1.5 min = 150 max = 300 }
    }

    #Returned leftover money
    option = {
    	trigger = { has_character_flag = good_weapons }
        name = EVTOPTB_MNM_9112

       scaled_wealth = { value = 0.75 min = 75 max = 150 }
    }

    #Returned leftover money
    option = {
    	trigger = { has_character_flag = cheap_weapons }
        name = EVTOPTC_MNM_9112
		scaled_wealth = { value = 0.375 min = 37 max = 75 }
    }
    after = {
    	clr_character_flag = expensive_weapons
		clr_character_flag = good_weapons
		clr_character_flag = cheap_weapons
		clr_character_flag = weaponsmith
        clr_character_flag = armorsmith
		clr_character_flag = smith_success
		clr_character_flag = smith_fail
		clr_character_flag = smith_steal
		clr_character_flag = special_weapon
    }
}

character_event = {
	id = MNM.9127
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		is_landed = no
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }
	
	immediate = {
		any_spouse = {
			limit = {
				dynasty = none
			}
			leave_court_and_die_effect = yes
		}
		leave_court_and_die_effect = yes
	}
}

#What kind of smith?
character_event = {
	id = MNM.9130
	desc = EVT_DESC_MNM_9130
    picture = GFX_evt_treasure_chamber
    border = GFX_event_normal_frame_economy

	is_triggered_only = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = { #Weapon
		name = EVT_OPTA_MNM_9310
	    trigger = {
	    	job_marshal = { always = yes }
	    }
	    custom_tooltip = {
	    	text = employ_a_smith_weapon_search_tt
	    	hidden_effect = {
	    		set_character_flag = weaponsmith
	    		character_event = { id = MNM.9115 days = 50 random = 50 }
	    	}
	   	}
		ai_chance = {
            factor = 100
            modifier = {
                factor = 0
                any_artifact = { has_artifact_flag = combat_weapon }
            }
        }
	}
	option = { #Armor
		name = EVT_OPTB_MNM_9310
	    trigger = {
	    	job_marshal = { always = yes }
	    }
	    custom_tooltip = {
	    	text = employ_a_smith_armor_search_tt
	    	hidden_effect = {
	    		set_character_flag = armorsmith
	    		character_event = { id = MNM.9115 days = 50 random = 50 }
	    	}
	   	}
		ai_chance = {
            factor = 100
            modifier = {
                factor = 0
                any_artifact = { has_artifact_flag = armor_set }
            }
        }
	}
	option = { #Gold
		name = EVT_OPTC_MNM_9310
	    trigger = {
			is_feudal_monarch_trigger = yes
			can_press_claims_trigger = yes
	    }
	    custom_tooltip = {
	    	text = employ_a_smith_gold_search_tt
	    	hidden_effect = {
	    		character_event = { id = MNM.9100 days = 50 random = 50 }
	    	}
	   	}
		ai_chance = {
            factor = 100
            modifier = {
                factor = 0
                any_artifact = { has_artifact_flag = crown_jewel }
            }
        }
	}
	option = {
		name = EVT_OPTD_MNM_9310
		custom_tooltip = {
			text = employ_smith_cd_reset_tt
			hidden_effect = {
				remove_character_modifier = employ_a_smith_cd
			}
		}
		ai_chance = {
            factor = 0.1
        }
	}
}

#Smith steals item and decides who to give it to
character_event = {
	id = MNM.9131
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	immediate = {
		if = {
			limit = { NOT = { event_target:smith_employer = { is_alive = yes } } }
    		liege = { save_event_target_as = smith_employer }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			expensive_jewels = { 
		        if = {
		        	limit = { 
		        		FROM = {
			        		OR = {
								culture_group = andal
								culture = high_valyrian
								culture = western_valyrian
								culture_group = sarnor_group
								culture_group = hyrkoon_group
							}
						}
		        	}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = crown_of_majesty
						new_artifact = { set_artifact_flag = stolen_by_smith }
						add_artifact = emerald_scepter
					}
					add_artifact = sword_of_heroes
		        	add_artifact = crown_of_majesty
		        }
		        else_if = {
		        	limit = { 
						FROM = { culture_group = first_men }
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = crown_of_winter
						add_artifact = emerald_scepter
					}	      	
					add_artifact = sword_of_heroes
		        }
		        else_if = {
		        	limit = { 
						FROM = {
							OR = {
								culture_group = dornish
								culture_group = valyrian
								culture_group = free_cities
								culture_group = ghiscari_group		
								culture = lhazareen
								culture_group = moraqi_group
								culture_group = asshai_group
								culture_group = qarth_group
								culture_group = jogos_nhai_group
								culture_group = nghai_group
								culture_group = summer_islands
							}	
							NOT = { culture = high_valyrian }
							NOT = { culture = western_valyrian }
						}	
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = crown_of_majesty
					}   	
					add_artifact = dagger_of_glory
					add_artifact = ruby_bracelets
		        }
		        else_if = {
		        	limit = { 
						FROM = {
							OR = {
								culture_group = yi_ti_group
								culture_group = jade_islands_group
								culture_group = naath_group
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								tier = EMPEROR
								is_feudal = yes	
							}	
						}
						add_artifact = circlet_of_the_heavens
					}      	
					add_artifact = staff_of_majesty
		        }
		        else_if = {
		        	limit = { 
						FROM = { culture_group = iron_isles_culture }
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = driftwood_crown
					}	
					add_artifact = sword_of_heroes
		        }
				else_if = {
					limit = {
						FROM = {
							OR = {
								culture_group = free_folk
								culture_group = further_east
								culture_group = ibbenese_group
								culture_group = sothoryos_islands
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = heros_crown
					}	
					add_artifact = axe_of_the_ancestors
				}
			}
			good_jewels = {  
				if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = andal
								culture = high_valyrian
								culture = western_valyrian
								culture_group = sarnor_group
								culture_group = hyrkoon_group
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = crown_of_pearls
						add_artifact = ruby_scepter
					}	      	     	
					add_artifact = golden_sword
				}
				else_if = {
					limit = { 
						FROM = { culture_group = first_men }
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = crown_of_winter_mid
						add_artifact = ruby_scepter
					}	      	     	
					add_artifact = golden_sword
				}
				else_if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = valyrian
								culture_group = free_cities
								culture_group = ghiscari_group		
								culture = lhazareen									
							}	
							NOT = { culture = high_valyrian }
							NOT = { culture = western_valyrian }
						}	
					}  	
					add_artifact = bejeweled_dagger
					add_artifact = golden_bracelets
				}
				else_if = {
					limit = { 
						FROM = { culture_group = dornish }
					}  	
					add_artifact = dornish_dagger
					add_artifact = golden_bracelets
				}
				else_if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = moraqi_group	
								culture_group = asshai_group
								culture_group = qarth_group
								culture_group = jogos_nhai_group
								culture_group = nghai_group
								culture_group = summer_islands
							}
						}	
					}
					add_artifact = bejeweled_dagger
					add_artifact = necklace_of_radiance
				}
				else_if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = yi_ti_group
								culture_group = jade_islands_group
								culture_group = naath_group
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								tier = EMPEROR
								is_feudal = yes	
							}	
						}
						add_artifact = circlet_of_the_heavens
					}      	
					add_artifact = golden_staff
				}

				else_if = {
					limit = { 
						FROM = { culture_group = iron_isles_culture }
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = driftwood_crown_mid
					}	     	
					add_artifact = golden_sword
				}

				else_if = {
					limit = {
						FROM = {
							OR = {
								culture_group = free_folk
								culture_group = further_east
								culture_group = ibbenese_group
								culture_group = sothoryos_islands
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = amber_crown
					}	    	
					add_artifact = obsidian_axe
				}
			}
			cheap_jewels = { 
		        if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = andal
								culture_group = first_men
								culture = high_valyrian
								culture = western_valyrian
								culture_group = sarnor_group
								culture_group = hyrkoon_group
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = the_lily_crown
						add_artifact = noble_scepter
					}	      	     	     	
					add_artifact = engraved_sword
				}
				else_if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = dornish
								culture_group = valyrian
								culture_group = free_cities
								culture_group = ghiscari_group		
								culture = lhazareen									
							}	
							NOT = { culture = high_valyrian }
							NOT = { culture = western_valyrian }
						}	
					}  	
					add_artifact = engraved_dagger
					add_artifact = silver_bracelets
				}
				else_if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = moraqi_group	
								culture_group = asshai_group
								culture_group = qarth_group
								culture_group = jogos_nhai_group
								culture_group = nghai_group
								culture_group = summer_islands
							}
						}	
					}
					add_artifact = engraved_dagger
					add_artifact = collar_of_pearls
				}
				else_if = {
					limit = { 
						FROM = {
							OR = {
								culture_group = yi_ti_group
								culture_group = jade_islands_group
								culture_group = naath_group
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								tier = EMPEROR
								is_feudal = yes		
							}	
						}
						add_artifact = circlet_of_twilight
					}      	   	
					add_artifact = silver_staff
				}

				else_if = {
					limit = { 
						FROM = { culture_group = iron_isles_culture }
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = iron_crown
					}	     	   	
					add_artifact = engraved_sword
				}

				else_if = {
					limit = {
						FROM = {
							OR = {
								culture_group = free_folk
								culture_group = further_east
								culture_group = ibbenese_group
								culture_group = sothoryos_islands
							}
						}	
					}
					if = {
						limit = {
							FROM = {
								is_feudal_monarch_trigger = yes
								OR = {
									government = feudal_government
									independent = yes
								}	
							}	
						}
						add_artifact = engraved_crown
					}	    	     	
					add_artifact = ceremonial_axe
				}
			}
			expensive_weapons = { 
				trigger_switch = {
					on_trigger = has_character_flag
			        weapon_sword = { 
			        	random_list = {
			        		1 = { add_artifact = sword_tier_3_heartseeker }
			        		1 = { add_artifact = sword_tier_3_vengeance }
			        		1 = { add_artifact = sword_tier_3_fury }
			        	}
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }
			        weapon_scimitar = { 
			        	random_list = {
			        		1 = { add_artifact = scimitar_tier_3_golden }
			        		1 = { add_artifact = scimitar_tier_3_fortune }
			        		1 = { add_artifact = scimitar_tier_3_conquest }
			        	}
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }
			        weapon_lance = { 
			        	random_list = {
			        		1 = { add_artifact = lance_tier_3_impaler }
			        		1 = { add_artifact = lance_tier_3_trident }
			        		1 = { add_artifact = lance_tier_3_piercer }
			        	}
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }
			        weapon_axe = { 
			        	random_list = {
			        		1 = { add_artifact = axe_tier_3_cleaver }
			        		1 = { add_artifact = axe_tier_3_ravager }
			        		1 = { add_artifact = axe_tier_3_marauder }
			        	}
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }
			        weapon_mace = { 
			        	random_list = {
			        		1 = { add_artifact = mace_tier_3_foe_hammer }
			        		1 = { add_artifact = mace_tier_3_bone_breaker }
			        		1 = { add_artifact = mace_tier_3_shatterer }
			        	}
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }
			        weapon_bow = { 
			        	random_list = {
			        		1 = { add_artifact = bow_tier_3_silent_wind }
			        		1 = { add_artifact = bow_tier_3_lightning }
			        		1 = { add_artifact = bow_tier_3_eagle }
			        	}
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }					
			        armor_set = { 
			        	random_list = {
			        		1 = { add_artifact = armor_tier_3_guardian }
			        		1 = { add_artifact = armor_tier_3_champion }
			        		1 = { add_artifact = armor_tier_3_warden }
			        	}
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }
					weapon_arakh = { 
			        	add_artifact = arakh_tier_3
		        		new_artifact = { set_artifact_flag = stolen_by_smith }
			        }
			    }
			}
			good_weapons = { 
				trigger_switch = {
					on_trigger = has_character_flag
			        weapon_sword = { add_artifact = sword_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_scimitar = { add_artifact = scimitar_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_lance = { add_artifact = lance_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_axe = { add_artifact = axe_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_mace = { add_artifact = mace_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_bow = { add_artifact = bow_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        armor_set = { add_artifact = armor_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_arakh = { add_artifact = arakh_tier_2 new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_fire_sword = { add_artifact = fire_sword new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_dornish_spear = { add_artifact = dornish_spear new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_myrish_stiletto = { add_artifact = myrish_stiletto new_artifact = { set_artifact_flag = stolen_by_smith } }
			    }
			}
			cheap_weapons = { 
				trigger_switch = {
					on_trigger = has_character_flag
			        weapon_sword = { add_artifact = sword_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_scimitar = { add_artifact = scimitar_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_lance = { add_artifact = lance_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_axe = { add_artifact = axe_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_mace = { add_artifact = mace_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        weapon_bow = { add_artifact = bow_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
			        armor_set = { add_artifact = armor_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_arakh = { add_artifact = arakh_tier_1 new_artifact = { set_artifact_flag = stolen_by_smith } }
			    }
			}
		}
		any_artifact = {
			limit = { has_artifact_flag = crown_jewel }
			set_artifact_flag = stolen_by_smith			
		}
		#Give to landed rivals first, then nearby rulers who dislike the employer, else keep for self and run away.
		if = {
			limit = { 
				event_target:smith_employer = { 
					any_rival = {
						is_landed = yes
						is_within_diplo_range = ROOT
					}
				}
			}
			event_target:smith_employer = { 
				random_rival = {
					limit = { 
						is_landed = yes
						is_within_diplo_range = ROOT
					}
					save_event_target_as = smith_steal_target
				}
			}
		}
		else_if = {
			limit = { 
				event_target:smith_employer = { 
					any_neighbor_independent_ruler = {
						is_landed = yes
						NOT = {
							opinion = {
								who = PREV
								value = -30
							}
						}
					}
				}
			}
			event_target:smith_employer = { 
				any_neighbor_independent_ruler = {
					limit = {
						is_landed = yes
						NOT = {
							opinion = {
								who = PREV
								value = -30
							}
						}
					}
					save_event_target_as = smith_steal_target
				}
			}
		}
		else_if = {
			limit = { 
				event_target:smith_employer = { 
					any_neighbor_independent_ruler = {
						is_landed = yes
						NOT = {
							opinion = {
								who = PREV
								value = 0
							}
						}
					}
				}
			}
			event_target:smith_employer = { 
				any_neighbor_independent_ruler = {
					limit = {
						is_landed = yes
						NOT = {
							opinion = {
								who = PREV
								value = 0
							}
						}
					}
					save_event_target_as = smith_steal_target
				}
			}
		}
		else = { save_event_target_as = smith_steal_target }
		any_artifact = {
			limit = { has_artifact_flag = stolen_by_smith }
			set_original_owner = event_target:smith_employer
			transfer_artifact = {
				to = event_target:smith_steal_target
				from = ROOT
			}
		}
		if = {
			limit = { 
				event_target:smith_steal_target = { is_landed = yes }
				is_landed = no
			}
			move_character = event_target:smith_steal_target
			opinion = {
				who = event_target:smith_steal_target
				modifier = opinion_grateful
				years = 10
			}
			reverse_opinion = {
				who = event_target:smith_steal_target
				modifier = opinion_grateful
				years = 10
			}
		}
		else = { banish = yes }
		event_target:smith_employer = { character_event = { id = MNM.9132 } }
		#clear_event_target = smith_employer
		clr_character_flag = amazing_weapons
    	clr_character_flag = expensive_weapons
		clr_character_flag = good_weapons
		clr_character_flag = cheap_weapons
		clr_character_flag = amazing_jewels
		clr_character_flag = expensive_jewels
		clr_character_flag = good_jewels
		clr_character_flag = cheap_jewels
	}
}

character_event = {
	id = MNM.9132
	desc = EVT_DESC_MNM_9132
    picture = GFX_evt_merchant_caravan
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    }

    option = {
    	name = EVT_OPTA_MNM_9132
    	event_target:smith_steal_target = {
    		show_scope_change = no
    		any_artifact = {
    			limit = { has_artifact_flag = stolen_by_smith }
    			clr_artifact_flag = stolen_by_smith
    		}
			reverse_opinion = {
				who = ROOT
				modifier = opinion_thief
				years = 10
			}
    	}
    	FROM = {
    		show_scope_change = no
			reverse_opinion = {
				who = ROOT
				modifier = opinion_thief
				years = 10
			}
			hidden_effect = { remove_nickname = yes }
		}
    }
	
	option = {
		name = EVT_OPTB_MNM_9132
		tooltip_info = intrigue
		custom_tooltip = { text = EVT_OPTB_MNM_9132_TT}
		trigger = {
			intrigue = 15
		}
		hidden_effect = {
			event_target:smith_steal_target = {
				any_artifact = {
					show_scope_change = no
					limit = { has_artifact_flag = stolen_by_smith }
					transfer_artifact = {
						from = event_target:smith_steal_target
						to = ROOT
					}
					clr_artifact_flag = stolen_by_smith
				}
			}
		}
		
		FROM = {
			show_scope_change = no
			death = {
				death_reason = death_execution
				killer = ROOT
			}
		}
		
	}
}

#Tombola for events mid-smithing
character_event = {
	id = MNM.9133
	hide_window = yes
    is_triggered_only = yes
    
    trigger = {
    	OR = {
    		has_dlc = "Mystics"
    		has_dlc = "Jade Dragon"
    	}
    	event_target:smith = { is_alive = yes }
    }

    fail_trigger_effect = { 
    	if = {
    		limit = {
    			OR = {
    				has_character_flag = weaponsmith
					has_character_flag = armorsmith
    			}
    		}
    		character_event = { id = MNM.9126 }
    	}
    	else = {
    		character_event = { id = MNM.9112 }
    	}
    	clear_delayed_event = { id = MNM.9111 }
    	clear_delayed_event = { id = MNM.9125 }
    }
	
	immediate = {
		event_target:smith = { 
			random_list = { #Set flag then ping event
				20 = { #Smith teachs someone stewardship
					trigger = {
						ROOT = { 
							OR = {
								any_courtier = {
									age = 13
									stewardship < 14
									NOT = { character = PREVPREV }
									NOT_mythical_creature_trigger = yes
									NOT = { is_inaccessible_trigger = yes }
									is_incapable = no
								}
								any_friend = {
									liege = { character = ROOT }
									age = 13
									stewardship < 14
									NOT = { character = PREVPREV }
									NOT_mythical_creature_trigger = yes
									NOT = { is_inaccessible_trigger = yes }
									is_incapable = no
								}
								any_child = {
									liege = { character = ROOT }
									age = 13
									stewardship < 14
									NOT = { character = PREVPREV }
									NOT_mythical_creature_trigger = yes
									NOT = { is_inaccessible_trigger = yes }
									is_incapable = no
								}
							}
						}
					}
					modifier = {
						factor = 1.5
						ROOT = {
							NOR = {
								has_character_flag = weaponsmith
								has_character_flag = armorsmith
							}
						}
					}
					set_character_flag = smith_event_MNM_9135
					character_event = { id = MNM.9134 }
				}
				20 = { #Smith makes child/ward stronger
					trigger = {
						ROOT = { 
							OR = {
								any_child = {
									liege = { character = ROOT }
									age = 10
									age <= 16
									is_strong_trigger = no
									NOT = { trait = weak }
									NOT_mythical_creature_trigger = yes
									NOT = { is_inaccessible_trigger = yes }
									is_incapable = no
								}
								any_pupil = {
									age = 10
									age <= 16
									is_strong_trigger = no
									NOT = { trait = weak }
									NOT_mythical_creature_trigger = yes
									NOT = { is_inaccessible_trigger = yes }
									is_incapable = no
								}
							}
						}
					}
					modifier = {
						factor = 1.5
						ROOT = {
							OR = {
								has_character_flag = weaponsmith
								has_character_flag = armorsmith
							}
						}
					}
					set_character_flag = smith_event_MNM_9136
					character_event = { id = MNM.9134 }
				}
				15 = { #Smith sleeps with courtier
					trigger = {
						ROOT = {
							any_courtier = {
								age = 16
								OR = {
									AND = {
										event_target:smith = { is_female = yes }
										prefers_men_trigger = no
									}
									AND = {
										event_target:smith = { is_female = no }
										prefers_men_trigger = yes
									}
									AND = {
										culture_group = dornish
										culture_group = event_target:smith
										event_target:smith = { trait = lustful }
									}
								}
								NOT_mythical_creature_trigger = yes
								NOT = { is_inaccessible_trigger = yes }
								is_incapable = no
								is_ill = no
								NOT = { trait = infirm }
								OR = {
									has_lover = no
									trait = lustful
								}	
								is_pregnant = no
								NOR = {
									trait = chaste
									trait = celibate
									trait = eunuch
								}
								ai = yes
								personal_opinion = { who = event_target:smith value = -10 }
							}
							NOT = {
								any_owned_bloodline = {
									has_bloodline_flag = bloodline_artisan_craftsmen #A Legendary Bloodline
								}
							}
						}
						NOR = {
							trait = chaste
							trait = celibate
							trait = eunuch
						}
					}
					modifier = {
						factor = 2
						trait = lustful
					}
					modifier = {
						factor = 2
						trait = hedonist
					}
					modifier = {
						factor = 2
						OR = {
							trait = seducer
							trait = seductress
						}
					}
					set_character_flag = smith_event_MNM_9137
					character_event = { id = MNM.9134 }
				}
				15 = { #Smith has an accident
					modifier = {
						factor = 5
						is_dumb_trigger = yes
					}
					modifier = { factor = 0 }
					set_character_flag = smith_event_MNM_9138
					character_event = { id = MNM.9134 }
				}
				300 = { }
			}
		}
	}
}

#Ping the smith
character_event = {
	id = MNM.9134
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		trigger_switch = {
			on_trigger = has_character_flag
			smith_event_MNM_9135 = { FROM = { character_event = { id = MNM.9135 } } }
			smith_event_MNM_9136 = { FROM = { character_event = { id = MNM.9136 } } }
			smith_event_MNM_9137 = { FROM = { character_event = { id = MNM.9137 } } }
			smith_event_MNM_9138 = { FROM = { character_event = { id = MNM.9138 } } }
		}
		clr_character_flag = smith_event_MNM_9135
		clr_character_flag = smith_event_MNM_9136
		clr_character_flag = smith_event_MNM_9137
		clr_character_flag = smith_event_MNM_9138
	}
}

#Smith teaches someone stewardship
character_event = {
	id = MNM.9135
	desc = EVT_DESC_MNM_9135
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = { 
				age = 13
				stewardship < 14
				NOT = { character = FROM }
				NOT_mythical_creature_trigger = yes
				NOT = { is_inaccessible_trigger = yes }
				is_incapable = no
			}
			save_event_target_as = smith_event_target
		}
		random_friend = {
			limit = { 
				liege = { character = ROOT }
				age = 13
				stewardship < 14
				NOT = { character = FROM }
				NOT_mythical_creature_trigger = yes
				NOT = { is_inaccessible_trigger = yes }
				is_incapable = no
			}
			save_event_target_as = smith_event_target
		}
		random_child = {
			limit = { 
				liege = { character = ROOT }
				age = 13
				stewardship < 14
				NOT_mythical_creature_trigger = yes
				NOT = { is_inaccessible_trigger = yes }
				is_incapable = no
			}
			save_event_target_as = smith_event_target
		}
	}

	option = {
		name = EVT_OPTA_MNM_9135
		prestige = -50
		event_target:smith_event_target = {
			change_stewardship = 1
			opinion = {
				who = ROOT
				modifier = opinion_happy
				months = 12
			}
		}
		FROM = {
			show_scope_change = no
			reverse_opinion = {
				who = event_target:smith_event_target
				modifier = opinion_grateful
				months = 12
			}
			reverse_opinion = {
				who = ROOT
				modifier = opinion_grateful
				months = 12
			}
		}
	}

	option = {
		name = EVT_OPTB_MNM_9135
		event_target:smith_event_target = { 
			show_scope_change = no
			opinion = {
				who = ROOT
				modifier = opinion_disappointed
				months = 12
			}
		}
		reverse_opinion = {
			who = FROM
			modifier = opinion_upset
			months = 12
		}
		if = {
			limit = { 
				OR = {
					AND = {# has weapon/armor smith not max tier
						OR = {
							has_character_flag = weaponsmith
							has_character_flag = armorsmith
						}
						NOT = { has_character_flag = expensive_weapons }
					}
					AND = {# or has goldsmith not max tier
						NOR = {
							has_character_flag = weaponsmith
							has_character_flag = armorsmith
						}
						NOT = { has_character_flag = expensive_jewels }
					}
				}
			}
			prestige = 50
			random = {
				chance = 10
				modifier = {
					factor = 0.5
					OR = {
						has_character_flag = good_weapons
						has_character_flag = good_jewels
					}
				}
				custom_tooltip = {
					text = smith_improves_quality_tt
					if = {
						limit = {
							OR = {
								has_character_flag = weaponsmith
								has_character_flag = armorsmith
							}
						}
						trigger_switch = {
							on_trigger = has_character_flag
							cheap_weapons = { 
								clr_character_flag = cheap_weapons set_character_flag = good_weapons 
								FROM = { clr_character_flag = cheap_weapons set_character_flag = good_weapons }
							}
							good_weapons = {
								clr_character_flag = good_weapons set_character_flag = expensive_weapons
								FROM = { clr_character_flag = good_weapons set_character_flag = expensive_weapons }
							}
						}
					}
					else = {
						trigger_switch = {
							on_trigger = has_character_flag
							cheap_jewels = { 
								clr_character_flag = cheap_jewels set_character_flag = good_jewels
								FROM = { clr_character_flag = cheap_jewels set_character_flag = good_jewels }
							}
							good_jewels = {
								clr_character_flag = good_jewels set_character_flag = expensive_jewels
								FROM = { clr_character_flag = good_jewels set_character_flag = expensive_jewels }
							}
						}
					}
				}
			}
		}
		else = {
			prestige = 75
		}
	}
}

#Smith makes ward stronger
character_event = {
	id = MNM.9136
	desc = EVT_DESC_MNM_9136
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		random_child = {
			limit = { 
				liege = { character = ROOT }
				age = 10
				age <= 16
				is_strong_trigger = no
				NOT = { trait = weak }
				NOT_mythical_creature_trigger = yes
				NOT = { is_inaccessible_trigger = yes }
				is_incapable = no
			}
			save_event_target_as = smith_event_target
		}
		random_pupil = {
			limit = {
				age = 10
				age <= 16
				is_strong_trigger = no
				NOT = { trait = weak }
				NOT_mythical_creature_trigger = yes
				NOT = { is_inaccessible_trigger = yes }
				is_incapable = no
			}
			save_event_target_as = smith_event_target
		}
	}

	option = {
		name = EVT_OPTA_MNM_9136
		prestige = -50
		event_target:smith_event_target = { 
			show_scope_change = no
			if = {
				limit = { trait = feeble }
				remove_trait = feeble
			}
			else = { add_trait = robust }
			opinion = {
				who = ROOT
				modifier = opinion_happy
				months = 12
			}
		}
		FROM = {
			show_scope_change = no
			reverse_opinion = {
				who = event_target:smith_event_target
				modifier = opinion_grateful
				months = 12
			}
			reverse_opinion = {
				who = ROOT
				modifier = opinion_grateful
				months = 12
			}
		}
	}

	option = {
		name = EVT_OPTB_MNM_9136
		event_target:smith_event_target = {
			show_scope_change = no
			opinion = {
				who = ROOT
				modifier = opinion_disappointed
				months = 12
			}
		}
		reverse_opinion = {
			who = FROM
			modifier = opinion_upset
			months = 12
		}
		if = {
			limit = { 
				OR = {
					AND = { #has weapon/armor smith not max tier
						OR = {
							has_character_flag = weaponsmith
							has_character_flag = armorsmith
						}
						NOT = { has_character_flag = expensive_weapons }
					}
					AND = { #or has goldsmith not max tier
						NOR = {
							has_character_flag = weaponsmith
							has_character_flag = armorsmith
						}
						NOT = { has_character_flag = expensive_jewels }
					}
				}
			}
			prestige = 50
			random = {
				chance = 10
				modifier = {
					factor = 0.5
					OR = {
						has_character_flag = good_weapons
						has_character_flag = good_jewels
					}
				}
				custom_tooltip = {
					text = smith_improves_quality_tt
					if = {
						limit = {
							OR = {
								has_character_flag = weaponsmith
								has_character_flag = armorsmith
							}
						}
						trigger_switch = {
							on_trigger = has_character_flag
							cheap_weapons = { 
								clr_character_flag = cheap_weapons set_character_flag = good_weapons 
								FROM = { clr_character_flag = cheap_weapons set_character_flag = good_weapons }
							}
							good_weapons = {
								clr_character_flag = good_weapons set_character_flag = expensive_weapons
								FROM = { clr_character_flag = good_weapons set_character_flag = expensive_weapons }
							}
						}
					}
					else = {
						trigger_switch = {
							on_trigger = has_character_flag
							cheap_jewels = { 
								clr_character_flag = cheap_jewels set_character_flag = good_jewels
								FROM = { clr_character_flag = cheap_jewels set_character_flag = good_jewels }
							}
							good_jewels = {
								clr_character_flag = good_jewels set_character_flag = expensive_jewels
								FROM = { clr_character_flag = good_jewels set_character_flag = expensive_jewels }
							}
						}
					}
				}
			}
		}
		else = {
			prestige = 75
		}
	}
}

#Smith sleeps with courtier
character_event = {
	id = MNM.9137
	desc = EVT_DESC_MNM_9137
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				age = 16
				OR = {
					AND = {
						event_target:smith = { is_female = yes }
						prefers_men_trigger = no
					}
					AND = {
						event_target:smith = { is_female = no }
						prefers_men_trigger = yes
					}
					AND = {
						culture_group = dornish
						culture_group = event_target:smith
						event_target:smith = { trait = lustful }
					}
				}
				NOT_mythical_creature_trigger = yes
				NOT = { is_inaccessible_trigger = yes }
				is_incapable = no
				is_ill = no
				NOT = { trait = infirm }
				OR = {
					has_lover = no
					trait = lustful
				}	
				is_pregnant = no
				NOR = {
					trait = chaste
					trait = celibate
					trait = eunuch
				}
				ai = yes
				personal_opinion = { who = event_target:smith value = -10 }
			}
			save_event_target_as = smith_event_target
			save_event_target_as = sex_partner
		}
		FROM = { unprotected_sex_effect_event_target = yes }
	}

	option = { #Not my business
		name = EVT_OPTA_MNM_9137
		prestige = -75
	}

	option = { #Helll no
		name = EVT_OPTB_MNM_9137
		event_target:smith_event_target = { 
			show_scope_change = no
			opinion = {
				who = ROOT
				modifier = opinion_upset
				months = 12
			}
		}
		opinion = {
			who = FROM
			modifier = opinion_angry
			months = 12
		}
		reverse_opinion = {
			who = FROM
			modifier = opinion_worried
			months = 12
		}
		prestige = 25
	}

	option = { #Get out of my court
		name = EVT_OPTC_MNM_9137
		hidden_effect = {
    		clear_delayed_event = { id = MNM.9111 }
    		clear_delayed_event = { id = MNM.9125 }
	    	clr_character_flag = expensive_weapons
			clr_character_flag = good_weapons
			clr_character_flag = cheap_weapons
			clr_character_flag = weaponsmith
	        clr_character_flag = armorsmith
			clr_character_flag = smith_success
			clr_character_flag = smith_fail
			clr_character_flag = smith_steal
	    	clr_character_flag = expensive_jewels
			clr_character_flag = good_jewels
			clr_character_flag = cheap_jewels
			clr_character_flag = goldsmith_success
			clr_character_flag = goldsmith_fail
			clr_character_flag = goldsmith_steal
			clr_character_flag = special_weapon
			FROM = {
		    	clr_character_flag = expensive_weapons
				clr_character_flag = good_weapons
				clr_character_flag = cheap_weapons
		    	clr_character_flag = expensive_jewels
				clr_character_flag = good_jewels
				clr_character_flag = cheap_jewels
				clr_character_flag = special_weapon
				remove_nickname = yes
			}
    	}
    	prestige = 100
    	FROM = { 
    		show_scope_change = no
    		banish = yes
			opinion = {
				who = ROOT
				modifier = opinion_angry
				months = 12
			}
    	}
		reverse_opinion = {
			who = event_target:smith_event_target
			modifier = opinion_angry
			months = 12
		}
    	random = {
    		chance = 30
    		modifier = {
    			factor = 0
    			event_target:smith_event_target = { any_spouse = { ai = no } }
    		}
    		custom_tooltip = { 
    			text = smith_lover_elopes_tt
    			event_target:smith = {
    				liege = {
    					event_target:smith_event_target = {
							if = { 
								limit = { is_landed = no }
								move_character = PREV
							}
    						remove_spouse = spouse
    						add_spouse = event_target:smith
    					}
    				}
    			}
    		}
    	}
	}

	option = { #Off with his head
		name = EVT_OPTD_MNM_9137
		hidden_effect = {
    		clear_delayed_event = { id = MNM.9111 }
    		clear_delayed_event = { id = MNM.9125 }
	    	clr_character_flag = expensive_weapons
			clr_character_flag = good_weapons
			clr_character_flag = cheap_weapons
			clr_character_flag = weaponsmith
	        clr_character_flag = armorsmith
			clr_character_flag = smith_success
			clr_character_flag = smith_fail
			clr_character_flag = smith_steal
	    	clr_character_flag = expensive_jewels
			clr_character_flag = good_jewels
			clr_character_flag = cheap_jewels
			clr_character_flag = goldsmith_success
			clr_character_flag = goldsmith_fail
			clr_character_flag = goldsmith_steal
			clr_character_flag = special_weapon
			FROM = {
				remove_nickname = yes
			}
    	}
    	prestige = 100
    	FROM = { death = { death_reason = death_execution killer = ROOT } }
		reverse_opinion = {
			who = event_target:smith_event_target
			modifier = opinion_angry
			months = 12
		}
	}
}

#Smith injured in accident
character_event = {
	id = MNM.9138
	desc = EVT_DESC_MNM_9138
    picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy

    is_triggered_only = yes

    option = {
    	name = EVT_OPTA_MNM_9318
    	scaled_wealth = { value = -0.2 min = -30 max = -100 }
    	FROM = {
    		show_scope_change = no
    		random_list = {
    			1 = { add_maimed_trait_effect = yes }
    			2 = { 
    				trigger = { NOT = { trait = wounded } }
    				add_trait_silently_wounded_effect = yes
    			}
    		}
			add_character_modifier = {
				name = good_care
				duration = 365
			}
    	}
    }
    option = {
    	name = EVT_OPTB_MNM_9318
		hidden_effect = {
    		clear_delayed_event = { id = MNM.9111 }
    		clear_delayed_event = { id = MNM.9125 }
    		clr_character_flag = amazing_weapons
	    	clr_character_flag = expensive_weapons
			clr_character_flag = good_weapons
			clr_character_flag = cheap_weapons
			clr_character_flag = weaponsmith
	        clr_character_flag = armorsmith
			clr_character_flag = smith_success
			clr_character_flag = smith_fail
			clr_character_flag = smith_steal
			clr_character_flag = amazing_jewels
	    	clr_character_flag = expensive_jewels
			clr_character_flag = good_jewels
			clr_character_flag = cheap_jewels
			clr_character_flag = goldsmith_success
			clr_character_flag = goldsmith_fail
			clr_character_flag = goldsmith_steal
			clr_character_flag = special_weapon
			FROM = {
				clr_character_flag = amazing_weapons
		    	clr_character_flag = expensive_weapons
				clr_character_flag = good_weapons
				clr_character_flag = cheap_weapons
				clr_character_flag = amazing_jewels
		    	clr_character_flag = expensive_jewels
				clr_character_flag = good_jewels
				clr_character_flag = cheap_jewels
				clr_character_flag = special_weapon
				remove_nickname = yes
			}
    	}
    	FROM = {
    		show_scope_change = no
    		random_list = {
    			1 = { add_maimed_trait_effect = yes }
    			2 = { 
    				trigger = { NOT = { trait = wounded } }
    				add_trait_silently_wounded_effect = yes
    			}
    		}
    		banish = yes
    	}
    }
}

character_event = {
	id = MNM.9899
	hide_window = yes
	
	is_triggered_only = yes
	has_dlc = "Mystics"
	
	trigger = {
		FROM = { 
			always = yes
			is_capital = yes
			location = { is_capital = yes }
		}
	}
	
	immediate = {
		set_character_flag = looted_by_raiding_holding
		repeat_event = { id = MNM.9900 }
	}
}

character_event = {
	id = MNM.9900
    hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Holy Fury"		
		}
		FROM = {
			is_capital = yes #capital holding
			location = { is_capital = yes } #of capital province
		}
	}
	
	immediate = {
		save_event_target_as = looter
		FROM = {
			location = {
				save_event_target_as = target_location
			}
		}
		#log = "Chance to lose an artifact on_action fired for the leader: [This.GetBestName] on the holding: [From.GetName]"
		FROM = {
			save_event_target_as = target_title
			holder_scope = {
				if = {
					limit = {
						OR = {
							character = ROOT
							is_liege_or_above = ROOT
						}
					}
					break = yes
				}
				#log = "Chance to lose an artifact on_action fired for the capital of [This.GetBestName]"
				if = {
					limit = {
						capital_holding = {
							title = PREVPREV # Sieged province is the capital of the owner.
						}						
					}
					#log = "Chance to lose an artifact on_action fired for the capital of [This.GetBestName]"
					if = {
						limit = {
							any_artifact = {						
								NOT = { has_artifact_flag = no_usurp_transfer }
								NOT = { has_artifact_flag = valyrian_steel }
								NOT = { has_artifact_flag = valyrian_armour }
								NOT = { has_artifact_flag = lost_artifact }
							}
							NOT_mythical_creature_trigger = yes
							has_pilgrimage_trait_trigger = no
							at_location = event_target:target_location
						}
						character_event = { id = MNM.9901 } # Chance to lose an artifact.
					}
					any_courtier = {
						limit = {
							any_artifact = {						
								NOT = { has_artifact_flag = no_usurp_transfer }
								NOT = { has_artifact_flag = valyrian_steel }
								NOT = { has_artifact_flag = valyrian_armour }
								NOT = { has_artifact_flag = lost_artifact }
							}
							at_location = event_target:target_location
							prisoner = no
							NOT_mythical_creature_trigger = yes
							has_pilgrimage_trait_trigger = no
						}
						character_event = { id = MNM.9901 } # Chance to lose an artifact.
					}
				}
			}
		}
	}
}

character_event = {
	id = MNM.9901
	
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = original_item_owner
		random_list = {
			100 = {
				modifier = {
					factor = 0
					NOT = {
						any_artifact = {
							quality == 1
							NOT = {
								artifact_type_owned_by = FROM
							}
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				FROM = {
					character_event = { id = MNM.9902 }
				}
			}
			70 = {
				modifier = {
					factor = 0
					NOT = {
						any_artifact = {
							quality == 2
							NOT = {
								artifact_type_owned_by = FROM
							}
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				FROM = {
					character_event = { id = MNM.9904 }
				}
			}
			45 = {
				modifier = {
					factor = 0
					NOT = {
						any_artifact = {
							quality == 3
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				FROM = {
					character_event = { id = MNM.9906 }
				}
			}
			25 = {
				modifier = {
					factor = 0
					NOT = {
						any_artifact = {
							quality == 4
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				FROM = {
					character_event = { id = MNM.9908 }
				}
			}
			10 = {
				modifier = {
					factor = 0
					NOT = {
						any_artifact = {
							quality == 5
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				FROM = {
					character_event = { id = MNM.9910 }
				}
			}
			
			6000 = { #chance of no artifact stealing
				modifier = {
					factor = 0.2
					FROM = { has_character_flag = looted_by_raiding_holding }
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 3
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 4
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 5
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 6
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 7
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 8
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 9
				}
				modifier = {
					factor = 0.8
					num_of_artifacts = 10
				}
				modifier = {
					factor = 0.5
					NOT = {
						any_artifact = {
							quality == 1
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				modifier = {
					factor = 0.65
					NOT = {
						any_artifact = {
							quality == 2
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				modifier = {
					factor = 0.775
					NOT = {
						any_artifact = {
							quality == 3
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				modifier = {
					factor = 0.875
					NOT = {
						any_artifact = {
							quality == 4
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				modifier = {
					factor = 0.95
					NOT = {
						any_artifact = {
							quality == 5
							NOT = { has_artifact_flag = no_usurp_transfer }
							NOT = { has_artifact_flag = valyrian_steel }
							NOT = { has_artifact_flag = valyrian_armour }
							NOT = { has_artifact_flag = lost_artifact }
						}
					}
				}
				modifier = {
					factor = 1.5 # if the item holder has a wonder with a vault of some kind
					any_realm_wonder_upgrade = {
						has_wonder_upgrade_flag = artifact_protection
						#wonder = { wonder_owner = ROOT }
					}
				}
				modifier = {
					factor = 0.5 # if the sieger was a warrior lodge member
					FROM = {
						is_member_of_any_warrior_lodge_trigger = yes
						society_rank > 1 #Must be rank 2 or higher
					}
				}
				modifier = {
					factor = 0.5 # if the sieger has a reaver bloodline
					FROM = {
						any_owned_bloodline = {
							has_bloodline_flag = bloodline_reaver
						}
					}
				}
			}
		}
		FROM = {
			clr_character_flag = looted_by_raiding_holding
		}
	}
}

character_event = {
	id = MNM.9902
    desc = {
		text = EVTDESC_MNM_9902_A
		trigger = {
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9902_B
		trigger = {
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			random_artifact = {
				limit = {
					quality == 1
					NOT = {
						artifact_type_owned_by = ROOT
					}
					NOT = { has_artifact_flag = no_usurp_transfer }
					NOT = { has_artifact_flag = valyrian_steel }
					NOT = { has_artifact_flag = valyrian_armour }
					NOT = { has_artifact_flag = lost_artifact }
				}
				set_artifact_flag = looted_artifact_tooltip_1
				set_artifact_flag = looted_artifact_tooltip_2
				transfer_artifact = {
					from = PREV
					to = ROOT
				}
			}
			character_event = { id = MNM.9903 }
		}
	}
	
	option = {
		name = {
			text = EVTOPTA_MNM_9902
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTB_MNM_9902
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		tooltip = {		
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				show_scope_change = no
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
		}
	}
}

character_event = {
	id = MNM.9903
    desc = EVTDESC_MNM_9903
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_MNM_9903
		tooltip = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					show_scope_change = no
					transfer_artifact = {
						from = ROOT
						to = THIS
					}
				}
			}
		}
		hidden_effect = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					clr_artifact_flag = looted_artifact_tooltip_2
				}
			}
		}
	}
}

character_event = {
	id = MNM.9904
    desc = {
		text = EVTDESC_MNM_9902_A
		trigger = {
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9902_B
		trigger = {
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {		
			random_artifact = {
				limit = {
					quality == 2
					NOT = {
						artifact_type_owned_by = ROOT
					}
					NOT = { has_artifact_flag = no_usurp_transfer }
					NOT = { has_artifact_flag = valyrian_steel }
					NOT = { has_artifact_flag = valyrian_armour }
					NOT = { has_artifact_flag = lost_artifact }
				}
				set_artifact_flag = looted_artifact_tooltip_1
				set_artifact_flag = looted_artifact_tooltip_2
				transfer_artifact = {
					from = PREV
					to = ROOT
				}
			}
			opinion = {
				who = ROOT
				modifier = opinion_stole_sword
				years = 100
			}
			character_event = { id = MNM.9903 }
		}
	}
	
	option = {
		name = {
			text = EVTOPTA_MNM_9902
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTB_MNM_9902
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		tooltip = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				show_scope_change = no
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
		}
	}
}

character_event = {
	id = MNM.9905
    desc = EVTDESC_MNM_9903
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_MNM_9903
		tooltip = {
			FROM = {
				show_scope_change = no
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					show_scope_change = no
					transfer_artifact = {
						from = ROOT
						to = PREV
					}
				}
			}
		}
		hidden_effect = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					clr_artifact_flag = looted_artifact_tooltip_2
				}
			}
		}
	}
}

character_event = {
	id = MNM.9906
    desc = {
		text = EVTDESC_MNM_9906_A
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_B
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_C
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_D
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			random_artifact = {
				limit = {
					quality == 3
					NOT = {
						artifact_type_owned_by = ROOT
					}
					NOT = { has_artifact_flag = no_usurp_transfer }
					NOT = { has_artifact_flag = valyrian_steel }
					NOT = { has_artifact_flag = valyrian_armour }
					NOT = { has_artifact_flag = lost_artifact }
				}
				set_artifact_flag = looted_artifact_tooltip_1
				set_artifact_flag = looted_artifact_tooltip_2
				set_artifact_flag = stolen_from_@PREV
				transfer_artifact = {
					from = PREV
					to = ROOT
				}
			}
			opinion = {
				who = ROOT
				modifier = opinion_stole_sword
				years = 100
			}
			if = {
				limit = {
					ROOT = {
						any_artifact = {
							has_artifact_flag = looted_artifact_tooltip_1
						}
					}
				}
				character_event = { id = MNM.9907 }
			}
			if = {
				limit = {
					NOT = {
						ROOT = {
							any_artifact = {
								has_artifact_flag = looted_artifact_tooltip_1
							}
						}
					}
				}
				random_artifact = {
					limit = {
						quality == 3
						NOT = { has_artifact_flag = no_usurp_transfer }
						NOT = { has_artifact_flag = valyrian_steel }
						NOT = { has_artifact_flag = valyrian_armour }
						NOT = { has_artifact_flag = lost_artifact }
					}
					set_artifact_flag = looted_artifact_tooltip_1
					set_artifact_flag = looted_artifact_tooltip_2
				}
				ROOT = {
					set_character_flag = looted_artifact_destroy_duplicate
				}
			}
		}
	}
	
	option = {
		name = {
			text = EVTOPTA_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTC_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		tooltip = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				show_scope_change = no
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
		}
	}
	
	option = {
		name = {
			text = EVTOPTB_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTD_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
		}
		tooltip = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_1
					}
					show_scope_change = no
					destroy_artifact = yes
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
			FROM = {
				character_event = { id = MNM.9907 }
			}
		}
	}
}

character_event = {
	id = MNM.9907
    desc = {
		text = EVTDESC_MNM_9907_A
		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
	}
	desc = {
		text = EVTDESC_MNM_9907_B
		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_MNM_9907
		trigger = {
			FROM  = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
		
		tooltip = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					show_scope_change = no
					transfer_artifact = {
						from = ROOT
						to = PREV
					}
				}
			}
		}
		hidden_effect = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					clr_artifact_flag = looted_artifact_tooltip_2
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_MNM_9907
		trigger = {
			FROM =  { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		random_artifact = {
			limit = {
				has_artifact_flag = looted_artifact_tooltip_2
			}
			show_scope_change = no
			clr_artifact_flag = looted_artifact_tooltip_2
			destroy_artifact = yes
		}
		FROM = {
			clr_character_flag = looted_artifact_destroy_duplicate
		}
	}
}

character_event = {
	id = MNM.9908
    desc = {
		text = EVTDESC_MNM_9906_A
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_B
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_C
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_D
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			random_artifact = {
				limit = {
					quality == 4
					NOT = {
						artifact_type_owned_by = ROOT
					}
					NOT = { has_artifact_flag = no_usurp_transfer }
					NOT = { has_artifact_flag = valyrian_steel }
					NOT = { has_artifact_flag = valyrian_armour }
					NOT = { has_artifact_flag = lost_artifact }
				}
				set_artifact_flag = looted_artifact_tooltip_1
				set_artifact_flag = looted_artifact_tooltip_2
				set_artifact_flag = stolen_from_@PREV
				transfer_artifact = {
					from = PREV
					to = ROOT
				}
			}
			opinion = {
				who = ROOT
				modifier = opinion_stole_sword
				years = 100
			}
			if = {
				limit = {
					ROOT = {
						any_artifact = {
							has_artifact_flag = looted_artifact_tooltip_1
						}
					}
				}
				character_event = { id = MNM.9909 }
			}
			if = {
				limit = {
					NOT = {
						ROOT = {
							any_artifact = {
								has_artifact_flag = looted_artifact_tooltip_1
							}
						}
					}
				}
				random_artifact = {
					limit = {
						quality == 4
						NOT = { has_artifact_flag = no_usurp_transfer }
						NOT = { has_artifact_flag = valyrian_steel }
						NOT = { has_artifact_flag = valyrian_armour }
						NOT = { has_artifact_flag = lost_artifact }
					}
					set_artifact_flag = looted_artifact_tooltip_1
					set_artifact_flag = looted_artifact_tooltip_2
				}
				ROOT = {
					set_character_flag = looted_artifact_destroy_duplicate
				}
			}
		}
	}
	
	option = {
		name = {
			text = EVTOPTA_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTC_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		tooltip = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				show_scope_change = no
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
		}
	}
	
	option = {
		name = {
			text = EVTOPTB_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTD_MNM_9906
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
		}
		tooltip = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_1
					}
					show_scope_change = no
					destroy_artifact = yes
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
			FROM = {
				character_event = { id = MNM.9909 }
			}
		}
	}
}

character_event = {
	id = MNM.9909
    desc = {
		text = EVTDESC_MNM_9907_A
		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
	}
	desc = {
		text = EVTDESC_MNM_9907_B
		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_MNM_9907
		trigger = {
			FROM  = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
		
		tooltip = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					show_scope_change = no
					transfer_artifact = {
						from = ROOT
						to = THIS
					}
				}
			}
		}
		hidden_effect = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					clr_artifact_flag = looted_artifact_tooltip_2
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_MNM_9907
		trigger = {
			FROM =  { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		random_artifact = {
			limit = {
				has_artifact_flag = looted_artifact_tooltip_2
			}
			show_scope_change = no
			clr_artifact_flag = looted_artifact_tooltip_2
			destroy_artifact = yes
		}
		FROM = {
			clr_character_flag = looted_artifact_destroy_duplicate
		}
	}
}

character_event = {
	id = MNM.9910
    desc = {
		text = EVTDESC_MNM_9910_A
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9910_B
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9910_C
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
	desc = {
		text = EVTDESC_MNM_9910_D
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			random_artifact = {
				limit = {
					quality == 5
					NOT = {
						artifact_type_owned_by = ROOT
					}
					NOT = { has_artifact_flag = no_usurp_transfer }
					NOT = { has_artifact_flag = valyrian_steel }
					NOT = { has_artifact_flag = valyrian_armour }
					NOT = { has_artifact_flag = lost_artifact }
				}
				set_artifact_flag = looted_artifact_tooltip_1
				set_artifact_flag = looted_artifact_tooltip_2
				set_artifact_flag = stolen_from_@PREV
				transfer_artifact = {
					from = PREV
					to = ROOT
				}
			}
			opinion = {
				who = ROOT
				modifier = opinion_stole_sword
				years = 100
			}
			if = {
				limit = {
					ROOT = {
						any_artifact = {
							has_artifact_flag = looted_artifact_tooltip_1
						}
					}
				}
				character_event = { id = MNM.9911 }
			}
			if = {
				limit = {
					NOT = {
						ROOT = {
							any_artifact = {
								has_artifact_flag = looted_artifact_tooltip_1
							}
						}
					}
				}
				random_artifact = {
					limit = {
						quality == 5
						NOT = { has_artifact_flag = no_usurp_transfer }
						NOT = { has_artifact_flag = valyrian_steel }
						NOT = { has_artifact_flag = valyrian_armour }
						NOT = { has_artifact_flag = lost_artifact }
					}
					set_artifact_flag = looted_artifact_tooltip_1
					set_artifact_flag = looted_artifact_tooltip_2
				}
				ROOT = {
					set_character_flag = looted_artifact_destroy_duplicate
				}
			}
		}
	}
	
	option = {
		name = {
			text = EVTOPTA_MNM_9910
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTC_MNM_9910
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		tooltip = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				show_scope_change = no
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
		}
	}
	
	option = {
		name = {
			text = EVTOPTB_MNM_9910
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = no
			}
		}
		name = {
			text = EVTOPTD_MNM_9910
			trigger = {
				looting_artifact_event_religious_artifacts_trigger = yes
			}
		}
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
		}
		tooltip = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_1
					}
					show_scope_change = no
					destroy_artifact = yes
				}
			}
		}
		hidden_effect = {
			random_artifact = {
				limit = {
					has_artifact_flag = looted_artifact_tooltip_1
				}
				clr_artifact_flag = looted_artifact_tooltip_1
			}
			FROM = {
				character_event = { id = MNM.9911 }
			}
		}
	}
}

character_event = {
	id = MNM.9911
    desc = {
		text = EVTDESC_MNM_9911_A
		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
	}
	desc = {
		text = EVTDESC_MNM_9911_B
		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}
	}
    picture = GFX_evt_relic_box
    border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_MNM_9911
		trigger = {
			FROM  = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
		
		tooltip = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					show_scope_change = no
					transfer_artifact = {
						from = ROOT
						to = THIS
					}
				}
			}
		}
		hidden_effect = {
			FROM = {
				random_artifact = {
					limit = {
						has_artifact_flag = looted_artifact_tooltip_2
					}
					clr_artifact_flag = looted_artifact_tooltip_2
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_MNM_9911
		trigger = {
			FROM =  { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		random_artifact = {
			limit = {
				has_artifact_flag = looted_artifact_tooltip_2
			}
			show_scope_change = no
			clr_artifact_flag = looted_artifact_tooltip_2
			destroy_artifact = yes
		}
		FROM = {
			clr_character_flag = looted_artifact_destroy_duplicate
		}
	}
}

###AGOT: Artifact mangement menu
character_event = {
	id = MNM.9949
	desc = EVTDESCMNM.9949
	
	is_triggered_only = yes
	
	immediate = {
		if = { #AI may already have artifact selected in MNM.9990
			limit = { NOT = { event_target:artifact_to_manage = { always = yes } } }
			FROMFROM = { save_event_target_as = artifact_to_manage }
		}
		event_target:artifact_to_manage = {
			if = { #find artifact sale value
				limit = { 
					NOT = { has_artifact_flag = no_usurp_transfer }
					NOT = { has_artifact_flag = curse }
				}
				ROOT = { set_variable = { which = artifact_value value = 0 } }
				if = {
					limit = { quality == 1 }
					ROOT = { set_variable = { which = artifact_value value = 40 } }
				}
				if = {
					limit = { quality == 2 }
					ROOT = { set_variable = { which = artifact_value value = 80 } }
				}
				if = {
					limit = { quality == 3 }
					ROOT = { set_variable = { which = artifact_value value = 160 } }
				}
				if = {
					limit = { quality == 4 }
					ROOT = { set_variable = { which = artifact_value value = 320 } }
				}
				if = {
					limit = { 
						OR = {
							quality == 5
							quality > 5
						}	
					}
					ROOT = { set_variable = { which = artifact_value value = 640 } }
				}
				if = { #books are cheaper
					limit = { has_artifact_flag = book }
					ROOT = { divide_variable = { which = artifact_value value = 2 } }
				}
				if = { #skull price dependent on dragon size
					limit = { has_artifact_flag = dragon_skull }
					dragon = {
						limit = { event_target:artifact_to_manage = { has_artifact_flag = dragon_@PREV } }
						if = {
							limit = { NOT = { age = 20 } }
							ROOT = { multiply_variable = { which = artifact_value value = 0.25 } }
						}
						else_if = {
							limit = { NOT = { age = 50 } }
							ROOT = { multiply_variable = { which = artifact_value value = 0.375 } }
						}
						else_if = {
							limit = { NOT = { age = 80 } }
							ROOT = { multiply_variable = { which = artifact_value value = 0.5 } }
						}
						else_if = {
							limit = { NOT = { age = 110 } }
							ROOT = { multiply_variable = { which = artifact_value value = 0.625 } }
						}
						else_if = {
							limit = { NOT = { age = 140 } }
							ROOT = { multiply_variable = { which = artifact_value value = 0.75 } }
						}
						else_if = {
							limit = { NOT = { age = 170 } }
							ROOT = { multiply_variable = { which = artifact_value value = 0.875 } }
						}
					}
				}
				if = { #valyrian steel is more expensive
					limit = { has_artifact_flag = valyrian_steel }
					ROOT = { multiply_variable = { which = artifact_value value = 1.5625 } }
				}
				if = { #valyrian armour is more expensive (1000)
					limit = { has_artifact_flag = valyrian_armour }
					ROOT = { set_variable = { which = artifact_value value = 1000 } }
				}
			}
		}
	}
	
	option = {
		name = EVTOPTAMNM.9949 #Destroy
		trigger = {
			ai = no
			event_target:artifact_to_manage = { is_indestructible = no }
		}
		event_target:artifact_to_manage = {
			destroy_artifact = yes
		}
	}
	option = {
		name = EVTOPTBMNM.9949 #Rename
		trigger = {
			ai = no
			#higher_tier_than = COUNT
			event_target:artifact_to_manage = {
				NOT = { artifact_type = glass_candle }	
				NOT = { artifact_type = royce_bronze_armor }	
				NOT = { has_artifact_flag = book }	
				NOT = { has_artifact_flag = canon_sword }
				NOT = { has_artifact_flag = curse }
			}
		}
		
		custom_tooltip = {
			text = TOOLTIPrename_artifact
			hidden_tooltip = {		
				event_target:artifact_to_manage = {
					prompt_name = {
						player = ROOT
						type = RENAME_ARTIFACT_MESSAGE
					}
					if = {
						limit = { has_artifact_flag = combat_weapon }
						set_artifact_flag = named_sword
					}
				}
				# set_character_flag = renaming_artifact
				# c_artifact_rename = { 
					# gain_title = ROOT
					# set_name = [event_target:artifact_to_manage.GetName] 
				# }
				# character_event = { id = MNM.9950 days = 2 }
				# capital_scope = { province_event = { id = MNM.9951 days = 3 } } #failsafe destroy title
			}
		}
	}
	option = {
		name = EVTOPTEMNM.9949 #Suggest Name
		trigger = {
			ai = no
			event_target:artifact_to_manage = {
				has_artifact_flag = combat_weapon
				NOT = { has_artifact_flag = canon_sword }
			}
		}
		custom_tooltip = {
			text = TOOLTIPMNM.9949_sugges_name
			hidden_tooltip = {		
				character_event = { id = MNM.9952 }
			}
		}
	}
	option = {
		name = EVTOPTCMNM.9949 #Sell
		trigger = {
			event_target:artifact_to_manage = { 
				NOT = { has_artifact_flag = no_usurp_transfer }
				NOT = { has_artifact_flag = curse }
			}
		}
		ai_chance = { factor = 1 }
		custom_tooltip = {
			text = TOOLTIPMNM.9949SELL
			set_character_flag = selling_artifact
			hidden_tooltip = {
				set_variable = { which = prestige_loss which = artifact_value } 
				multiply_variable = { which = prestige_loss value = -1 } 
				random_list = {
					500 = { #NPC merchant
						trigger = { event_target:artifact_to_manage = { is_indestructible = no } }
						character_event = { id = MNM.9955 }
					}
					500 = { #Another ruler
						random_playable_ruler = {
							limit = {
								has_regent = no
								is_within_diplo_range = ROOT
								opinion = { who = ROOT value = -25 }
								reverse_opinion = { who = ROOT value = -25 }
								OR = {
									wealth = 640
									monthly_income = 15
									AND = {
										OR = {
											wealth = 500
											monthly_income = 10
										}	
										ROOT = { NOT = { check_variable = { which = artifact_value value = 550 } } }
									}
									AND = {
										OR = {
											wealth = 320
											monthly_income = 8
										}
										ROOT = { NOT = { check_variable = { which = artifact_value value = 350 } } }
									}
									AND = {
										OR = {
											wealth = 160
											monthly_income = 5
										}
										ROOT = { NOT = { check_variable = { which = artifact_value value = 200 } } }
									}
									AND = {
										wealth = 80
										ROOT = { NOT = { check_variable = { which = artifact_value value = 100 } } }
									}
									AND = {
										wealth = 40
										ROOT = { NOT = { check_variable = { which = artifact_value value = 50 } } }
									}						
								}
								NOT = { has_character_flag = loan_taken }
								NOT = { has_character_modifier = loan_timer }
								NOT = { has_character_flag = offended_moneylenders }
								war = no
								is_nomadic = no
								NOT = { trait = wildling }
								can_press_claims_trigger = yes
								NOT = { is_inaccessible_trigger = yes }
								NOT_mythical_creature_trigger = yes
								NOT = { trait = temperate }
								
								event_target:artifact_to_manage = { artifact_can_be_gifted_to = PREV }
								trigger_if = {
									limit = { 
										event_target:artifact_to_manage = { 
											has_artifact_flag = combat_weapon
											NOT = { has_artifact_flag = valyrian_steel }
										} 
									}
									NOT = {
										any_artifact = {
											has_artifact_flag = combat_weapon
											quality >= event_target:artifact_to_manage
										}
									}
								}
								trigger_if = {
									limit = { event_target:artifact_to_manage = { has_artifact_flag = flagship } }
									OR = {
										tier = EMPEROR
										AND = {
											independent = yes
											tier = KING
											primary_title = { NOT = { check_variable = { which = "de_facto_empire" value = 1 } } }
										}
										is_patrician = yes
										trait = pirate
										is_seafarer = yes
									}
									NOT = {
										any_artifact = {
											has_artifact_flag = flagship
											quality >= event_target:artifact_to_manage
										}
									}
								}
								trigger_if = {
									limit = { event_target:artifact_to_manage = { has_artifact_flag = armor } }
									NOT = {
										any_artifact = {
											has_artifact_flag = armor
											quality >= event_target:artifact_to_manage
										}
									}
								}
								trigger_if = {
									limit = { event_target:artifact_to_manage = { has_artifact_flag = ceremonial_weapon } }
									NOT = {
										any_artifact = {
											has_artifact_flag = ceremonial_weapon
											quality >= event_target:artifact_to_manage
										}
									}
								}
								trigger_if = {
									limit = { event_target:artifact_to_manage = { has_artifact_flag = crown_jewel } }
									OR = {
										is_feudal_monarch_trigger = yes
										trait = proud									
									}
									NOT = {
										any_artifact = {
											has_artifact_flag = crown_jewel
											quality > event_target:artifact_to_manage
										}
									}
								}
								OR = {
									event_target:artifact_to_manage = { NOT = { has_artifact_flag = book } }
									event_target:artifact_to_manage = { quality > 1 }
									can_use_book_trigger = yes								
								}
							}
							event_target:artifact_to_manage = { save_event_target_as = artifact_to_sell }
							character_event = { id = MNM.9957 }
							break = yes	
						}		
						#small chance of a rich merchant being created
						if = {
							limit = { event_target:artifact_to_manage = { NOT = { has_artifact_flag = flagship } } }
							random = {
								chance = 20
								random_playable_ruler = {
									limit = {
										is_within_diplo_range = ROOT
										NOT = { character = ROOT }
										war = no
										is_nomadic = no
										NOT = { trait = wildling }
										can_press_claims_trigger = yes
										NOT_mythical_creature_trigger = yes
									}
									preferred_limit = {
										OR = {
											is_patrician = yes
											capital_scope = { has_trade_post = yes }
										}	
									}
									create_random_steward = {
										random_traits = yes
										dynasty = none
										female = no
										culture = THIS
										religion = THIS
										historical = yes
									}
									new_character = {
										wealth = 100
										set_immune_to_pruning = yes								
										remove_trait = slow
										remove_trait = imbecile
										remove_trait = dull
										remove_lifestyle_trait_effect = yes
										if = {
											limit = { event_target:artifact_to_manage = { has_artifact_flag = book } }
											while = {
												limit = { NOT = { learning = 8 } }
												change_learning = 1
											}
										}
										if = {
											limit = { event_target:artifact_to_manage = { has_artifact_flag = crown_jewel } }
											add_trait = proud
										}
										random_list = { # Flavor Randomization
											15 = { 
												# Nothing
											}
											15 = {
												change_stewardship = 2
											}
											10 = {
												add_trait = ambitious
											}
											10 = {
												add_trait = architect
											}
											10 = {
												add_trait = administrator
											}
											10 = {
												add_trait = diligent
											}
											5 = {
												add_trait = greedy
											}
											5 = {
												trigger = { 
													is_smart_incl_genius_trigger = no
												}
												add_trait = shrewd
											}
										}
										random_list = {								
											10 = { add_trait = trained_warrior }
											30 = { add_trait = poor_warrior }
											60 = { }
										}
										
										event_target:artifact_to_manage = { save_event_target_as = artifact_to_sell }
										character_event = { id = MNM.9957 }
										break = yes	
									}
								}
							}
						}	
						#If no ruler found, default to NPC merchant or no sale
						if = {
							limit = { event_target:artifact_to_manage = { is_indestructible = no } }					
							character_event = { id = MNM.9955 }
							break = yes	
						}
						
						character_event = { id = MNM.9956 }
					}					
				}
			}
		}		
	}
	# option = {
		# name = EVTOPTDMNM.9949 #View History
		# trigger = {
			# event_target:artifact_to_manage = { 
				# has_artifact_flag = track_history
			# }
		# }
		# character_event = { id = MNM.9970 tooltip = TOOLTIPMNM.9970 }
	# }
	option = {
		name = EVTOPTZMNM.9949 #Cancel	
		ai_chance = { factor = 0 }
	}
	after = {
		if = {
			limit = { NOT = { has_character_flag = selling_artifact } }
			clr_character_flag = managing_artifact
			hidden_tooltip = { set_variable = { which = artifact_value value = 0 } }
		}	
	}
}
# character_event = {
	# id = MNM.9950
	# desc = EVTDESCMNM.9950
	
	# is_triggered_only = yes
	
	# immediate = { c_artifact_rename = { save_event_target_as = new_artifact_name } }
	
	# option = {
		# name = OK
		# FROMFROMFROM = { 
			# set_name = [new_artifact_name.GetName] 
			# if = {
				# limit = { has_artifact_flag = combat_weapon }
				# set_artifact_flag = named_sword
			# }
		# }
	# }
	# # option = { #DISABLED, title adjective too short
		# # name = EVTOPTBMNM.9950
		# # FROMFROMFROM = { 
			# # set_name = [new_artifact_name.GetName] 
			# # set_description = [new_artifact_name.GetAdjective] 			
		# # }	
	# # }

	# after = {
		# FROMFROMFROM = { 
			# if = {
				# limit = { artifact_type = valyrian_steel }
				# set_artifact_flag = named_sword #so name will be used in custom localisation
			# }
		# }
		# hidden_tooltip = { c_artifact_rename = { destroy_landed_title = yes } }
		# clr_character_flag = renaming_artifact
	# }
# }	
# province_event = { #failsafe destroy title
	# id = MNM.9951
	
	# is_triggered_only = yes
	# hide_window = yes
	
	# immediate = { 
		# c_artifact_rename = { 
			# activate_title = { title = THIS status = no }
			# unsafe_destroy_landed_title = THIS
			# destroy_landed_title = THIS
			# if = {
				# limit = { has_holder = yes }
				# create_character = {
					# random_traits = yes
					# dynasty = actually_culture
					# culture = ROOT
					# religion = ROOT
				# }
				# new_character = { 
					# gain_title = PREV
					# set_defacto_liege = THIS
					# death = yes
				# }
			# }	
			# if = {
				# limit = { has_holder = yes }
				# e_rebels = { holder_scope = { gain_title = PREVPREV } }
			# }	
		# }
	# }
	
	# option = {
		# name = OK
	# }
# }	
#Suggested weapon name
character_event = {
	id = MNM.9952
	desc = EVTDESCMNM.9952
	
	is_triggered_only = yes
	
	immediate = {
		event_target:artifact_to_manage = { 
			set_artifact_flag = suggesting_name
		}
	}
	
	option = {
		name = EVTOPTAMNM.9952
		event_target:artifact_to_manage = { 
			get_random_sword_name_effect = yes
			clr_artifact_flag = suggesting_name
		}
	}
	# option = {
		# name = EVTOPTBMNM.9952
		# event_target:artifact_to_manage = { 
			# get_random_sword_name_effect = yes
		# }
	# }
	option = {
		name = EVTOPTCMNM.9952 #more choices
		character_event = { id = MNM.9952 days = 1 }
	}	
	option = {
		name = EVTOPTDMNM.9952 #cancel
	}
}	
#Artifact sold to NPC trader
character_event = {
	id = MNM.9955
	desc = EVTDESCMNM.9955
	
	is_triggered_only = yes
	
	option = {
		name = OK
		wealth = artifact_value
		prestige = prestige_loss
		event_target:artifact_to_manage = { destroy_artifact = yes }
		clr_character_flag = selling_artifact
		clr_character_flag = managing_artifact
		hidden_tooltip = { 
			set_variable = { which = artifact_value value = 0 } 
			set_variable = { which = prestige_loss value = 0 } 
		}
	}
}	
#No buyer can be found
character_event = {
	id = MNM.9956
	desc = EVTDESCMNM.9956
	
	is_triggered_only = yes
	
	option = {
		name = OK
	}
	option = { #Let me know
		name = EVTOPTBMNM.9956
		trigger = {
			ai = no
			event_target:artifact_to_manage = { is_indestructible = yes }
		}
		custom_tooltip = {
			text = TOOLTIPMNM.9956
			event_target:artifact_to_manage = {
				save_event_target_as = artifact_to_sell 
				set_variable = { which = artifact_value which = ROOT }
				set_variable = { which = prestige_loss which = ROOT }
			}
			character_event = { id = MNM.9960 days = 180 }
		}
	}
	after = {
		clr_character_flag = selling_artifact
		clr_character_flag = managing_artifact
		hidden_tooltip = { 
			set_variable = { which = artifact_value value = 0 } 
			set_variable = { which = prestige_loss value = 0 } 
		}
	}
	
}
#Ruler offered to buy artifact
character_event = {
	id = MNM.9957
	desc = EVTDESCMNM.9957
	
	is_triggered_only = yes
	
	immediate = { 
		set_variable = { which = artifact_value which = FROM } 
		multiply_variable = { which = artifact_value value = -1 } 
	}
	
	option = {
		name = EVTOPTAMNM.9957	
		tooltip = {
			wealth = artifact_value
			event_target:artifact_to_sell = { 
				transfer_artifact = {
					from = ROOT_FROM
					to = ROOT
				}
			}
		}	
		hidden_tooltip = { FROM = { character_event = { id = MNM.9958 } } }
	}
	option = {
		name = EVTOPTBMNM.9957 #No
		trigger = { ai = no }
		hidden_tooltip = { FROM = { character_event = { id = MNM.9959 } } }
	}
}	
#Artifact sold to ruler
character_event = {
	id = MNM.9958
	desc = EVTDESCMNM.9958
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAMNM.9958
		wealth = artifact_value
		hidden_tooltip = { 
			FROM = { 
				if = {
					limit = { is_ruler = no }
					wealth = artifact_value 
				}	
			} 
		}
		prestige = prestige_loss
		event_target:artifact_to_sell = { 
			transfer_artifact = {
				from = ROOT
				to = ROOT_FROM
			}
			hidden_tooltip = {
				clr_artifact_flag = title_heirloom_@ROOT
				any_artifact_owner = {
					limit = {
						dynasty = ROOT
						NOT = { dynasty = 0 }
						event_target:artifact_to_sell = { has_artifact_flag = heirloom_@PREV }
					}
					event_target:artifact_to_sell = { clr_artifact_flag = heirloom_@PREV }					
				}
			}
		}
		hidden_tooltip = {
			any_demesne_title = {
				limit = {
					higher_tier_than = DUKE
					event_target:artifact_to_sell = { has_artifact_flag = heirloom_@PREV }
				}	
				event_target:artifact_to_sell = { clr_artifact_flag = heirloom_@PREV }
			}
		}
	}
	option = {
		name = EVTOPTBMNM.9958 #Change mind
		trigger = { FROM = { ai = yes } }
	}
	after = {
		clr_character_flag = selling_artifact
		clr_character_flag = managing_artifact
		hidden_tooltip = { 			
			set_variable = { which = prestige_loss value = 0 } 
			set_variable = { which = artifact_value value = 0 } 
			FROM = { set_variable = { which = artifact_value value = 0 } }
		}
	}
}	
#Artifact sale rejected
character_event = {
	id = MNM.9959
	desc = EVTDESCMNM.9959
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAMNM.9959
		clr_character_flag = selling_artifact
		clr_character_flag = managing_artifact
		hidden_tooltip = { 
			set_variable = { which = artifact_value value = 0 } 
			set_variable = { which = prestige_loss value = 0 } 
			FROM = { set_variable = { which = artifact_value value = 0 } }
		}
	}
}	
#Search for artifact sale for player every 6 months
character_event = {
	id = MNM.9960
	
	is_triggered_only = yes
	hide_window = yes
	ai = no
	
	trigger = {
		event_target:artifact_to_sell = { owner = { character = ROOT } }
	}
	
	immediate = {
		random_playable_ruler = {
			limit = {
				ai = yes
				
				has_regent = no
				is_within_diplo_range = ROOT
				opinion = { who = ROOT value = -25 }
				reverse_opinion = { who = ROOT value = -25 }
				OR = {
					wealth = 640
					monthly_income = 15
					AND = {
						OR = {
							wealth = 500
							monthly_income = 10
						}	
						event_target:artifact_to_sell = { NOT = { check_variable = { which = artifact_value value = 550 } } }
					}
					AND = {
						OR = {
							wealth = 320
							monthly_income = 8
						}
						event_target:artifact_to_sell = { NOT = { check_variable = { which = artifact_value value = 350 } } }
					}
					AND = {
						OR = {
							wealth = 160
							monthly_income = 5
						}
						event_target:artifact_to_sell = { NOT = { check_variable = { which = artifact_value value = 200 } } }
					}
					AND = {
						wealth = 80
						event_target:artifact_to_sell = { NOT = { check_variable = { which = artifact_value value = 100 } } }
					}
					AND = {
						wealth = 40
						event_target:artifact_to_sell = { NOT = { check_variable = { which = artifact_value value = 50 } } }
					}						
				}
				NOT = { has_character_flag = loan_taken }
				NOT = { has_character_modifier = loan_timer }
				NOT = { has_character_flag = offended_moneylenders }
				war = no
				is_nomadic = no
				NOT = { trait = wildling }
				can_press_claims_trigger = yes
				NOT = { is_inaccessible_trigger = yes }
				NOT_mythical_creature_trigger = yes
				NOT = { trait = temperate }
				event_target:artifact_to_sell = { artifact_can_be_gifted_to = PREV }
				trigger_if = {
					limit = { 
						event_target:artifact_to_sell = { 
							has_artifact_flag = combat_weapon
							NOT = { has_artifact_flag = valyrian_steel }
						} 
					}
					NOT = {
						any_artifact = {
							has_artifact_flag = combat_weapon
							quality >= event_target:artifact_to_sell
						}
					}
				}
				trigger_if = {
					limit = { event_target:artifact_to_sell = { has_artifact_flag = flagship } }
					OR = {
						tier = EMPEROR
						AND = {
							independent = yes
							tier = KING
							primary_title = { NOT = { check_variable = { which = "de_facto_empire" value = 1 } } }
						}
						is_patrician = yes
						trait = pirate
						is_seafarer = yes
					}
					NOT = {
						any_artifact = {
							has_artifact_flag = flagship
							quality >= event_target:artifact_to_sell
						}
					}
				}
				trigger_if = {
					limit = { event_target:artifact_to_sell = { has_artifact_flag = armor } }
					NOT = {
						any_artifact = {
							has_artifact_flag = armor
							quality >= event_target:artifact_to_sell
						}
					}
				}
				trigger_if = {
					limit = { event_target:artifact_to_sell = { has_artifact_flag = ceremonial_weapon } }
					NOT = {
						any_artifact = {
							has_artifact_flag = ceremonial_weapon
							quality >= event_target:artifact_to_sell
						}
					}
				}
				trigger_if = {
					limit = { event_target:artifact_to_sell = { has_artifact_flag = crown_jewel } }
					OR = {
						is_feudal_monarch_trigger = yes
						trait = proud									
					}
					NOT = {
						any_artifact = {
							has_artifact_flag = crown_jewel
							quality > event_target:artifact_to_sell
						}
					}
				}
				OR = {
					event_target:artifact_to_sell = { NOT = { has_artifact_flag = book } }
					event_target:artifact_to_sell = { quality > 1 }
					can_use_book_trigger = yes								
				}
			}
			ROOT = {
				set_variable = { which = artifact_value which = event_target:artifact_to_sell }
				set_variable = { which = prestige_loss which = event_target:artifact_to_sell }
			}
			event_target:artifact_to_sell = {
				set_variable = { which = artifact_value value = 0 } 
				set_variable = { which = prestige_loss value = 0 } 
			}
			character_event = { id = MNM.9957 }
			break = yes	
		}
		#If none found, try again
		repeat_event = { id = MNM.9960 days = 180 }
	}
	
	option = {
		name = OK
	}
}	
# #Artifact display history
# character_event = {
	# id = MNM.9970
	# desc = EVTDESCMNM.9970
	# picture = "GFX_evt_valyrian_steel"
	
	# is_triggered_only = yes
	
	# immediate = {
		# hidden_tooltip = {
			# while = {
				# limit = { 
					# held_important_artifact = { 
						# FROMFROMFROM = { has_artifact_flag = previous_holder_@PREV }
						# NOT = { trait = employmarshall }
					# }
					# NOT = { has_character_flag = SEARCH_FAILED }
				# }			
				# clr_character_flag = artifact_owner_found
				# random_landed_title = {
					# limit = {
						# NOT = { has_title_flag = artifact_link }						
					# }						
					# held_important_artifact = { 
						# limit = {
							# FROMFROMFROM = { has_artifact_flag = previous_holder_@PREV }
							# NOT = { trait = employmarshall }
						# }	
						# set_character_flag = artifact_link_@PREV
						# ROOT = { set_character_flag = artifact_owner_found }	
						# add_trait = employmarshall												
					# }						
					# set_title_flag = artifact_link						
				# }
				# if = {
					# limit = { NOT = { has_character_flag = artifact_owner_found } }
					# set_character_flag = SEARCH_FAILED
				# }
			# }
			# clr_character_flag = artifact_owner_found
			# clr_character_flag = SEARCH_FAILED
		# }	
	# }
	
	# option = {
		# name = OK
		# any_landed_title = {
			# limit = { has_title_flag = artifact_link }
			# show_scope_change = no
			# held_important_artifact = { 
				# limit = {
					# FROMFROMFROM = { has_artifact_flag = previous_holder_@PREV }
					# has_character_flag = artifact_link_@PREV
				# }					
				# custom_tooltip = { text = TOOLTIPMNM.9970HOLDER }
				# show_portrait = yes
				# tooltip = { }
				# hidden_tooltip = { remove_trait = employmarshall }
				# clr_character_flag = artifact_link_@PREV
			# }
			# clr_title_flag = artifact_link
		# }	
	# }
# }	
#Artifact stolen
character_event = {
	id = MNM.9972

	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		any_artifact = { 
			is_indestructible = no 
			NOT = { has_artifact_flag = flagship }
		}
		#Only happens to low intrigue characters
		NOT = { intrigue = 8 }
		NAND = {
			is_ruler = yes
			realm_intrigue = 25
		}
		NAND = {
			is_ruler = no
			liege = {
				is_close_relative = ROOT
				realm_intrigue = 25
			}	
		}
		NOT_mythical_creature_trigger = yes
		NOT = { has_character_flag = searching_for_lost_artifact }
	}
	
	weight_multiplier = {
		factor = 1
	}
	
	immediate = {
		set_character_flag = artifact_stolen
		random_artifact = {
			limit = { 
				is_indestructible = no 
				NOT = { has_artifact_flag = flagship }
			}
			set_artifact_flag = lost_artifact
			save_event_target_as = lost_artifact
		}
		character_event = { id = MNM.9973 }
	}

	option = {
		name = OK
	}
}	
#Artifact lost after siege
character_event = {
	id = MNM.99729

	is_triggered_only = yes
	hide_window = yes
	prisoner = no
	
	trigger = {
		any_artifact = { 
			is_indestructible = no 
			NOT = { has_artifact_flag = flagship }
			NOT = { has_artifact_flag = looted_artifact_tooltip_1 }
			NOT = { has_artifact_flag = looted_artifact_tooltip_2 }
		}
		has_pilgrimage_trait_trigger = no
		NOT_mythical_creature_trigger = yes
		FROM = {
			holder_scope = {
				NOR = {
					character = ROOT
					is_vassal_or_below = ROOT
					is_liege_or_above = ROOT
				}
			}
		}
	}
	
	weight_multiplier = {
		factor = 1
	}
	
	immediate = {
		set_character_flag = artifact_lost_in_siege
		random_artifact = {
			limit = { 
				is_indestructible = no 
				NOT = { has_artifact_flag = flagship }
				NOT = { has_artifact_flag = looted_artifact_tooltip_1 }
				NOT = { has_artifact_flag = looted_artifact_tooltip_2 }
			}
			set_artifact_flag = lost_artifact
			save_event_target_as = lost_artifact
		}
		character_event = { id = MNM.9973 }
	}

	option = {
		name = OK
	}
}	
character_event = { 
	id = MNM.9973
	
	is_triggered_only = yes
	
	desc = {
		text = EVTDESCMNM.9973A
		trigger = { has_character_flag = artifact_stolen }
	}	
	desc = {
		text = EVTDESCMNM.9973B
		picture = GFX_evt_siege
		trigger = { has_character_flag = artifact_lost_in_siege }
	}
	
	option = {
		name = EVTOPTAMNM.9973
		ai_chance = {
			factor = 1
		}
		if = { #inform liege
			limit = { 
				is_ruler = no 
				liege = {
					ai = no
					is_close_relative = ROOT
				}
			}
			liege = { character_event = { id = MNM.9974 } }
		}
		event_target:lost_artifact = { destroy_artifact = yes }
		clr_character_flag = artifact_stolen
		clr_character_flag = artifact_lost_in_siege
	}
	option = {
		name = EVTOPTBMNM.9973 #Fund a search
		trigger = {
			OR = {
				is_playable = yes
				AND = {
					wealth = 20
					event_target:lost_artifact = { quality == 1 }
				}	
				AND = {
					wealth = 40
					event_target:lost_artifact = { quality == 2 }
				}
				AND = {
					wealth = 80
					event_target:lost_artifact = { quality == 3 }
				}
				AND = {
					wealth = 160
					event_target:lost_artifact = { quality == 4 }
				}
				wealth = 320
			}
		}
		ai_chance = {
			factor = 9999
			modifier = { #has a better weapon anyway
				factor = 0
				event_target:lost_artifact = {
					has_artifact_flag = combat_weapon
					quality < 3
				}
				any_artifact = {
					quality >= 3
					has_artifact_flag = combat_weapon
				}
			}
			modifier = { #has better armor anyway
				factor = 0
				event_target:lost_artifact = {
					has_artifact_flag = armor
					quality < 3
				}
				any_artifact = {
					quality >= 3
					has_artifact_flag = armor
				}
			}
			modifier = { #Don't care about low value books
				factor = 0
				event_target:lost_artifact = {
					has_artifact_flag = book
					quality == 1
				}
				can_use_book_trigger = no
			}
			modifier = {
				factor = 0
				event_target:lost_artifact = {
					has_artifact_flag = prosthetic
					is_artifact_active = no
				}
			}
		}
		random_list = {
			75 = {
				modifier = {
					factor = 0.75
					NOT = { intrigue = 2 }
				}
				modifier = {
					factor = 0.75
					NOT = { intrigue = 5 }
				}
				modifier = {
					factor = 0.66
					is_ruler = yes
					NOT = { realm_intrigue = 15 }
				}
				modifier = {
					factor = 0.66
					is_ruler = yes
					NOT = { realm_intrigue = 20 }
				}
				modifier = {
					factor = 0.66
					is_ruler = no
					liege = { NOT = { realm_intrigue = 15 } }
				}
				modifier = {
					factor = 0.66
					is_ruler = no
					liege = { NOT = { realm_intrigue = 20 } }
				}
				character_event = { id = MNM.9975 days = 60 random = 30 tooltip = TOOLTIPMNM.9975 }
			}
			25 = {
				character_event = { id = MNM.9976 days = 60 random = 30 tooltip = TOOLTIPMNM.9976 }
			}
		}
		event_target:lost_artifact = { 
			if = {
				limit = { quality == 1 }
				ROOT = { wealth = -20 }
			}
			else_if = {
				limit = { quality == 2 }
				ROOT = { wealth = -40 }
			}
			else_if = {
				limit = { quality == 3 }
				ROOT = { wealth = -80 }
			}
			else_if = {
				limit = { quality == 4 }
				ROOT = { wealth = -160 }
			}
			else = {
				ROOT = { wealth = -320 }
			}
			hidden_tooltip = { #temporarily give to hidden rebels
				e_rebels = {
					holder_scope = {
						event_target:lost_artifact = { 
							transfer_artifact = {
								to = PREV
								from = ROOT
							}
						}
					}
				}
			}
		}
		set_character_flag = searching_for_lost_artifact
	}
}	
character_event = { #Inform liege
	id = MNM.9974
	desc = EVTDESCMNM.9974
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAMNM.9974
		tooltip = { event_target:lost_artifact = { destroy_artifact = yes } }
	}
}	
character_event = { #Artifact found
	id = MNM.9975
	picture = GFX_evt_treasure_chamber
	
	desc = {
		text = EVTDESCMNM.9975A #found in library
		picture = GFX_evt_library
		trigger = {
			event_target:lost_artifact = { has_artifact_flag = book } 
		}
	}
	desc = {
		text = EVTDESCMNM.9975B #found in armoury
		trigger = {
			event_target:lost_artifact = {
				OR = {
					has_artifact_flag = combat_weapon
					has_artifact_flag = armor
				}
			} 
		}
	}
	desc = {
		text = EVTDESCMNM.9975C #found in vault
		picture = GFX_evt_into_the_dungeon
		trigger = {
			is_nomadic = no
			NOT = { government = wildling_feudal_government }
			event_target:lost_artifact = { NOT = { artifact_type = gift_zorse } }
		}
	}
	desc = {
		text = EVTDESCMNM.9975D #thief found in city
		picture = GFX_evt_judged_by_ruler
	}
	desc = {
		text = EVTDESCMNM.9975E #found in the mud
		picture = GFX_evt_siege
		trigger = {
			has_character_flag = artifact_lost_in_siege
			event_target:lost_artifact = { NOT = { artifact_type = gift_zorse } }
		}
	}
	desc = {
		text = EVTDESCMNM.9975F #found in wagon
		trigger = {
			is_nomadic = yes
			event_target:lost_artifact = { NOT = { artifact_type = gift_zorse } }
		}
	}
	desc = {
		text = EVTDESCMNM.9975G #thief is a servant
		picture = GFX_evt_judged_by_ruler
	}
	desc = {
		text = EVTDESCMNM.9975H #found running around
		picture = GFX_evt_zorse
		trigger = {
			event_target:lost_artifact = { artifact_type = gift_zorse } 
		}
	}
	desc = {
		text = EVTDESCMNM.9975I #found at jewellery merchant
		picture = GFX_evt_judged_by_ruler
		trigger = {
			event_target:lost_artifact = { has_artifact_flag = jewelry } 
		}
	}
	desc = {
		text = EVTDESCMNM.9975J #Man claims bounty
	}
	desc = {
		text = EVTDESCMNM.9975K #Ransom paid
	}
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAMNM.9975
		event_target:lost_artifact = { 
			custom_tooltip = {
				text = TOOLTIPMNM.9975
				clr_artifact_flag = lost_artifact
				transfer_artifact = {
					to = ROOT
					from = owner
				}
			}
		}
		clr_character_flag = artifact_stolen
		clr_character_flag = artifact_lost_in_siege
		clr_character_flag = searching_for_lost_artifact
	}
}	
character_event = { #Artifact not found
	id = MNM.9976
	desc = EVTDESCMNM.9976
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAMNM.9976
		if = { #inform liege
			limit = { 
				is_ruler = no 
				liege = {
					ai = no
					is_close_relative = ROOT
				}
			}
			liege = { character_event = { id = MNM.9974 } }
		}
		prestige = -30
		hidden_tooltip = {
			event_target:lost_artifact = { destroy_artifact = yes }
		}
		clr_character_flag = artifact_stolen
		clr_character_flag = artifact_lost_in_siege
		clr_character_flag = searching_for_lost_artifact
	}
}	
#AI short on cash, sell artifact
character_event = { 
	id = MNM.9990
	
	is_triggered_only = yes
	only_rulers = yes
	ai = yes
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		NOT = { wealth = -25 }
		num_of_artifacts = 1
		NOT = { trait = proud }
	}
	
	weight_multiplier = {
		factor = 1
		
		modifier = {
			factor = 4
			NOT = { wealth = -100 }
		}
		modifier = {
			factor = 4
			NOT = { wealth = -250 }
		}
		modifier = {
			factor = 4
			trait = cynical
		}
		modifier = {
			factor = 4
			trait = content
		}
		modifier = {
			factor = 4
			trait = humble
		}
		modifier = {
			factor = 0.25
			trait = ambitious
		}
		modifier = {
			factor = 0.25
			trait = zealous
		}
	}
	
	immediate = {
		random_artifact = {
			limit = {
				NOT = { has_artifact_flag = no_usurp_transfer }
				NOT = { has_artifact_flag = curse }
				trigger_if = { #not high quality equipped artifact
					limit = { quality > 2 }
					OR = {
						is_artifact_equipped = no
						ROOT = { trait = humble }
					}	
				}
				trigger_if = { #not very high quality artifacts
					limit = { quality > 3 }
					ROOT = { trait = humble }
				}
				trigger_if = { #only sell these if very low on cash
					limit = { 
						OR = {
							has_artifact_flag = flagship 
							has_artifact_flag = crown_jewel
							has_artifact_flag = valyrian_steel
						}
					}
					ROOT = { NOT = { wealth = -100 } }
				}
			}
			save_event_target_as = artifact_to_manage
			ROOT = { character_event = { id = MNM.9949 } }
		}
	}
	
	option = {
		name = OK
	}
}	

###Expert Metallurgist Improves Forging
character_event = { 
	id = MNM.9995	
	picture = GFX_evt_weaponsmith
    border = GFX_event_normal_frame_economy
	
	desc = {
		text = EVTDESCMNM.9995
		trigger = { event_target:metallurgist = { NOT = { character = ROOT } } }
	}	
	desc = {
		text = EVTDESCMNM.9995B
		trigger = { event_target:metallurgist = { character = ROOT } }
	}
	
	is_triggered_only = yes
	portrait = event_target:metallurgist
	
	trigger = {
    	event_target:smith = { is_alive = yes }
		any_courtier = {
			trait = metallurgist
			NOT = { is_inaccessible_trigger = yes }
			is_incapable = no
		}
		OR = {
			has_character_flag = cheap_jewels
			has_character_flag = good_jewels
			has_character_flag = cheap_weapons
			has_character_flag = good_weapons
		}
    }
	
	immediate = {
		random_courtier = {
			limit = {
				trait = metallurgist
				NOT = { is_inaccessible_trigger = yes }
				is_incapable = no
			}
			save_event_target_as = metallurgist
		}
	}
	
	option = {
		name = EVTOPTAMNM.9995 #Do it
		custom_tooltip = {
			text = TOOLTIPMNM.9995
		}
		if = {
			limit = { has_character_flag = cheap_jewels }
			wealth = -40
			clr_character_flag = cheap_jewels
			set_character_flag = good_jewels
		}
		else_if = {
			limit = { has_character_flag = good_jewels }
			wealth = -85
			clr_character_flag = good_jewels
			set_character_flag = expensive_jewels
		}
		else_if = {
			limit = { has_character_flag = cheap_weapons }
			scaled_wealth = { value = -0.17 min = -15 max = -35 }
			clr_character_flag = cheap_weapons
			set_character_flag = good_weapons
		}
		else_if = {
			limit = { has_character_flag = good_weapons }
			scaled_wealth = { value = -0.33 min = -35 max = -66 }
			clr_character_flag = good_weapons
			set_character_flag = expensive_weapons
		}
	}
	option = {
		name = EVTOPTBMNM.9995 #No
		trigger = { ai = no }
	}
}	
#Gain new title, get claims on associated artifacts
character_event = { 
	id = MNM.9999

	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
    	FROM = { #the title
			higher_tier_than = DUKE
			has_title_flag = has_artifact_claims
		}
    }
	
	immediate = {
		any_character = {
			limit = {
				num_of_artifacts = 1
				any_artifact = {
					quality >= 3
					has_artifact_flag = heirloom_@FROM
				}
			}
			any_artifact = {
				limit = {
					quality >= 3
					has_artifact_flag = heirloom_@FROM
				}	
				clr_artifact_flag = title_heirloom_@FROMFROM
				set_artifact_flag = title_heirloom_@ROOT				
			}
		}
	}
	
	option = {
		name = OK
	}
}	